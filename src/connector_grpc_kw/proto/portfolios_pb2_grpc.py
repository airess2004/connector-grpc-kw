# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import portfolios_pb2 as portfolios__pb2


class PortfoliosStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetSummaryByUser = channel.unary_unary(
                '/packets.Portfolios/GetSummaryByUser',
                request_serializer=portfolios__pb2.UserSummaryArguments.SerializeToString,
                response_deserializer=portfolios__pb2.UserSummary.FromString,
                )
        self.GetFundedLoans = channel.unary_unary(
                '/packets.Portfolios/GetFundedLoans',
                request_serializer=portfolios__pb2.PortfolioArguments.SerializeToString,
                response_deserializer=portfolios__pb2.PortfolioList.FromString,
                )
        self.GetPortfolioSummary = channel.unary_unary(
                '/packets.Portfolios/GetPortfolioSummary',
                request_serializer=portfolios__pb2.PortfolioSummaryArguments.SerializeToString,
                response_deserializer=portfolios__pb2.PortfolioSummary.FromString,
                )
        self.GetPortfolioSummaryDetail = channel.unary_unary(
                '/packets.Portfolios/GetPortfolioSummaryDetail',
                request_serializer=portfolios__pb2.PortfolioSummaryArguments.SerializeToString,
                response_deserializer=portfolios__pb2.PortfolioSummaryDetail.FromString,
                )
        self.GetPortfolioSummaryPerformance = channel.unary_unary(
                '/packets.Portfolios/GetPortfolioSummaryPerformance',
                request_serializer=portfolios__pb2.PortfolioSummaryArguments.SerializeToString,
                response_deserializer=portfolios__pb2.PortfolioSummaryPerformance.FromString,
                )
        self.GetScheduleRepayment = channel.unary_unary(
                '/packets.Portfolios/GetScheduleRepayment',
                request_serializer=portfolios__pb2.ScheduleRepaymentArguments.SerializeToString,
                response_deserializer=portfolios__pb2.PortfolioScheduleRepayment.FromString,
                )
        self.GetListSummaryProduct = channel.unary_unary(
                '/packets.Portfolios/GetListSummaryProduct',
                request_serializer=portfolios__pb2.SummaryProductsArguments.SerializeToString,
                response_deserializer=portfolios__pb2.OutputProductSummaries.FromString,
                )
        self.GetListScheduleForRepayment = channel.unary_unary(
                '/packets.Portfolios/GetListScheduleForRepayment',
                request_serializer=portfolios__pb2.ScheduleForRepaymentArguments.SerializeToString,
                response_deserializer=portfolios__pb2.OutputScheduleForRepayment.FromString,
                )
        self.GetDetailScheduleRepayment = channel.unary_unary(
                '/packets.Portfolios/GetDetailScheduleRepayment',
                request_serializer=portfolios__pb2.DetailRepaymentScheduleArguments.SerializeToString,
                response_deserializer=portfolios__pb2.OutputDetailRepaymentSchedule.FromString,
                )
        self.GetFundedLoansInstitutional = channel.unary_unary(
                '/packets.Portfolios/GetFundedLoansInstitutional',
                request_serializer=portfolios__pb2.PortfolioArgumentsInstitutional.SerializeToString,
                response_deserializer=portfolios__pb2.PortfolioListInstitutional.FromString,
                )
        self.CreateProductDetails = channel.unary_unary(
                '/packets.Portfolios/CreateProductDetails',
                request_serializer=portfolios__pb2.CreateProductDetailArguments.SerializeToString,
                response_deserializer=portfolios__pb2.OutputCreateProductDetail.FromString,
                )
        self.GetUserActiveAverageReturnPerSource = channel.unary_unary(
                '/packets.Portfolios/GetUserActiveAverageReturnPerSource',
                request_serializer=portfolios__pb2.UserSummaryActiveAverageReturnArguments.SerializeToString,
                response_deserializer=portfolios__pb2.OutputUserSummaryActiveAverageReturn.FromString,
                )
        self.GetScheduleRepaymentByProductCodeAndUserID = channel.unary_unary(
                '/packets.Portfolios/GetScheduleRepaymentByProductCodeAndUserID',
                request_serializer=portfolios__pb2.ScheduleRepaymentArguments.SerializeToString,
                response_deserializer=portfolios__pb2.PortfolioScheduleRepayment.FromString,
                )
        self.PortfolioOrderCancel = channel.unary_unary(
                '/packets.Portfolios/PortfolioOrderCancel',
                request_serializer=portfolios__pb2.OrderCancelArgumments.SerializeToString,
                response_deserializer=portfolios__pb2.OutputOrderCancel.FromString,
                )
        self.GetSumInterestAndLateReceived = channel.unary_unary(
                '/packets.Portfolios/GetSumInterestAndLateReceived',
                request_serializer=portfolios__pb2.SumInterestAndLateReceivedArgumments.SerializeToString,
                response_deserializer=portfolios__pb2.OutputSumInterestAndLateReceived.FromString,
                )
        self.GeneratePortfolio = channel.unary_unary(
                '/packets.Portfolios/GeneratePortfolio',
                request_serializer=portfolios__pb2.CheckoutOutputArgs.SerializeToString,
                response_deserializer=portfolios__pb2.CheckoutOutput.FromString,
                )
        self.GenerateRoboPortfolio = channel.unary_unary(
                '/packets.Portfolios/GenerateRoboPortfolio',
                request_serializer=portfolios__pb2.CheckoutRoboOutputArgs.SerializeToString,
                response_deserializer=portfolios__pb2.CheckoutRoboOutput.FromString,
                )
        self.PortfolioDisbursement = channel.unary_unary(
                '/packets.Portfolios/PortfolioDisbursement',
                request_serializer=portfolios__pb2.DisbursementArgumments.SerializeToString,
                response_deserializer=portfolios__pb2.DisbursementOutput.FromString,
                )
        self.LoanCancelImpacted = channel.unary_unary(
                '/packets.Portfolios/LoanCancelImpacted',
                request_serializer=portfolios__pb2.LoanCancelImpactArgumments.SerializeToString,
                response_deserializer=portfolios__pb2.LoanCancelImpactOutput.FromString,
                )
        self.GetProvisionFund = channel.unary_unary(
                '/packets.Portfolios/GetProvisionFund',
                request_serializer=portfolios__pb2.ProvisionFundArgs.SerializeToString,
                response_deserializer=portfolios__pb2.ProvisionFund.FromString,
                )
        self.UpdateLenderDPD = channel.unary_unary(
                '/packets.Portfolios/UpdateLenderDPD',
                request_serializer=portfolios__pb2.UpdateLendersDPDArgs.SerializeToString,
                response_deserializer=portfolios__pb2.UpdateLenderDPDOutput.FromString,
                )
        self.PortfoliosLateFee = channel.unary_unary(
                '/packets.Portfolios/PortfoliosLateFee',
                request_serializer=portfolios__pb2.PortfolioLateFeeArguments.SerializeToString,
                response_deserializer=portfolios__pb2.PortfolioLateFeeOutput.FromString,
                )
        self.PortfolioRestructure = channel.unary_unary(
                '/packets.Portfolios/PortfolioRestructure',
                request_serializer=portfolios__pb2.PortfolioRestructureArgs.SerializeToString,
                response_deserializer=portfolios__pb2.PortfolioRestructureOutput.FromString,
                )
        self.SetPortfolioExpired = channel.unary_unary(
                '/packets.Portfolios/SetPortfolioExpired',
                request_serializer=portfolios__pb2.SetPortfolioExpiredInput.SerializeToString,
                response_deserializer=portfolios__pb2.SetPortfolioExpiredOutput.FromString,
                )
        self.SetLoanSpreading = channel.unary_unary(
                '/packets.Portfolios/SetLoanSpreading',
                request_serializer=portfolios__pb2.SetLoanSpreadingInput.SerializeToString,
                response_deserializer=portfolios__pb2.SetLoanSpreadingOutput.FromString,
                )
        self.GetLenderTotalPaidInterest = channel.unary_unary(
                '/packets.Portfolios/GetLenderTotalPaidInterest',
                request_serializer=portfolios__pb2.GetLenderTotalPaidInterestInput.SerializeToString,
                response_deserializer=portfolios__pb2.GetLenderTotalPaidInterestOutput.FromString,
                )
        self.SetAdjustInterest = channel.unary_unary(
                '/packets.Portfolios/SetAdjustInterest',
                request_serializer=portfolios__pb2.SetAdjustInterestInput.SerializeToString,
                response_deserializer=portfolios__pb2.SetAdjustInterestOutput.FromString,
                )
        self.GetTWRPortfolioData = channel.unary_unary(
                '/packets.Portfolios/GetTWRPortfolioData',
                request_serializer=portfolios__pb2.GetTWRPortfolioDataInput.SerializeToString,
                response_deserializer=portfolios__pb2.GetTWRPortfolioDataOutput.FromString,
                )
        self.SetPortfolioNPL = channel.unary_unary(
                '/packets.Portfolios/SetPortfolioNPL',
                request_serializer=portfolios__pb2.SetPortfolioNPLInput.SerializeToString,
                response_deserializer=portfolios__pb2.SetPortfolioNPLOutput.FromString,
                )
        self.GetPMSClevertapUserData = channel.unary_unary(
                '/packets.Portfolios/GetPMSClevertapUserData',
                request_serializer=portfolios__pb2.GetPMSClevertapUserDataInput.SerializeToString,
                response_deserializer=portfolios__pb2.GetPMSClevertapUserDataOutput.FromString,
                )
        self.GetPortfolioUserExistence = channel.unary_unary(
                '/packets.Portfolios/GetPortfolioUserExistence',
                request_serializer=portfolios__pb2.PortfolioExistenceInput.SerializeToString,
                response_deserializer=portfolios__pb2.PortfolioExistenceOutput.FromString,
                )
        self.InsertSpreadingQueue = channel.unary_unary(
                '/packets.Portfolios/InsertSpreadingQueue',
                request_serializer=portfolios__pb2.SpreadingQueueInput.SerializeToString,
                response_deserializer=portfolios__pb2.SpreadingQueueOutput.FromString,
                )
        self.PotentialProfit = channel.unary_unary(
                '/packets.Portfolios/PotentialProfit',
                request_serializer=portfolios__pb2.PotentialProfitInput.SerializeToString,
                response_deserializer=portfolios__pb2.PotentialProfitOutput.FromString,
                )
        self.SetProvisionFund = channel.unary_unary(
                '/packets.Portfolios/SetProvisionFund',
                request_serializer=portfolios__pb2.SetProvisionFundInput.SerializeToString,
                response_deserializer=portfolios__pb2.SetProvisionFundOutput.FromString,
                )
        self.InsertMissingOTSPortfoliosToSync = channel.unary_unary(
                '/packets.Portfolios/InsertMissingOTSPortfoliosToSync',
                request_serializer=portfolios__pb2.MissingOTSPortfoliosToSync.SerializeToString,
                response_deserializer=portfolios__pb2.MissingOTSPortfolioSyncResp.FromString,
                )
        self.UpdatePortfolioSyncAdminParam = channel.unary_unary(
                '/packets.Portfolios/UpdatePortfolioSyncAdminParam',
                request_serializer=portfolios__pb2.EnablePortfolioSyncAdminParam.SerializeToString,
                response_deserializer=portfolios__pb2.EnablePortfolioSyncResp.FromString,
                )


class PortfoliosServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetSummaryByUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFundedLoans(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPortfolioSummary(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPortfolioSummaryDetail(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPortfolioSummaryPerformance(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetScheduleRepayment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetListSummaryProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetListScheduleForRepayment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDetailScheduleRepayment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFundedLoansInstitutional(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateProductDetails(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserActiveAverageReturnPerSource(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetScheduleRepaymentByProductCodeAndUserID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PortfolioOrderCancel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSumInterestAndLateReceived(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GeneratePortfolio(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GenerateRoboPortfolio(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PortfolioDisbursement(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoanCancelImpacted(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProvisionFund(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateLenderDPD(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PortfoliosLateFee(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PortfolioRestructure(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetPortfolioExpired(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetLoanSpreading(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLenderTotalPaidInterest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetAdjustInterest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTWRPortfolioData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetPortfolioNPL(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPMSClevertapUserData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPortfolioUserExistence(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InsertSpreadingQueue(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PotentialProfit(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetProvisionFund(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InsertMissingOTSPortfoliosToSync(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdatePortfolioSyncAdminParam(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PortfoliosServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetSummaryByUser': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSummaryByUser,
                    request_deserializer=portfolios__pb2.UserSummaryArguments.FromString,
                    response_serializer=portfolios__pb2.UserSummary.SerializeToString,
            ),
            'GetFundedLoans': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFundedLoans,
                    request_deserializer=portfolios__pb2.PortfolioArguments.FromString,
                    response_serializer=portfolios__pb2.PortfolioList.SerializeToString,
            ),
            'GetPortfolioSummary': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPortfolioSummary,
                    request_deserializer=portfolios__pb2.PortfolioSummaryArguments.FromString,
                    response_serializer=portfolios__pb2.PortfolioSummary.SerializeToString,
            ),
            'GetPortfolioSummaryDetail': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPortfolioSummaryDetail,
                    request_deserializer=portfolios__pb2.PortfolioSummaryArguments.FromString,
                    response_serializer=portfolios__pb2.PortfolioSummaryDetail.SerializeToString,
            ),
            'GetPortfolioSummaryPerformance': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPortfolioSummaryPerformance,
                    request_deserializer=portfolios__pb2.PortfolioSummaryArguments.FromString,
                    response_serializer=portfolios__pb2.PortfolioSummaryPerformance.SerializeToString,
            ),
            'GetScheduleRepayment': grpc.unary_unary_rpc_method_handler(
                    servicer.GetScheduleRepayment,
                    request_deserializer=portfolios__pb2.ScheduleRepaymentArguments.FromString,
                    response_serializer=portfolios__pb2.PortfolioScheduleRepayment.SerializeToString,
            ),
            'GetListSummaryProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.GetListSummaryProduct,
                    request_deserializer=portfolios__pb2.SummaryProductsArguments.FromString,
                    response_serializer=portfolios__pb2.OutputProductSummaries.SerializeToString,
            ),
            'GetListScheduleForRepayment': grpc.unary_unary_rpc_method_handler(
                    servicer.GetListScheduleForRepayment,
                    request_deserializer=portfolios__pb2.ScheduleForRepaymentArguments.FromString,
                    response_serializer=portfolios__pb2.OutputScheduleForRepayment.SerializeToString,
            ),
            'GetDetailScheduleRepayment': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDetailScheduleRepayment,
                    request_deserializer=portfolios__pb2.DetailRepaymentScheduleArguments.FromString,
                    response_serializer=portfolios__pb2.OutputDetailRepaymentSchedule.SerializeToString,
            ),
            'GetFundedLoansInstitutional': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFundedLoansInstitutional,
                    request_deserializer=portfolios__pb2.PortfolioArgumentsInstitutional.FromString,
                    response_serializer=portfolios__pb2.PortfolioListInstitutional.SerializeToString,
            ),
            'CreateProductDetails': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateProductDetails,
                    request_deserializer=portfolios__pb2.CreateProductDetailArguments.FromString,
                    response_serializer=portfolios__pb2.OutputCreateProductDetail.SerializeToString,
            ),
            'GetUserActiveAverageReturnPerSource': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserActiveAverageReturnPerSource,
                    request_deserializer=portfolios__pb2.UserSummaryActiveAverageReturnArguments.FromString,
                    response_serializer=portfolios__pb2.OutputUserSummaryActiveAverageReturn.SerializeToString,
            ),
            'GetScheduleRepaymentByProductCodeAndUserID': grpc.unary_unary_rpc_method_handler(
                    servicer.GetScheduleRepaymentByProductCodeAndUserID,
                    request_deserializer=portfolios__pb2.ScheduleRepaymentArguments.FromString,
                    response_serializer=portfolios__pb2.PortfolioScheduleRepayment.SerializeToString,
            ),
            'PortfolioOrderCancel': grpc.unary_unary_rpc_method_handler(
                    servicer.PortfolioOrderCancel,
                    request_deserializer=portfolios__pb2.OrderCancelArgumments.FromString,
                    response_serializer=portfolios__pb2.OutputOrderCancel.SerializeToString,
            ),
            'GetSumInterestAndLateReceived': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSumInterestAndLateReceived,
                    request_deserializer=portfolios__pb2.SumInterestAndLateReceivedArgumments.FromString,
                    response_serializer=portfolios__pb2.OutputSumInterestAndLateReceived.SerializeToString,
            ),
            'GeneratePortfolio': grpc.unary_unary_rpc_method_handler(
                    servicer.GeneratePortfolio,
                    request_deserializer=portfolios__pb2.CheckoutOutputArgs.FromString,
                    response_serializer=portfolios__pb2.CheckoutOutput.SerializeToString,
            ),
            'GenerateRoboPortfolio': grpc.unary_unary_rpc_method_handler(
                    servicer.GenerateRoboPortfolio,
                    request_deserializer=portfolios__pb2.CheckoutRoboOutputArgs.FromString,
                    response_serializer=portfolios__pb2.CheckoutRoboOutput.SerializeToString,
            ),
            'PortfolioDisbursement': grpc.unary_unary_rpc_method_handler(
                    servicer.PortfolioDisbursement,
                    request_deserializer=portfolios__pb2.DisbursementArgumments.FromString,
                    response_serializer=portfolios__pb2.DisbursementOutput.SerializeToString,
            ),
            'LoanCancelImpacted': grpc.unary_unary_rpc_method_handler(
                    servicer.LoanCancelImpacted,
                    request_deserializer=portfolios__pb2.LoanCancelImpactArgumments.FromString,
                    response_serializer=portfolios__pb2.LoanCancelImpactOutput.SerializeToString,
            ),
            'GetProvisionFund': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProvisionFund,
                    request_deserializer=portfolios__pb2.ProvisionFundArgs.FromString,
                    response_serializer=portfolios__pb2.ProvisionFund.SerializeToString,
            ),
            'UpdateLenderDPD': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateLenderDPD,
                    request_deserializer=portfolios__pb2.UpdateLendersDPDArgs.FromString,
                    response_serializer=portfolios__pb2.UpdateLenderDPDOutput.SerializeToString,
            ),
            'PortfoliosLateFee': grpc.unary_unary_rpc_method_handler(
                    servicer.PortfoliosLateFee,
                    request_deserializer=portfolios__pb2.PortfolioLateFeeArguments.FromString,
                    response_serializer=portfolios__pb2.PortfolioLateFeeOutput.SerializeToString,
            ),
            'PortfolioRestructure': grpc.unary_unary_rpc_method_handler(
                    servicer.PortfolioRestructure,
                    request_deserializer=portfolios__pb2.PortfolioRestructureArgs.FromString,
                    response_serializer=portfolios__pb2.PortfolioRestructureOutput.SerializeToString,
            ),
            'SetPortfolioExpired': grpc.unary_unary_rpc_method_handler(
                    servicer.SetPortfolioExpired,
                    request_deserializer=portfolios__pb2.SetPortfolioExpiredInput.FromString,
                    response_serializer=portfolios__pb2.SetPortfolioExpiredOutput.SerializeToString,
            ),
            'SetLoanSpreading': grpc.unary_unary_rpc_method_handler(
                    servicer.SetLoanSpreading,
                    request_deserializer=portfolios__pb2.SetLoanSpreadingInput.FromString,
                    response_serializer=portfolios__pb2.SetLoanSpreadingOutput.SerializeToString,
            ),
            'GetLenderTotalPaidInterest': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLenderTotalPaidInterest,
                    request_deserializer=portfolios__pb2.GetLenderTotalPaidInterestInput.FromString,
                    response_serializer=portfolios__pb2.GetLenderTotalPaidInterestOutput.SerializeToString,
            ),
            'SetAdjustInterest': grpc.unary_unary_rpc_method_handler(
                    servicer.SetAdjustInterest,
                    request_deserializer=portfolios__pb2.SetAdjustInterestInput.FromString,
                    response_serializer=portfolios__pb2.SetAdjustInterestOutput.SerializeToString,
            ),
            'GetTWRPortfolioData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTWRPortfolioData,
                    request_deserializer=portfolios__pb2.GetTWRPortfolioDataInput.FromString,
                    response_serializer=portfolios__pb2.GetTWRPortfolioDataOutput.SerializeToString,
            ),
            'SetPortfolioNPL': grpc.unary_unary_rpc_method_handler(
                    servicer.SetPortfolioNPL,
                    request_deserializer=portfolios__pb2.SetPortfolioNPLInput.FromString,
                    response_serializer=portfolios__pb2.SetPortfolioNPLOutput.SerializeToString,
            ),
            'GetPMSClevertapUserData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPMSClevertapUserData,
                    request_deserializer=portfolios__pb2.GetPMSClevertapUserDataInput.FromString,
                    response_serializer=portfolios__pb2.GetPMSClevertapUserDataOutput.SerializeToString,
            ),
            'GetPortfolioUserExistence': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPortfolioUserExistence,
                    request_deserializer=portfolios__pb2.PortfolioExistenceInput.FromString,
                    response_serializer=portfolios__pb2.PortfolioExistenceOutput.SerializeToString,
            ),
            'InsertSpreadingQueue': grpc.unary_unary_rpc_method_handler(
                    servicer.InsertSpreadingQueue,
                    request_deserializer=portfolios__pb2.SpreadingQueueInput.FromString,
                    response_serializer=portfolios__pb2.SpreadingQueueOutput.SerializeToString,
            ),
            'PotentialProfit': grpc.unary_unary_rpc_method_handler(
                    servicer.PotentialProfit,
                    request_deserializer=portfolios__pb2.PotentialProfitInput.FromString,
                    response_serializer=portfolios__pb2.PotentialProfitOutput.SerializeToString,
            ),
            'SetProvisionFund': grpc.unary_unary_rpc_method_handler(
                    servicer.SetProvisionFund,
                    request_deserializer=portfolios__pb2.SetProvisionFundInput.FromString,
                    response_serializer=portfolios__pb2.SetProvisionFundOutput.SerializeToString,
            ),
            'InsertMissingOTSPortfoliosToSync': grpc.unary_unary_rpc_method_handler(
                    servicer.InsertMissingOTSPortfoliosToSync,
                    request_deserializer=portfolios__pb2.MissingOTSPortfoliosToSync.FromString,
                    response_serializer=portfolios__pb2.MissingOTSPortfolioSyncResp.SerializeToString,
            ),
            'UpdatePortfolioSyncAdminParam': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdatePortfolioSyncAdminParam,
                    request_deserializer=portfolios__pb2.EnablePortfolioSyncAdminParam.FromString,
                    response_serializer=portfolios__pb2.EnablePortfolioSyncResp.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'packets.Portfolios', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Portfolios(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetSummaryByUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Portfolios/GetSummaryByUser',
            portfolios__pb2.UserSummaryArguments.SerializeToString,
            portfolios__pb2.UserSummary.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFundedLoans(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Portfolios/GetFundedLoans',
            portfolios__pb2.PortfolioArguments.SerializeToString,
            portfolios__pb2.PortfolioList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPortfolioSummary(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Portfolios/GetPortfolioSummary',
            portfolios__pb2.PortfolioSummaryArguments.SerializeToString,
            portfolios__pb2.PortfolioSummary.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPortfolioSummaryDetail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Portfolios/GetPortfolioSummaryDetail',
            portfolios__pb2.PortfolioSummaryArguments.SerializeToString,
            portfolios__pb2.PortfolioSummaryDetail.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPortfolioSummaryPerformance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Portfolios/GetPortfolioSummaryPerformance',
            portfolios__pb2.PortfolioSummaryArguments.SerializeToString,
            portfolios__pb2.PortfolioSummaryPerformance.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetScheduleRepayment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Portfolios/GetScheduleRepayment',
            portfolios__pb2.ScheduleRepaymentArguments.SerializeToString,
            portfolios__pb2.PortfolioScheduleRepayment.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetListSummaryProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Portfolios/GetListSummaryProduct',
            portfolios__pb2.SummaryProductsArguments.SerializeToString,
            portfolios__pb2.OutputProductSummaries.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetListScheduleForRepayment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Portfolios/GetListScheduleForRepayment',
            portfolios__pb2.ScheduleForRepaymentArguments.SerializeToString,
            portfolios__pb2.OutputScheduleForRepayment.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDetailScheduleRepayment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Portfolios/GetDetailScheduleRepayment',
            portfolios__pb2.DetailRepaymentScheduleArguments.SerializeToString,
            portfolios__pb2.OutputDetailRepaymentSchedule.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFundedLoansInstitutional(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Portfolios/GetFundedLoansInstitutional',
            portfolios__pb2.PortfolioArgumentsInstitutional.SerializeToString,
            portfolios__pb2.PortfolioListInstitutional.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateProductDetails(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Portfolios/CreateProductDetails',
            portfolios__pb2.CreateProductDetailArguments.SerializeToString,
            portfolios__pb2.OutputCreateProductDetail.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserActiveAverageReturnPerSource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Portfolios/GetUserActiveAverageReturnPerSource',
            portfolios__pb2.UserSummaryActiveAverageReturnArguments.SerializeToString,
            portfolios__pb2.OutputUserSummaryActiveAverageReturn.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetScheduleRepaymentByProductCodeAndUserID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Portfolios/GetScheduleRepaymentByProductCodeAndUserID',
            portfolios__pb2.ScheduleRepaymentArguments.SerializeToString,
            portfolios__pb2.PortfolioScheduleRepayment.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PortfolioOrderCancel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Portfolios/PortfolioOrderCancel',
            portfolios__pb2.OrderCancelArgumments.SerializeToString,
            portfolios__pb2.OutputOrderCancel.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSumInterestAndLateReceived(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Portfolios/GetSumInterestAndLateReceived',
            portfolios__pb2.SumInterestAndLateReceivedArgumments.SerializeToString,
            portfolios__pb2.OutputSumInterestAndLateReceived.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GeneratePortfolio(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Portfolios/GeneratePortfolio',
            portfolios__pb2.CheckoutOutputArgs.SerializeToString,
            portfolios__pb2.CheckoutOutput.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GenerateRoboPortfolio(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Portfolios/GenerateRoboPortfolio',
            portfolios__pb2.CheckoutRoboOutputArgs.SerializeToString,
            portfolios__pb2.CheckoutRoboOutput.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PortfolioDisbursement(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Portfolios/PortfolioDisbursement',
            portfolios__pb2.DisbursementArgumments.SerializeToString,
            portfolios__pb2.DisbursementOutput.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LoanCancelImpacted(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Portfolios/LoanCancelImpacted',
            portfolios__pb2.LoanCancelImpactArgumments.SerializeToString,
            portfolios__pb2.LoanCancelImpactOutput.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetProvisionFund(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Portfolios/GetProvisionFund',
            portfolios__pb2.ProvisionFundArgs.SerializeToString,
            portfolios__pb2.ProvisionFund.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateLenderDPD(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Portfolios/UpdateLenderDPD',
            portfolios__pb2.UpdateLendersDPDArgs.SerializeToString,
            portfolios__pb2.UpdateLenderDPDOutput.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PortfoliosLateFee(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Portfolios/PortfoliosLateFee',
            portfolios__pb2.PortfolioLateFeeArguments.SerializeToString,
            portfolios__pb2.PortfolioLateFeeOutput.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PortfolioRestructure(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Portfolios/PortfolioRestructure',
            portfolios__pb2.PortfolioRestructureArgs.SerializeToString,
            portfolios__pb2.PortfolioRestructureOutput.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetPortfolioExpired(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Portfolios/SetPortfolioExpired',
            portfolios__pb2.SetPortfolioExpiredInput.SerializeToString,
            portfolios__pb2.SetPortfolioExpiredOutput.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetLoanSpreading(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Portfolios/SetLoanSpreading',
            portfolios__pb2.SetLoanSpreadingInput.SerializeToString,
            portfolios__pb2.SetLoanSpreadingOutput.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLenderTotalPaidInterest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Portfolios/GetLenderTotalPaidInterest',
            portfolios__pb2.GetLenderTotalPaidInterestInput.SerializeToString,
            portfolios__pb2.GetLenderTotalPaidInterestOutput.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetAdjustInterest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Portfolios/SetAdjustInterest',
            portfolios__pb2.SetAdjustInterestInput.SerializeToString,
            portfolios__pb2.SetAdjustInterestOutput.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTWRPortfolioData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Portfolios/GetTWRPortfolioData',
            portfolios__pb2.GetTWRPortfolioDataInput.SerializeToString,
            portfolios__pb2.GetTWRPortfolioDataOutput.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetPortfolioNPL(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Portfolios/SetPortfolioNPL',
            portfolios__pb2.SetPortfolioNPLInput.SerializeToString,
            portfolios__pb2.SetPortfolioNPLOutput.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPMSClevertapUserData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Portfolios/GetPMSClevertapUserData',
            portfolios__pb2.GetPMSClevertapUserDataInput.SerializeToString,
            portfolios__pb2.GetPMSClevertapUserDataOutput.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPortfolioUserExistence(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Portfolios/GetPortfolioUserExistence',
            portfolios__pb2.PortfolioExistenceInput.SerializeToString,
            portfolios__pb2.PortfolioExistenceOutput.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InsertSpreadingQueue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Portfolios/InsertSpreadingQueue',
            portfolios__pb2.SpreadingQueueInput.SerializeToString,
            portfolios__pb2.SpreadingQueueOutput.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PotentialProfit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Portfolios/PotentialProfit',
            portfolios__pb2.PotentialProfitInput.SerializeToString,
            portfolios__pb2.PotentialProfitOutput.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetProvisionFund(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Portfolios/SetProvisionFund',
            portfolios__pb2.SetProvisionFundInput.SerializeToString,
            portfolios__pb2.SetProvisionFundOutput.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InsertMissingOTSPortfoliosToSync(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Portfolios/InsertMissingOTSPortfoliosToSync',
            portfolios__pb2.MissingOTSPortfoliosToSync.SerializeToString,
            portfolios__pb2.MissingOTSPortfolioSyncResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdatePortfolioSyncAdminParam(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Portfolios/UpdatePortfolioSyncAdminParam',
            portfolios__pb2.EnablePortfolioSyncAdminParam.SerializeToString,
            portfolios__pb2.EnablePortfolioSyncResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
