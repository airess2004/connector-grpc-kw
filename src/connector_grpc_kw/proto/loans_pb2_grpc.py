# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import common_pb2 as common__pb2
from . import loans_pb2 as loans__pb2


class LoansStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CheckLoanBorrower = channel.unary_unary(
                '/packets.Loans/CheckLoanBorrower',
                request_serializer=loans__pb2.InputCheckLoanBorrower.SerializeToString,
                response_deserializer=loans__pb2.OutputCheckLoanBorrower.FromString,
                )
        self.ListLoan = channel.unary_unary(
                '/packets.Loans/ListLoan',
                request_serializer=loans__pb2.InputListLoan.SerializeToString,
                response_deserializer=loans__pb2.OutputListLoan.FromString,
                )
        self.ListLoanHRDashboard = channel.unary_unary(
                '/packets.Loans/ListLoanHRDashboard',
                request_serializer=loans__pb2.InputListLoanHRDashboard.SerializeToString,
                response_deserializer=loans__pb2.OutputListLoanHRDashboard.FromString,
                )
        self.NewListLoan = channel.unary_unary(
                '/packets.Loans/NewListLoan',
                request_serializer=loans__pb2.NewInputListLoan.SerializeToString,
                response_deserializer=loans__pb2.NewOutputListLoan.FromString,
                )
        self.ListLoanByCreatedAt = channel.unary_unary(
                '/packets.Loans/ListLoanByCreatedAt',
                request_serializer=loans__pb2.InputListLoan.SerializeToString,
                response_deserializer=loans__pb2.OutputListLoan.FromString,
                )
        self.CheckAvailableFundingAmount = channel.unary_unary(
                '/packets.Loans/CheckAvailableFundingAmount',
                request_serializer=loans__pb2.InputCheckAvailableFundingAmount.SerializeToString,
                response_deserializer=loans__pb2.OutputCheckAvailableFundingAmount.FromString,
                )
        self.GetBorrowerInterestAverage = channel.unary_unary(
                '/packets.Loans/GetBorrowerInterestAverage',
                request_serializer=loans__pb2.InputGetBorrowerInterestAverage.SerializeToString,
                response_deserializer=loans__pb2.OutputGetBorrowerInterestAverage.FromString,
                )
        self.ListBorrowerLoan = channel.unary_unary(
                '/packets.Loans/ListBorrowerLoan',
                request_serializer=loans__pb2.InputListBorrowerLoan.SerializeToString,
                response_deserializer=loans__pb2.OutputListBorrowerLoan.FromString,
                )
        self.ListLoanByUser = channel.unary_unary(
                '/packets.Loans/ListLoanByUser',
                request_serializer=loans__pb2.InputList.SerializeToString,
                response_deserializer=loans__pb2.ListLoans.FromString,
                )
        self.GetUserLoan = channel.unary_unary(
                '/packets.Loans/GetUserLoan',
                request_serializer=loans__pb2.InputListLoan.SerializeToString,
                response_deserializer=loans__pb2.OutputListLoan.FromString,
                )
        self.GetUserLoanSortByUpdate = channel.unary_unary(
                '/packets.Loans/GetUserLoanSortByUpdate',
                request_serializer=loans__pb2.InputListLoanSortByUpdate.SerializeToString,
                response_deserializer=loans__pb2.OutputListLoanSortByUpdate.FromString,
                )
        self.GetUserLoanSortByUpdateExcluded = channel.unary_unary(
                '/packets.Loans/GetUserLoanSortByUpdateExcluded',
                request_serializer=loans__pb2.InputListLoanSortByUpdate.SerializeToString,
                response_deserializer=loans__pb2.OutputListLoanSortByUpdate.FromString,
                )
        self.DetailLoan = channel.unary_unary(
                '/packets.Loans/DetailLoan',
                request_serializer=loans__pb2.InputDetailLoan.SerializeToString,
                response_deserializer=loans__pb2.OutputDetailLoan.FromString,
                )
        self.CreateLoan = channel.unary_unary(
                '/packets.Loans/CreateLoan',
                request_serializer=loans__pb2.InputCreateLoan.SerializeToString,
                response_deserializer=loans__pb2.OutputCreateLoan.FromString,
                )
        self.UpdateLoan = channel.unary_unary(
                '/packets.Loans/UpdateLoan',
                request_serializer=loans__pb2.InputUpdateLoan.SerializeToString,
                response_deserializer=loans__pb2.OutputUpdateLoan.FromString,
                )
        self.DeleteLoan = channel.unary_unary(
                '/packets.Loans/DeleteLoan',
                request_serializer=loans__pb2.InputDeleteLoan.SerializeToString,
                response_deserializer=loans__pb2.OutputDeleteLoan.FromString,
                )
        self.UpdateLoanStatus = channel.unary_unary(
                '/packets.Loans/UpdateLoanStatus',
                request_serializer=loans__pb2.InputList.SerializeToString,
                response_deserializer=loans__pb2.OutputLoanStatus.FromString,
                )
        self.UpdateLatestPaymentStatus = channel.unary_unary(
                '/packets.Loans/UpdateLatestPaymentStatus',
                request_serializer=loans__pb2.InputList.SerializeToString,
                response_deserializer=loans__pb2.OutputLoanStatus.FromString,
                )
        self.CancelFunding = channel.unary_unary(
                '/packets.Loans/CancelFunding',
                request_serializer=loans__pb2.InputCancelFunding.SerializeToString,
                response_deserializer=loans__pb2.OutputCancelFunding.FromString,
                )
        self.GetLoanFundings = channel.unary_unary(
                '/packets.Loans/GetLoanFundings',
                request_serializer=loans__pb2.InputList.SerializeToString,
                response_deserializer=loans__pb2.OutputGetLoanFundings.FromString,
                )
        self.ListLoanFunding = channel.unary_unary(
                '/packets.Loans/ListLoanFunding',
                request_serializer=loans__pb2.InputListLoanFunding.SerializeToString,
                response_deserializer=loans__pb2.OutputListLoanFunding.FromString,
                )
        self.DetailLoanFunding = channel.unary_unary(
                '/packets.Loans/DetailLoanFunding',
                request_serializer=loans__pb2.InputDetailLoanFunding.SerializeToString,
                response_deserializer=loans__pb2.OutputDetailLoanFunding.FromString,
                )
        self.CreateLoanFunding = channel.unary_unary(
                '/packets.Loans/CreateLoanFunding',
                request_serializer=loans__pb2.InputCreateLoanFunding.SerializeToString,
                response_deserializer=loans__pb2.OutputCreateLoanFunding.FromString,
                )
        self.UpdateLoanFunding = channel.unary_unary(
                '/packets.Loans/UpdateLoanFunding',
                request_serializer=loans__pb2.InputUpdateLoanFunding.SerializeToString,
                response_deserializer=loans__pb2.OutputUpdateLoanFunding.FromString,
                )
        self.DeleteLoanFunding = channel.unary_unary(
                '/packets.Loans/DeleteLoanFunding',
                request_serializer=loans__pb2.InputDeleteLoanFunding.SerializeToString,
                response_deserializer=loans__pb2.OutputDeleteLoanFunding.FromString,
                )
        self.BatchUpdateFundingAmount = channel.unary_unary(
                '/packets.Loans/BatchUpdateFundingAmount',
                request_serializer=loans__pb2.InputBatchUpdateFundingAmount.SerializeToString,
                response_deserializer=loans__pb2.OutputBatchUpdateFundingAmount.FromString,
                )
        self.GetLoanFundingByLoanID = channel.unary_unary(
                '/packets.Loans/GetLoanFundingByLoanID',
                request_serializer=loans__pb2.InputLoanFundingByLoanID.SerializeToString,
                response_deserializer=loans__pb2.OutputLoanFundingByLoanID.FromString,
                )
        self.AssetTransfer = channel.unary_unary(
                '/packets.Loans/AssetTransfer',
                request_serializer=loans__pb2.InputAssetTransfer.SerializeToString,
                response_deserializer=loans__pb2.OutputAssetTransfer.FromString,
                )
        self.SumActiveLoanFunding = channel.unary_unary(
                '/packets.Loans/SumActiveLoanFunding',
                request_serializer=loans__pb2.InputList.SerializeToString,
                response_deserializer=loans__pb2.OutputSumActiveLoanFunding.FromString,
                )
        self.ListActiveLoanFundingByGrade = channel.unary_unary(
                '/packets.Loans/ListActiveLoanFundingByGrade',
                request_serializer=loans__pb2.InputList.SerializeToString,
                response_deserializer=loans__pb2.OutputListLoanfundingByGrade.FromString,
                )
        self.ListActiveLoanFundingByProduct = channel.unary_unary(
                '/packets.Loans/ListActiveLoanFundingByProduct',
                request_serializer=loans__pb2.InputList.SerializeToString,
                response_deserializer=loans__pb2.OutputListLoanFundingByProduct.FromString,
                )
        self.GetListUserFundingSummary = channel.unary_unary(
                '/packets.Loans/GetListUserFundingSummary',
                request_serializer=loans__pb2.InputGetListUserFundingSummary.SerializeToString,
                response_deserializer=loans__pb2.OutputGetListUserFundingSummary.FromString,
                )
        self.GetLenderSchedule = channel.unary_unary(
                '/packets.Loans/GetLenderSchedule',
                request_serializer=loans__pb2.InputGetLenderSchedule.SerializeToString,
                response_deserializer=loans__pb2.LenderSchedule.FromString,
                )
        self.ListLenderSchedules = channel.unary_unary(
                '/packets.Loans/ListLenderSchedules',
                request_serializer=loans__pb2.InputList.SerializeToString,
                response_deserializer=loans__pb2.OutputListLenderSchedules.FromString,
                )
        self.ListLenderSchedulesByGrade = channel.unary_unary(
                '/packets.Loans/ListLenderSchedulesByGrade',
                request_serializer=loans__pb2.InputList.SerializeToString,
                response_deserializer=loans__pb2.OutputListLenderSchedulesByGrade.FromString,
                )
        self.ListLenderSchedulesByProduct = channel.unary_unary(
                '/packets.Loans/ListLenderSchedulesByProduct',
                request_serializer=loans__pb2.InputList.SerializeToString,
                response_deserializer=loans__pb2.OutputListLenderSchedulesByProduct.FromString,
                )
        self.ListLenderSchedulesByFundingID = channel.unary_unary(
                '/packets.Loans/ListLenderSchedulesByFundingID',
                request_serializer=loans__pb2.InputList.SerializeToString,
                response_deserializer=loans__pb2.OutputListLenderSchedulesByFundingID.FromString,
                )
        self.ListLenderSchedulesByScheduleVersionId = channel.unary_unary(
                '/packets.Loans/ListLenderSchedulesByScheduleVersionId',
                request_serializer=loans__pb2.InputLenderListByScheduleVersion.SerializeToString,
                response_deserializer=loans__pb2.OutputListLenderSchedulesByScheduleVersionId.FromString,
                )
        self.ListLenderScheduleVersionsByFundingID = channel.unary_unary(
                '/packets.Loans/ListLenderScheduleVersionsByFundingID',
                request_serializer=loans__pb2.InputList.SerializeToString,
                response_deserializer=loans__pb2.OutputLenderScheduleVersions.FromString,
                )
        self.ListLenderSpreadingByFundingID = channel.unary_unary(
                '/packets.Loans/ListLenderSpreadingByFundingID',
                request_serializer=loans__pb2.InputList.SerializeToString,
                response_deserializer=loans__pb2.OutputLenderSpreadingByFundingID.FromString,
                )
        self.ListLenderSpreadingBySpreadingTransactionID = channel.unary_unary(
                '/packets.Loans/ListLenderSpreadingBySpreadingTransactionID',
                request_serializer=loans__pb2.InputList.SerializeToString,
                response_deserializer=loans__pb2.LenderSpreadings.FromString,
                )
        self.CreateLoanRepaymentScheduleVersion = channel.unary_unary(
                '/packets.Loans/CreateLoanRepaymentScheduleVersion',
                request_serializer=loans__pb2.LoanRepaymentScheduleVersion.SerializeToString,
                response_deserializer=loans__pb2.OutputCreateLoanRepaymentScheduleVersion.FromString,
                )
        self.GetFundingProgress = channel.unary_unary(
                '/packets.Loans/GetFundingProgress',
                request_serializer=loans__pb2.ParamGetFundingProgress.SerializeToString,
                response_deserializer=loans__pb2.OutputKoinBisnis.FromString,
                )
        self.HasLoan = channel.unary_unary(
                '/packets.Loans/HasLoan',
                request_serializer=loans__pb2.ParamHasLoan.SerializeToString,
                response_deserializer=loans__pb2.OutputKoinBisnis.FromString,
                )
        self.SummaryLoan = channel.unary_unary(
                '/packets.Loans/SummaryLoan',
                request_serializer=loans__pb2.ParamSummaryLoan.SerializeToString,
                response_deserializer=loans__pb2.OutputKoinBisnis.FromString,
                )
        self.ActiveLoan = channel.unary_unary(
                '/packets.Loans/ActiveLoan',
                request_serializer=loans__pb2.ParamActiveLoan.SerializeToString,
                response_deserializer=loans__pb2.OutputKoinBisnis.FromString,
                )
        self.ApplicationProgress = channel.unary_unary(
                '/packets.Loans/ApplicationProgress',
                request_serializer=loans__pb2.ParamApplicationProgress.SerializeToString,
                response_deserializer=loans__pb2.OutputKoinBisnis.FromString,
                )
        self.ApplicationProgressv2 = channel.unary_unary(
                '/packets.Loans/ApplicationProgressv2',
                request_serializer=loans__pb2.ParamApplicationProgress.SerializeToString,
                response_deserializer=loans__pb2.OutputKoinBisnis.FromString,
                )
        self.ListLoanProduct = channel.unary_unary(
                '/packets.Loans/ListLoanProduct',
                request_serializer=loans__pb2.ParamListLoanProduct.SerializeToString,
                response_deserializer=loans__pb2.OutputKoinBisnis.FromString,
                )
        self.LoanDetailProduct = channel.unary_unary(
                '/packets.Loans/LoanDetailProduct',
                request_serializer=loans__pb2.ParamLoanDetailProduct.SerializeToString,
                response_deserializer=loans__pb2.OutputKoinBisnis.FromString,
                )
        self.LoanScheduleProduct = channel.unary_unary(
                '/packets.Loans/LoanScheduleProduct',
                request_serializer=loans__pb2.ParamLoanDetailProduct.SerializeToString,
                response_deserializer=loans__pb2.OutputKoinBisnis.FromString,
                )
        self.LoanContractProduct = channel.unary_unary(
                '/packets.Loans/LoanContractProduct',
                request_serializer=loans__pb2.ParamLoanDetailProduct.SerializeToString,
                response_deserializer=loans__pb2.OutputKoinBisnis.FromString,
                )
        self.LoanFundingProgressProduct = channel.unary_unary(
                '/packets.Loans/LoanFundingProgressProduct',
                request_serializer=loans__pb2.ParamLoanDetailProduct.SerializeToString,
                response_deserializer=loans__pb2.OutputKoinBisnis.FromString,
                )
        self.LoanDetailProgressProduct = channel.unary_unary(
                '/packets.Loans/LoanDetailProgressProduct',
                request_serializer=loans__pb2.ParamLoanDetailProduct.SerializeToString,
                response_deserializer=loans__pb2.OutputKoinBisnis.FromString,
                )
        self.LoanOfferProduct = channel.unary_unary(
                '/packets.Loans/LoanOfferProduct',
                request_serializer=loans__pb2.ParamLoanDetailProduct.SerializeToString,
                response_deserializer=loans__pb2.OutputKoinBisnis.FromString,
                )
        self.SubmitLoanOfferProduct = channel.unary_unary(
                '/packets.Loans/SubmitLoanOfferProduct',
                request_serializer=loans__pb2.ParamSubmitLoanOfferProduct.SerializeToString,
                response_deserializer=loans__pb2.OutputKoinBisnis.FromString,
                )
        self.GetKoinBisnisLoanRepaymentDetail = channel.unary_unary(
                '/packets.Loans/GetKoinBisnisLoanRepaymentDetail',
                request_serializer=loans__pb2.InputListLoan.SerializeToString,
                response_deserializer=loans__pb2.OutputKoinBisnis.FromString,
                )
        self.ListScheduleProduct = channel.unary_unary(
                '/packets.Loans/ListScheduleProduct',
                request_serializer=loans__pb2.ParamListScheduleProduct.SerializeToString,
                response_deserializer=loans__pb2.OutputKoinBisnis.FromString,
                )
        self.RequestClearance = channel.unary_unary(
                '/packets.Loans/RequestClearance',
                request_serializer=loans__pb2.InputRequestClearance.SerializeToString,
                response_deserializer=loans__pb2.OutputRequestClearance.FromString,
                )
        self.GetUserLoanWithRequestClearance = channel.unary_unary(
                '/packets.Loans/GetUserLoanWithRequestClearance',
                request_serializer=loans__pb2.InputListLoan.SerializeToString,
                response_deserializer=loans__pb2.OutputListLoan.FromString,
                )
        self.GetClearanceDataByLoanID = channel.unary_unary(
                '/packets.Loans/GetClearanceDataByLoanID',
                request_serializer=loans__pb2.InputGetClearanceDataByLoanID.SerializeToString,
                response_deserializer=loans__pb2.OutputListLoan.FromString,
                )
        self.ReservePaymentLoan = channel.unary_unary(
                '/packets.Loans/ReservePaymentLoan',
                request_serializer=loans__pb2.ParamReservePayment.SerializeToString,
                response_deserializer=loans__pb2.OutputReservePayment.FromString,
                )
        self.CreateScheduleRepayment = channel.unary_unary(
                '/packets.Loans/CreateScheduleRepayment',
                request_serializer=loans__pb2.ParamCreateScheduleRepayment.SerializeToString,
                response_deserializer=loans__pb2.OutputCreateScheduleRepayment.FromString,
                )
        self.GetScheduleRepaymentProduct = channel.unary_unary(
                '/packets.Loans/GetScheduleRepaymentProduct',
                request_serializer=loans__pb2.InputGetScheduleRepaymentProduct.SerializeToString,
                response_deserializer=loans__pb2.OutputKoinBisnis.FromString,
                )
        self.GenerateLenderSchedules = channel.unary_unary(
                '/packets.Loans/GenerateLenderSchedules',
                request_serializer=loans__pb2.InputGenerateLenderSchedules.SerializeToString,
                response_deserializer=loans__pb2.OutputGenerateLenderSchedules.FromString,
                )
        self.EarlyInstallmentRepayment = channel.unary_unary(
                '/packets.Loans/EarlyInstallmentRepayment',
                request_serializer=loans__pb2.InputEarlyInstallmentRepayment.SerializeToString,
                response_deserializer=loans__pb2.OutputEarlyInstallmentRepayment.FromString,
                )
        self.GetScheduleRepaymentByScheduleId = channel.unary_unary(
                '/packets.Loans/GetScheduleRepaymentByScheduleId',
                request_serializer=loans__pb2.InputGetScheduleRepaymentByScheduleId.SerializeToString,
                response_deserializer=loans__pb2.OutputKoinBisnis.FromString,
                )
        self.GetSpreadingTransaction = channel.unary_unary(
                '/packets.Loans/GetSpreadingTransaction',
                request_serializer=loans__pb2.InputGetSpreadingTransaction.SerializeToString,
                response_deserializer=loans__pb2.SpreadingTransaction.FromString,
                )
        self.ReadjustLoanFundingPercentage = channel.unary_unary(
                '/packets.Loans/ReadjustLoanFundingPercentage',
                request_serializer=loans__pb2.InputReadjustLoanFundingPercentage.SerializeToString,
                response_deserializer=loans__pb2.OutputReadjustLoanFundingPercentage.FromString,
                )
        self.GetLoanDocuments = channel.unary_unary(
                '/packets.Loans/GetLoanDocuments',
                request_serializer=loans__pb2.InputGetLoanDocuments.SerializeToString,
                response_deserializer=loans__pb2.OutputLoanDocuments.FromString,
                )
        self.CreateRoboRepayment = channel.unary_unary(
                '/packets.Loans/CreateRoboRepayment',
                request_serializer=loans__pb2.InputCreateRoboRepayment.SerializeToString,
                response_deserializer=loans__pb2.OutputCreateRoboRepayment.FromString,
                )
        self.GetListScheduleByLoanID = channel.unary_unary(
                '/packets.Loans/GetListScheduleByLoanID',
                request_serializer=loans__pb2.InputGetListScheduleByLoanID.SerializeToString,
                response_deserializer=loans__pb2.OutputGetListScheduleByLoanID.FromString,
                )
        self.GetLoanContract = channel.unary_unary(
                '/packets.Loans/GetLoanContract',
                request_serializer=loans__pb2.InputLoanContract.SerializeToString,
                response_deserializer=loans__pb2.OutputLoanContract.FromString,
                )
        self.GetLoanContractUser = channel.unary_unary(
                '/packets.Loans/GetLoanContractUser',
                request_serializer=loans__pb2.InputLoanContractUser.SerializeToString,
                response_deserializer=loans__pb2.OutputLoanContractUser.FromString,
                )
        self.UpdateLoanRepaymentSchedule = channel.unary_unary(
                '/packets.Loans/UpdateLoanRepaymentSchedule',
                request_serializer=loans__pb2.InputUpdateRepaymentSchedule.SerializeToString,
                response_deserializer=loans__pb2.OutputUpdateRepaymentSchedule.FromString,
                )
        self.ListSpreadingDeductionDetailsBySpreadingDetailID = channel.unary_unary(
                '/packets.Loans/ListSpreadingDeductionDetailsBySpreadingDetailID',
                request_serializer=loans__pb2.InputList.SerializeToString,
                response_deserializer=loans__pb2.SpreadingDeductionDetails.FromString,
                )
        self.UpdateLoanTransitionDate = channel.unary_unary(
                '/packets.Loans/UpdateLoanTransitionDate',
                request_serializer=loans__pb2.ParamUpdateLoanTransitionDate.SerializeToString,
                response_deserializer=loans__pb2.OutputKoinBisnis.FromString,
                )
        self.LoanClearanceDetailProduct = channel.unary_unary(
                '/packets.Loans/LoanClearanceDetailProduct',
                request_serializer=loans__pb2.ParamLoanClearanceDetailProduct.SerializeToString,
                response_deserializer=loans__pb2.OutputKoinBisnis.FromString,
                )
        self.CreatePrematureClearance = channel.unary_unary(
                '/packets.Loans/CreatePrematureClearance',
                request_serializer=loans__pb2.ParamsCreatePrematureClearance.SerializeToString,
                response_deserializer=loans__pb2.OutputCreatePrematureClearance.FromString,
                )
        self.GetPrematureClearance = channel.unary_unary(
                '/packets.Loans/GetPrematureClearance',
                request_serializer=loans__pb2.ParamGetPreamatureClerance.SerializeToString,
                response_deserializer=loans__pb2.OutputGetPreamatureClerance.FromString,
                )
        self.GetPrematureClearanceRequestDetail = channel.unary_unary(
                '/packets.Loans/GetPrematureClearanceRequestDetail',
                request_serializer=loans__pb2.ParamGetPrematureClearanceRequestDetail.SerializeToString,
                response_deserializer=loans__pb2.OutputGetPrematureClearanceRequestDetail.FromString,
                )
        self.GetOutstandingLoanAmountPrematureClearance = channel.unary_unary(
                '/packets.Loans/GetOutstandingLoanAmountPrematureClearance',
                request_serializer=loans__pb2.ParamGetOutstandingLoan.SerializeToString,
                response_deserializer=loans__pb2.OutputGetOutstandingLoan.FromString,
                )
        self.GetOutstandingLoanAmountNormalPayment = channel.unary_unary(
                '/packets.Loans/GetOutstandingLoanAmountNormalPayment',
                request_serializer=loans__pb2.ParamGetOutstandingLoan.SerializeToString,
                response_deserializer=loans__pb2.OutputGetOutstandingLoan.FromString,
                )
        self.ActiveLoanV2 = channel.unary_unary(
                '/packets.Loans/ActiveLoanV2',
                request_serializer=loans__pb2.ParamActiveLoan.SerializeToString,
                response_deserializer=loans__pb2.OutputKoinEmployee.FromString,
                )
        self.LoanScheduleProductV2 = channel.unary_unary(
                '/packets.Loans/LoanScheduleProductV2',
                request_serializer=loans__pb2.ParamLoanDetailProduct.SerializeToString,
                response_deserializer=loans__pb2.OutputKoinEmployee.FromString,
                )
        self.ListScheduleProductV2 = channel.unary_unary(
                '/packets.Loans/ListScheduleProductV2',
                request_serializer=loans__pb2.ParamListScheduleProduct.SerializeToString,
                response_deserializer=loans__pb2.OutputKoinEmployee.FromString,
                )
        self.GetDetailLoanByLenderScheduleVersionID = channel.unary_unary(
                '/packets.Loans/GetDetailLoanByLenderScheduleVersionID',
                request_serializer=loans__pb2.LenderScheduleVersions.SerializeToString,
                response_deserializer=loans__pb2.OutputDetailLoan.FromString,
                )
        self.GetLoanByProductCode = channel.unary_unary(
                '/packets.Loans/GetLoanByProductCode',
                request_serializer=loans__pb2.GetLoanByProductCodeArgs.SerializeToString,
                response_deserializer=loans__pb2.Loan.FromString,
                )
        self.CreateLoanDocument = channel.unary_unary(
                '/packets.Loans/CreateLoanDocument',
                request_serializer=loans__pb2.ParamLoanDocument.SerializeToString,
                response_deserializer=loans__pb2.OutputCreateLoanDocument.FromString,
                )
        self.CreateLoanDeductionDetails = channel.unary_unary(
                '/packets.Loans/CreateLoanDeductionDetails',
                request_serializer=loans__pb2.LoanDeductionDetailItemRequests.SerializeToString,
                response_deserializer=loans__pb2.LoanDefaultOutput.FromString,
                )
        self.DeactivateLoanFunding = channel.unary_unary(
                '/packets.Loans/DeactivateLoanFunding',
                request_serializer=loans__pb2.ParamDeactivateLoanFunding.SerializeToString,
                response_deserializer=loans__pb2.OutputDeactivateLoanFunding.FromString,
                )
        self.GetOnGoingLoan = channel.unary_unary(
                '/packets.Loans/GetOnGoingLoan',
                request_serializer=loans__pb2.InputOnGoingLoan.SerializeToString,
                response_deserializer=loans__pb2.OutputOnGoingLoan.FromString,
                )
        self.CreateLenderCommissionFee = channel.unary_unary(
                '/packets.Loans/CreateLenderCommissionFee',
                request_serializer=loans__pb2.InputLenderCommissionFee.SerializeToString,
                response_deserializer=loans__pb2.OutputLenderCommissionFee.FromString,
                )
        self.GetLenderCommissionFee = channel.unary_unary(
                '/packets.Loans/GetLenderCommissionFee',
                request_serializer=loans__pb2.InputLenderCommissionFee.SerializeToString,
                response_deserializer=loans__pb2.OutputLenderCommissionFee.FromString,
                )
        self.GetOngoingLoanList = channel.unary_unary(
                '/packets.Loans/GetOngoingLoanList',
                request_serializer=loans__pb2.InputOngoingLoanList.SerializeToString,
                response_deserializer=loans__pb2.OutputOngoingLoanList.FromString,
                )
        self.GetLoanReport = channel.unary_unary(
                '/packets.Loans/GetLoanReport',
                request_serializer=loans__pb2.InputLoanReport.SerializeToString,
                response_deserializer=loans__pb2.OutputLoanReportList.FromString,
                )
        self.GetTopUpRequestByNewLoanID = channel.unary_unary(
                '/packets.Loans/GetTopUpRequestByNewLoanID',
                request_serializer=loans__pb2.ParamGetTopUpRequestByNewLoanID.SerializeToString,
                response_deserializer=loans__pb2.OutputGetTopUpRequestByNewLoanID.FromString,
                )
        self.GetLoans = channel.unary_unary(
                '/packets.Loans/GetLoans',
                request_serializer=loans__pb2.InputGetLoans.SerializeToString,
                response_deserializer=loans__pb2.OutputGetLoans.FromString,
                )
        self.GetMdr = channel.unary_unary(
                '/packets.Loans/GetMdr',
                request_serializer=loans__pb2.InputGetMDR.SerializeToString,
                response_deserializer=loans__pb2.OutputGetMDR.FromString,
                )
        self.UpdateMdr = channel.unary_unary(
                '/packets.Loans/UpdateMdr',
                request_serializer=loans__pb2.InputUpdateMdr.SerializeToString,
                response_deserializer=loans__pb2.OutputUpdateMdr.FromString,
                )
        self.GetUserFundingLoanProduct = channel.unary_unary(
                '/packets.Loans/GetUserFundingLoanProduct',
                request_serializer=loans__pb2.InputGetUserFundingLoanProduct.SerializeToString,
                response_deserializer=loans__pb2.OutputGetUserFundingLoanProduct.FromString,
                )
        self.GetUserFundingLoanCodeByProduct = channel.unary_unary(
                '/packets.Loans/GetUserFundingLoanCodeByProduct',
                request_serializer=loans__pb2.InputGetUserFundingLoanProduct.SerializeToString,
                response_deserializer=loans__pb2.OutputGetUserFundingLoanCodeByProduct.FromString,
                )
        self.ListHistoryRestructure = channel.unary_unary(
                '/packets.Loans/ListHistoryRestructure',
                request_serializer=loans__pb2.InputHistoryRestructure.SerializeToString,
                response_deserializer=loans__pb2.OutputHistoryRestructure.FromString,
                )
        self.GetTaxReportData = channel.unary_unary(
                '/packets.Loans/GetTaxReportData',
                request_serializer=loans__pb2.InputGetTaxReportData.SerializeToString,
                response_deserializer=loans__pb2.OutputGetTaxReportData.FromString,
                )
        self.CreateLoanRating = channel.unary_unary(
                '/packets.Loans/CreateLoanRating',
                request_serializer=loans__pb2.InputCreateLoanRating.SerializeToString,
                response_deserializer=loans__pb2.OutputCreateLoanRating.FromString,
                )
        self.ListLoanRating = channel.unary_unary(
                '/packets.Loans/ListLoanRating',
                request_serializer=loans__pb2.InputListLoanRating.SerializeToString,
                response_deserializer=loans__pb2.OutputListLoanRating.FromString,
                )
        self.UpdateLoanOrigin = channel.unary_unary(
                '/packets.Loans/UpdateLoanOrigin',
                request_serializer=loans__pb2.InputUpdateLoanOrigin.SerializeToString,
                response_deserializer=loans__pb2.OutputUpdateLoanOrigin.FromString,
                )
        self.GetTotalDisbursement = channel.unary_unary(
                '/packets.Loans/GetTotalDisbursement',
                request_serializer=loans__pb2.InputGetTotalDisbursement.SerializeToString,
                response_deserializer=loans__pb2.OutputGetTotalDisbursement.FromString,
                )
        self.GetListLoan = channel.unary_unary(
                '/packets.Loans/GetListLoan',
                request_serializer=common__pb2.PViewArguments.SerializeToString,
                response_deserializer=common__pb2.PViewResponses.FromString,
                )
        self.GetUCL = channel.unary_unary(
                '/packets.Loans/GetUCL',
                request_serializer=loans__pb2.InputUserID.SerializeToString,
                response_deserializer=loans__pb2.OutputStatusMessageAnyData.FromString,
                )
        self.UpsertUCL = channel.unary_unary(
                '/packets.Loans/UpsertUCL',
                request_serializer=loans__pb2.InputUserIDAnyData.SerializeToString,
                response_deserializer=loans__pb2.OutputStatusMessage.FromString,
                )
        self.UseLimitUCL = channel.unary_unary(
                '/packets.Loans/UseLimitUCL',
                request_serializer=loans__pb2.InputUseLimitUCL.SerializeToString,
                response_deserializer=loans__pb2.OutputStatusMessage.FromString,
                )
        self.ReleaseLimitUCL = channel.unary_unary(
                '/packets.Loans/ReleaseLimitUCL',
                request_serializer=loans__pb2.InputReleaseLimitUCL.SerializeToString,
                response_deserializer=loans__pb2.OutputStatusMessage.FromString,
                )
        self.GetDueLoansByUserID = channel.unary_unary(
                '/packets.Loans/GetDueLoansByUserID',
                request_serializer=loans__pb2.InputUserID.SerializeToString,
                response_deserializer=loans__pb2.OutputStatusMessageAnyData.FromString,
                )
        self.GetSumLoanPaid = channel.unary_unary(
                '/packets.Loans/GetSumLoanPaid',
                request_serializer=loans__pb2.InputListLoan.SerializeToString,
                response_deserializer=loans__pb2.OutputStatusMessageAnyData.FromString,
                )
        self.CreatePaymentPriorityAndRepaymentTransaction = channel.unary_unary(
                '/packets.Loans/CreatePaymentPriorityAndRepaymentTransaction',
                request_serializer=loans__pb2.InputEarlyInstallmentRepayment.SerializeToString,
                response_deserializer=loans__pb2.OutputStatusMessage.FromString,
                )
        self.GetOverDueLoans = channel.unary_unary(
                '/packets.Loans/GetOverDueLoans',
                request_serializer=loans__pb2.InputListLoan.SerializeToString,
                response_deserializer=loans__pb2.OutputListLoan.FromString,
                )
        self.GetLoanStatusTracker = channel.unary_unary(
                '/packets.Loans/GetLoanStatusTracker',
                request_serializer=loans__pb2.InputGetLoanStatusTracker.SerializeToString,
                response_deserializer=loans__pb2.OutputGetLoanStatusTracker.FromString,
                )
        self.UpdateLoanStatusTracker = channel.unary_unary(
                '/packets.Loans/UpdateLoanStatusTracker',
                request_serializer=loans__pb2.InputUpdateLoanStatusTracker.SerializeToString,
                response_deserializer=loans__pb2.OutputStatusMessage.FromString,
                )
        self.GetVendorLoans = channel.unary_unary(
                '/packets.Loans/GetVendorLoans',
                request_serializer=loans__pb2.InputListLoan.SerializeToString,
                response_deserializer=loans__pb2.OutputListLoan.FromString,
                )
        self.GetLoanDisbursementDetails = channel.unary_unary(
                '/packets.Loans/GetLoanDisbursementDetails',
                request_serializer=loans__pb2.GetLoanDisbursementDetailsArgs.SerializeToString,
                response_deserializer=loans__pb2.OutputStatusMessageAnyData.FromString,
                )
        self.SaveLoanDisbursementDetails = channel.unary_unary(
                '/packets.Loans/SaveLoanDisbursementDetails',
                request_serializer=loans__pb2.SaveLoanDisbursementDetailsArgs.SerializeToString,
                response_deserializer=loans__pb2.OutputStatusMessage.FromString,
                )
        self.GetRepaymentScheduleByProductAndUserIDs = channel.unary_unary(
                '/packets.Loans/GetRepaymentScheduleByProductAndUserIDs',
                request_serializer=loans__pb2.GetRepaymentScheduleByProductAndUserIDsArguments.SerializeToString,
                response_deserializer=loans__pb2.GetRepaymentScheduleByProductAndUserIDsResponses.FromString,
                )
        self.ListUserFunding = channel.unary_unary(
                '/packets.Loans/ListUserFunding',
                request_serializer=loans__pb2.InputListUserFunding.SerializeToString,
                response_deserializer=loans__pb2.OutputListUserFunding.FromString,
                )
        self.CreateTopUpLoan = channel.unary_unary(
                '/packets.Loans/CreateTopUpLoan',
                request_serializer=loans__pb2.ParamCreateTopUpLoan.SerializeToString,
                response_deserializer=loans__pb2.OutputCreateTopUpLoan.FromString,
                )
        self.GetTopUpRequestByID = channel.unary_unary(
                '/packets.Loans/GetTopUpRequestByID',
                request_serializer=loans__pb2.ParamGetTopUpRequestByID.SerializeToString,
                response_deserializer=loans__pb2.OutputGetTopUpRequestByID.FromString,
                )
        self.GetTopUpRequestByLoanID = channel.unary_unary(
                '/packets.Loans/GetTopUpRequestByLoanID',
                request_serializer=loans__pb2.ParamGetTopUpRequestByLoanID.SerializeToString,
                response_deserializer=loans__pb2.OutputGetTopUpRequestByLoanID.FromString,
                )
        self.LoanAvailableForTopUpProduct = channel.unary_unary(
                '/packets.Loans/LoanAvailableForTopUpProduct',
                request_serializer=loans__pb2.ParamLoanAvailableForTopUpProduct.SerializeToString,
                response_deserializer=loans__pb2.OutputKoinBisnis.FromString,
                )
        self.SubmitTopUpLoanProduct = channel.unary_unary(
                '/packets.Loans/SubmitTopUpLoanProduct',
                request_serializer=loans__pb2.ParamSubmitTopUpLoanProduct.SerializeToString,
                response_deserializer=loans__pb2.OutputKoinBisnis.FromString,
                )
        self.GetTopUpDataByLoanID = channel.unary_unary(
                '/packets.Loans/GetTopUpDataByLoanID',
                request_serializer=loans__pb2.InputGetTopUpDataByLoanID.SerializeToString,
                response_deserializer=loans__pb2.OutputListLoan.FromString,
                )
        self.ProcessTopUpRequest = channel.unary_unary(
                '/packets.Loans/ProcessTopUpRequest',
                request_serializer=loans__pb2.ProcessTopUpRequestArguments.SerializeToString,
                response_deserializer=loans__pb2.ProcessTopUpRequestResponse.FromString,
                )
        self.UpdateLoanDisbursementDetails = channel.unary_unary(
                '/packets.Loans/UpdateLoanDisbursementDetails',
                request_serializer=loans__pb2.SaveLoanDisbursementDetailsArgs.SerializeToString,
                response_deserializer=loans__pb2.OutputStatusMessage.FromString,
                )
        self.UpdateLoanKGResignStatus = channel.unary_unary(
                '/packets.Loans/UpdateLoanKGResignStatus',
                request_serializer=loans__pb2.InputUpdateLoanKgResignStatus.SerializeToString,
                response_deserializer=loans__pb2.OutputStatusMessage.FromString,
                )
        self.GetGenerateLenderAgreementDataByFundingID = channel.unary_unary(
                '/packets.Loans/GetGenerateLenderAgreementDataByFundingID',
                request_serializer=loans__pb2.InputGetGenerateLenderAgreementDataByFundingID.SerializeToString,
                response_deserializer=loans__pb2.OutputGetGenerateLenderAgreementDataByFundingID.FromString,
                )
        self.GetFundingDetailsPostPurchaseSuccessful = channel.unary_unary(
                '/packets.Loans/GetFundingDetailsPostPurchaseSuccessful',
                request_serializer=loans__pb2.InputGetFundingDetailsPostSuccessfulPurchase.SerializeToString,
                response_deserializer=loans__pb2.OutputGetFundingDetailsPostSuccessfulPurchase.FromString,
                )
        self.GetScheduleEarning = channel.unary_unary(
                '/packets.Loans/GetScheduleEarning',
                request_serializer=loans__pb2.InputGetScheduleEarning.SerializeToString,
                response_deserializer=loans__pb2.OutputGetScheduleEarning.FromString,
                )
        self.GetListOfFundedLoans = channel.unary_unary(
                '/packets.Loans/GetListOfFundedLoans',
                request_serializer=loans__pb2.InputGetListOfFundedLoans.SerializeToString,
                response_deserializer=loans__pb2.OutputGetListOfFundedLoans.FromString,
                )
        self.GetExpectedReturnsSummary = channel.unary_unary(
                '/packets.Loans/GetExpectedReturnsSummary',
                request_serializer=loans__pb2.BorrowerLoanDetail.SerializeToString,
                response_deserializer=loans__pb2.ExpectedReturnsSummary.FromString,
                )
        self.GetNonRestructuredReceivedReturnsSummary = channel.unary_unary(
                '/packets.Loans/GetNonRestructuredReceivedReturnsSummary',
                request_serializer=loans__pb2.BorrowerLoanDetail.SerializeToString,
                response_deserializer=loans__pb2.NonRestructuredReceivedReturnsSummary.FromString,
                )
        self.GetRestructuredReceivedReturnsSummaries = channel.unary_unary(
                '/packets.Loans/GetRestructuredReceivedReturnsSummaries',
                request_serializer=loans__pb2.BorrowerLoanDetail.SerializeToString,
                response_deserializer=loans__pb2.RestructuredReceivedReturnsSummaries.FromString,
                )
        self.GetReceivedReturnsForProvisionFundSummary = channel.unary_unary(
                '/packets.Loans/GetReceivedReturnsForProvisionFundSummary',
                request_serializer=loans__pb2.BorrowerLoanDetail.SerializeToString,
                response_deserializer=loans__pb2.ReceivedReturnsForProvisionFundSummary.FromString,
                )
        self.GetRepaymentsTabDetails = channel.unary_unary(
                '/packets.Loans/GetRepaymentsTabDetails',
                request_serializer=loans__pb2.InputGetRepaymentsDetails.SerializeToString,
                response_deserializer=loans__pb2.OutputGetRepaymentsTabDetails.FromString,
                )
        self.GetRepaymentsTabDetailsSummary = channel.unary_unary(
                '/packets.Loans/GetRepaymentsTabDetailsSummary',
                request_serializer=loans__pb2.InputGetRepaymentsDetails.SerializeToString,
                response_deserializer=loans__pb2.OutputGetRepaymentsTabDetailsSummary.FromString,
                )
        self.UpsertRepaymentTransaction = channel.unary_unary(
                '/packets.Loans/UpsertRepaymentTransaction',
                request_serializer=loans__pb2.InputUpsertRepaymentTransaction.SerializeToString,
                response_deserializer=loans__pb2.OutputUpsertRepaymentTransaction.FromString,
                )
        self.ConfirmAssetTransfer = channel.unary_unary(
                '/packets.Loans/ConfirmAssetTransfer',
                request_serializer=loans__pb2.InputConfirmAssetTransfer.SerializeToString,
                response_deserializer=loans__pb2.OutputConfirmAssetTransfer.FromString,
                )
        self.CheckSpreadingTransaction = channel.unary_unary(
                '/packets.Loans/CheckSpreadingTransaction',
                request_serializer=loans__pb2.InputCheckSpreadingTransaction.SerializeToString,
                response_deserializer=loans__pb2.OutputCheckSpreadingTransaction.FromString,
                )
        self.UpdatePrefundRelease = channel.unary_unary(
                '/packets.Loans/UpdatePrefundRelease',
                request_serializer=loans__pb2.InputPrefundRelease.SerializeToString,
                response_deserializer=loans__pb2.OutputPrefundRelease.FromString,
                )
        self.GetLenderTotalReceived = channel.unary_unary(
                '/packets.Loans/GetLenderTotalReceived',
                request_serializer=loans__pb2.LenderTotalReceivedFor.SerializeToString,
                response_deserializer=loans__pb2.LenderTotalReceivedDetails.FromString,
                )
        self.UpsertLoanFees = channel.unary_unary(
                '/packets.Loans/UpsertLoanFees',
                request_serializer=loans__pb2.InputLoanFees.SerializeToString,
                response_deserializer=loans__pb2.OutputLoanFees.FromString,
                )
        self.GetLoanFeePayment = channel.unary_unary(
                '/packets.Loans/GetLoanFeePayment',
                request_serializer=loans__pb2.GetLoanFeePaymentRequest.SerializeToString,
                response_deserializer=loans__pb2.GetLoanFeePaymentResponse.FromString,
                )
        self.GetLendersUserIDs = channel.unary_unary(
                '/packets.Loans/GetLendersUserIDs',
                request_serializer=loans__pb2.InputLoanID.SerializeToString,
                response_deserializer=loans__pb2.OutputLendersUserIDs.FromString,
                )


class LoansServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CheckLoanBorrower(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListLoan(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListLoanHRDashboard(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NewListLoan(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListLoanByCreatedAt(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckAvailableFundingAmount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBorrowerInterestAverage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListBorrowerLoan(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListLoanByUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserLoan(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserLoanSortByUpdate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserLoanSortByUpdateExcluded(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DetailLoan(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateLoan(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateLoan(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteLoan(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateLoanStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateLatestPaymentStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelFunding(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLoanFundings(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListLoanFunding(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DetailLoanFunding(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateLoanFunding(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateLoanFunding(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteLoanFunding(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchUpdateFundingAmount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLoanFundingByLoanID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AssetTransfer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SumActiveLoanFunding(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListActiveLoanFundingByGrade(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListActiveLoanFundingByProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetListUserFundingSummary(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLenderSchedule(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListLenderSchedules(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListLenderSchedulesByGrade(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListLenderSchedulesByProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListLenderSchedulesByFundingID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListLenderSchedulesByScheduleVersionId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListLenderScheduleVersionsByFundingID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListLenderSpreadingByFundingID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListLenderSpreadingBySpreadingTransactionID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateLoanRepaymentScheduleVersion(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFundingProgress(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HasLoan(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SummaryLoan(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ActiveLoan(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ApplicationProgress(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ApplicationProgressv2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListLoanProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoanDetailProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoanScheduleProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoanContractProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoanFundingProgressProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoanDetailProgressProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoanOfferProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubmitLoanOfferProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetKoinBisnisLoanRepaymentDetail(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListScheduleProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RequestClearance(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserLoanWithRequestClearance(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetClearanceDataByLoanID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReservePaymentLoan(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateScheduleRepayment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetScheduleRepaymentProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GenerateLenderSchedules(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EarlyInstallmentRepayment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetScheduleRepaymentByScheduleId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSpreadingTransaction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadjustLoanFundingPercentage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLoanDocuments(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateRoboRepayment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetListScheduleByLoanID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLoanContract(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLoanContractUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateLoanRepaymentSchedule(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListSpreadingDeductionDetailsBySpreadingDetailID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateLoanTransitionDate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoanClearanceDetailProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreatePrematureClearance(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPrematureClearance(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPrematureClearanceRequestDetail(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOutstandingLoanAmountPrematureClearance(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOutstandingLoanAmountNormalPayment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ActiveLoanV2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoanScheduleProductV2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListScheduleProductV2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDetailLoanByLenderScheduleVersionID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLoanByProductCode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateLoanDocument(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateLoanDeductionDetails(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeactivateLoanFunding(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOnGoingLoan(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateLenderCommissionFee(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLenderCommissionFee(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOngoingLoanList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLoanReport(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTopUpRequestByNewLoanID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLoans(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMdr(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateMdr(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserFundingLoanProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserFundingLoanCodeByProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListHistoryRestructure(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTaxReportData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateLoanRating(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListLoanRating(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateLoanOrigin(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTotalDisbursement(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetListLoan(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUCL(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpsertUCL(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UseLimitUCL(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReleaseLimitUCL(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDueLoansByUserID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSumLoanPaid(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreatePaymentPriorityAndRepaymentTransaction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOverDueLoans(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLoanStatusTracker(self, request, context):
        """> Loan Status Tracker
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateLoanStatusTracker(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVendorLoans(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLoanDisbursementDetails(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SaveLoanDisbursementDetails(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRepaymentScheduleByProductAndUserIDs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListUserFunding(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateTopUpLoan(self, request, context):
        """> Top Up Management
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTopUpRequestByID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTopUpRequestByLoanID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoanAvailableForTopUpProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubmitTopUpLoanProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTopUpDataByLoanID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProcessTopUpRequest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateLoanDisbursementDetails(self, request, context):
        """> Disbursment Detail
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateLoanKGResignStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetGenerateLenderAgreementDataByFundingID(self, request, context):
        """Products-portfolio
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFundingDetailsPostPurchaseSuccessful(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetScheduleEarning(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetListOfFundedLoans(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetExpectedReturnsSummary(self, request, context):
        """loan performance
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNonRestructuredReceivedReturnsSummary(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRestructuredReceivedReturnsSummaries(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetReceivedReturnsForProvisionFundSummary(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRepaymentsTabDetails(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRepaymentsTabDetailsSummary(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpsertRepaymentTransaction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConfirmAssetTransfer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckSpreadingTransaction(self, request, context):
        """Spreading
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdatePrefundRelease(self, request, context):
        """Prefund
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLenderTotalReceived(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpsertLoanFees(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLoanFeePayment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLendersUserIDs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_LoansServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CheckLoanBorrower': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckLoanBorrower,
                    request_deserializer=loans__pb2.InputCheckLoanBorrower.FromString,
                    response_serializer=loans__pb2.OutputCheckLoanBorrower.SerializeToString,
            ),
            'ListLoan': grpc.unary_unary_rpc_method_handler(
                    servicer.ListLoan,
                    request_deserializer=loans__pb2.InputListLoan.FromString,
                    response_serializer=loans__pb2.OutputListLoan.SerializeToString,
            ),
            'ListLoanHRDashboard': grpc.unary_unary_rpc_method_handler(
                    servicer.ListLoanHRDashboard,
                    request_deserializer=loans__pb2.InputListLoanHRDashboard.FromString,
                    response_serializer=loans__pb2.OutputListLoanHRDashboard.SerializeToString,
            ),
            'NewListLoan': grpc.unary_unary_rpc_method_handler(
                    servicer.NewListLoan,
                    request_deserializer=loans__pb2.NewInputListLoan.FromString,
                    response_serializer=loans__pb2.NewOutputListLoan.SerializeToString,
            ),
            'ListLoanByCreatedAt': grpc.unary_unary_rpc_method_handler(
                    servicer.ListLoanByCreatedAt,
                    request_deserializer=loans__pb2.InputListLoan.FromString,
                    response_serializer=loans__pb2.OutputListLoan.SerializeToString,
            ),
            'CheckAvailableFundingAmount': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckAvailableFundingAmount,
                    request_deserializer=loans__pb2.InputCheckAvailableFundingAmount.FromString,
                    response_serializer=loans__pb2.OutputCheckAvailableFundingAmount.SerializeToString,
            ),
            'GetBorrowerInterestAverage': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBorrowerInterestAverage,
                    request_deserializer=loans__pb2.InputGetBorrowerInterestAverage.FromString,
                    response_serializer=loans__pb2.OutputGetBorrowerInterestAverage.SerializeToString,
            ),
            'ListBorrowerLoan': grpc.unary_unary_rpc_method_handler(
                    servicer.ListBorrowerLoan,
                    request_deserializer=loans__pb2.InputListBorrowerLoan.FromString,
                    response_serializer=loans__pb2.OutputListBorrowerLoan.SerializeToString,
            ),
            'ListLoanByUser': grpc.unary_unary_rpc_method_handler(
                    servicer.ListLoanByUser,
                    request_deserializer=loans__pb2.InputList.FromString,
                    response_serializer=loans__pb2.ListLoans.SerializeToString,
            ),
            'GetUserLoan': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserLoan,
                    request_deserializer=loans__pb2.InputListLoan.FromString,
                    response_serializer=loans__pb2.OutputListLoan.SerializeToString,
            ),
            'GetUserLoanSortByUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserLoanSortByUpdate,
                    request_deserializer=loans__pb2.InputListLoanSortByUpdate.FromString,
                    response_serializer=loans__pb2.OutputListLoanSortByUpdate.SerializeToString,
            ),
            'GetUserLoanSortByUpdateExcluded': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserLoanSortByUpdateExcluded,
                    request_deserializer=loans__pb2.InputListLoanSortByUpdate.FromString,
                    response_serializer=loans__pb2.OutputListLoanSortByUpdate.SerializeToString,
            ),
            'DetailLoan': grpc.unary_unary_rpc_method_handler(
                    servicer.DetailLoan,
                    request_deserializer=loans__pb2.InputDetailLoan.FromString,
                    response_serializer=loans__pb2.OutputDetailLoan.SerializeToString,
            ),
            'CreateLoan': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateLoan,
                    request_deserializer=loans__pb2.InputCreateLoan.FromString,
                    response_serializer=loans__pb2.OutputCreateLoan.SerializeToString,
            ),
            'UpdateLoan': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateLoan,
                    request_deserializer=loans__pb2.InputUpdateLoan.FromString,
                    response_serializer=loans__pb2.OutputUpdateLoan.SerializeToString,
            ),
            'DeleteLoan': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteLoan,
                    request_deserializer=loans__pb2.InputDeleteLoan.FromString,
                    response_serializer=loans__pb2.OutputDeleteLoan.SerializeToString,
            ),
            'UpdateLoanStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateLoanStatus,
                    request_deserializer=loans__pb2.InputList.FromString,
                    response_serializer=loans__pb2.OutputLoanStatus.SerializeToString,
            ),
            'UpdateLatestPaymentStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateLatestPaymentStatus,
                    request_deserializer=loans__pb2.InputList.FromString,
                    response_serializer=loans__pb2.OutputLoanStatus.SerializeToString,
            ),
            'CancelFunding': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelFunding,
                    request_deserializer=loans__pb2.InputCancelFunding.FromString,
                    response_serializer=loans__pb2.OutputCancelFunding.SerializeToString,
            ),
            'GetLoanFundings': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLoanFundings,
                    request_deserializer=loans__pb2.InputList.FromString,
                    response_serializer=loans__pb2.OutputGetLoanFundings.SerializeToString,
            ),
            'ListLoanFunding': grpc.unary_unary_rpc_method_handler(
                    servicer.ListLoanFunding,
                    request_deserializer=loans__pb2.InputListLoanFunding.FromString,
                    response_serializer=loans__pb2.OutputListLoanFunding.SerializeToString,
            ),
            'DetailLoanFunding': grpc.unary_unary_rpc_method_handler(
                    servicer.DetailLoanFunding,
                    request_deserializer=loans__pb2.InputDetailLoanFunding.FromString,
                    response_serializer=loans__pb2.OutputDetailLoanFunding.SerializeToString,
            ),
            'CreateLoanFunding': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateLoanFunding,
                    request_deserializer=loans__pb2.InputCreateLoanFunding.FromString,
                    response_serializer=loans__pb2.OutputCreateLoanFunding.SerializeToString,
            ),
            'UpdateLoanFunding': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateLoanFunding,
                    request_deserializer=loans__pb2.InputUpdateLoanFunding.FromString,
                    response_serializer=loans__pb2.OutputUpdateLoanFunding.SerializeToString,
            ),
            'DeleteLoanFunding': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteLoanFunding,
                    request_deserializer=loans__pb2.InputDeleteLoanFunding.FromString,
                    response_serializer=loans__pb2.OutputDeleteLoanFunding.SerializeToString,
            ),
            'BatchUpdateFundingAmount': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchUpdateFundingAmount,
                    request_deserializer=loans__pb2.InputBatchUpdateFundingAmount.FromString,
                    response_serializer=loans__pb2.OutputBatchUpdateFundingAmount.SerializeToString,
            ),
            'GetLoanFundingByLoanID': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLoanFundingByLoanID,
                    request_deserializer=loans__pb2.InputLoanFundingByLoanID.FromString,
                    response_serializer=loans__pb2.OutputLoanFundingByLoanID.SerializeToString,
            ),
            'AssetTransfer': grpc.unary_unary_rpc_method_handler(
                    servicer.AssetTransfer,
                    request_deserializer=loans__pb2.InputAssetTransfer.FromString,
                    response_serializer=loans__pb2.OutputAssetTransfer.SerializeToString,
            ),
            'SumActiveLoanFunding': grpc.unary_unary_rpc_method_handler(
                    servicer.SumActiveLoanFunding,
                    request_deserializer=loans__pb2.InputList.FromString,
                    response_serializer=loans__pb2.OutputSumActiveLoanFunding.SerializeToString,
            ),
            'ListActiveLoanFundingByGrade': grpc.unary_unary_rpc_method_handler(
                    servicer.ListActiveLoanFundingByGrade,
                    request_deserializer=loans__pb2.InputList.FromString,
                    response_serializer=loans__pb2.OutputListLoanfundingByGrade.SerializeToString,
            ),
            'ListActiveLoanFundingByProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.ListActiveLoanFundingByProduct,
                    request_deserializer=loans__pb2.InputList.FromString,
                    response_serializer=loans__pb2.OutputListLoanFundingByProduct.SerializeToString,
            ),
            'GetListUserFundingSummary': grpc.unary_unary_rpc_method_handler(
                    servicer.GetListUserFundingSummary,
                    request_deserializer=loans__pb2.InputGetListUserFundingSummary.FromString,
                    response_serializer=loans__pb2.OutputGetListUserFundingSummary.SerializeToString,
            ),
            'GetLenderSchedule': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLenderSchedule,
                    request_deserializer=loans__pb2.InputGetLenderSchedule.FromString,
                    response_serializer=loans__pb2.LenderSchedule.SerializeToString,
            ),
            'ListLenderSchedules': grpc.unary_unary_rpc_method_handler(
                    servicer.ListLenderSchedules,
                    request_deserializer=loans__pb2.InputList.FromString,
                    response_serializer=loans__pb2.OutputListLenderSchedules.SerializeToString,
            ),
            'ListLenderSchedulesByGrade': grpc.unary_unary_rpc_method_handler(
                    servicer.ListLenderSchedulesByGrade,
                    request_deserializer=loans__pb2.InputList.FromString,
                    response_serializer=loans__pb2.OutputListLenderSchedulesByGrade.SerializeToString,
            ),
            'ListLenderSchedulesByProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.ListLenderSchedulesByProduct,
                    request_deserializer=loans__pb2.InputList.FromString,
                    response_serializer=loans__pb2.OutputListLenderSchedulesByProduct.SerializeToString,
            ),
            'ListLenderSchedulesByFundingID': grpc.unary_unary_rpc_method_handler(
                    servicer.ListLenderSchedulesByFundingID,
                    request_deserializer=loans__pb2.InputList.FromString,
                    response_serializer=loans__pb2.OutputListLenderSchedulesByFundingID.SerializeToString,
            ),
            'ListLenderSchedulesByScheduleVersionId': grpc.unary_unary_rpc_method_handler(
                    servicer.ListLenderSchedulesByScheduleVersionId,
                    request_deserializer=loans__pb2.InputLenderListByScheduleVersion.FromString,
                    response_serializer=loans__pb2.OutputListLenderSchedulesByScheduleVersionId.SerializeToString,
            ),
            'ListLenderScheduleVersionsByFundingID': grpc.unary_unary_rpc_method_handler(
                    servicer.ListLenderScheduleVersionsByFundingID,
                    request_deserializer=loans__pb2.InputList.FromString,
                    response_serializer=loans__pb2.OutputLenderScheduleVersions.SerializeToString,
            ),
            'ListLenderSpreadingByFundingID': grpc.unary_unary_rpc_method_handler(
                    servicer.ListLenderSpreadingByFundingID,
                    request_deserializer=loans__pb2.InputList.FromString,
                    response_serializer=loans__pb2.OutputLenderSpreadingByFundingID.SerializeToString,
            ),
            'ListLenderSpreadingBySpreadingTransactionID': grpc.unary_unary_rpc_method_handler(
                    servicer.ListLenderSpreadingBySpreadingTransactionID,
                    request_deserializer=loans__pb2.InputList.FromString,
                    response_serializer=loans__pb2.LenderSpreadings.SerializeToString,
            ),
            'CreateLoanRepaymentScheduleVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateLoanRepaymentScheduleVersion,
                    request_deserializer=loans__pb2.LoanRepaymentScheduleVersion.FromString,
                    response_serializer=loans__pb2.OutputCreateLoanRepaymentScheduleVersion.SerializeToString,
            ),
            'GetFundingProgress': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFundingProgress,
                    request_deserializer=loans__pb2.ParamGetFundingProgress.FromString,
                    response_serializer=loans__pb2.OutputKoinBisnis.SerializeToString,
            ),
            'HasLoan': grpc.unary_unary_rpc_method_handler(
                    servicer.HasLoan,
                    request_deserializer=loans__pb2.ParamHasLoan.FromString,
                    response_serializer=loans__pb2.OutputKoinBisnis.SerializeToString,
            ),
            'SummaryLoan': grpc.unary_unary_rpc_method_handler(
                    servicer.SummaryLoan,
                    request_deserializer=loans__pb2.ParamSummaryLoan.FromString,
                    response_serializer=loans__pb2.OutputKoinBisnis.SerializeToString,
            ),
            'ActiveLoan': grpc.unary_unary_rpc_method_handler(
                    servicer.ActiveLoan,
                    request_deserializer=loans__pb2.ParamActiveLoan.FromString,
                    response_serializer=loans__pb2.OutputKoinBisnis.SerializeToString,
            ),
            'ApplicationProgress': grpc.unary_unary_rpc_method_handler(
                    servicer.ApplicationProgress,
                    request_deserializer=loans__pb2.ParamApplicationProgress.FromString,
                    response_serializer=loans__pb2.OutputKoinBisnis.SerializeToString,
            ),
            'ApplicationProgressv2': grpc.unary_unary_rpc_method_handler(
                    servicer.ApplicationProgressv2,
                    request_deserializer=loans__pb2.ParamApplicationProgress.FromString,
                    response_serializer=loans__pb2.OutputKoinBisnis.SerializeToString,
            ),
            'ListLoanProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.ListLoanProduct,
                    request_deserializer=loans__pb2.ParamListLoanProduct.FromString,
                    response_serializer=loans__pb2.OutputKoinBisnis.SerializeToString,
            ),
            'LoanDetailProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.LoanDetailProduct,
                    request_deserializer=loans__pb2.ParamLoanDetailProduct.FromString,
                    response_serializer=loans__pb2.OutputKoinBisnis.SerializeToString,
            ),
            'LoanScheduleProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.LoanScheduleProduct,
                    request_deserializer=loans__pb2.ParamLoanDetailProduct.FromString,
                    response_serializer=loans__pb2.OutputKoinBisnis.SerializeToString,
            ),
            'LoanContractProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.LoanContractProduct,
                    request_deserializer=loans__pb2.ParamLoanDetailProduct.FromString,
                    response_serializer=loans__pb2.OutputKoinBisnis.SerializeToString,
            ),
            'LoanFundingProgressProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.LoanFundingProgressProduct,
                    request_deserializer=loans__pb2.ParamLoanDetailProduct.FromString,
                    response_serializer=loans__pb2.OutputKoinBisnis.SerializeToString,
            ),
            'LoanDetailProgressProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.LoanDetailProgressProduct,
                    request_deserializer=loans__pb2.ParamLoanDetailProduct.FromString,
                    response_serializer=loans__pb2.OutputKoinBisnis.SerializeToString,
            ),
            'LoanOfferProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.LoanOfferProduct,
                    request_deserializer=loans__pb2.ParamLoanDetailProduct.FromString,
                    response_serializer=loans__pb2.OutputKoinBisnis.SerializeToString,
            ),
            'SubmitLoanOfferProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.SubmitLoanOfferProduct,
                    request_deserializer=loans__pb2.ParamSubmitLoanOfferProduct.FromString,
                    response_serializer=loans__pb2.OutputKoinBisnis.SerializeToString,
            ),
            'GetKoinBisnisLoanRepaymentDetail': grpc.unary_unary_rpc_method_handler(
                    servicer.GetKoinBisnisLoanRepaymentDetail,
                    request_deserializer=loans__pb2.InputListLoan.FromString,
                    response_serializer=loans__pb2.OutputKoinBisnis.SerializeToString,
            ),
            'ListScheduleProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.ListScheduleProduct,
                    request_deserializer=loans__pb2.ParamListScheduleProduct.FromString,
                    response_serializer=loans__pb2.OutputKoinBisnis.SerializeToString,
            ),
            'RequestClearance': grpc.unary_unary_rpc_method_handler(
                    servicer.RequestClearance,
                    request_deserializer=loans__pb2.InputRequestClearance.FromString,
                    response_serializer=loans__pb2.OutputRequestClearance.SerializeToString,
            ),
            'GetUserLoanWithRequestClearance': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserLoanWithRequestClearance,
                    request_deserializer=loans__pb2.InputListLoan.FromString,
                    response_serializer=loans__pb2.OutputListLoan.SerializeToString,
            ),
            'GetClearanceDataByLoanID': grpc.unary_unary_rpc_method_handler(
                    servicer.GetClearanceDataByLoanID,
                    request_deserializer=loans__pb2.InputGetClearanceDataByLoanID.FromString,
                    response_serializer=loans__pb2.OutputListLoan.SerializeToString,
            ),
            'ReservePaymentLoan': grpc.unary_unary_rpc_method_handler(
                    servicer.ReservePaymentLoan,
                    request_deserializer=loans__pb2.ParamReservePayment.FromString,
                    response_serializer=loans__pb2.OutputReservePayment.SerializeToString,
            ),
            'CreateScheduleRepayment': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateScheduleRepayment,
                    request_deserializer=loans__pb2.ParamCreateScheduleRepayment.FromString,
                    response_serializer=loans__pb2.OutputCreateScheduleRepayment.SerializeToString,
            ),
            'GetScheduleRepaymentProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.GetScheduleRepaymentProduct,
                    request_deserializer=loans__pb2.InputGetScheduleRepaymentProduct.FromString,
                    response_serializer=loans__pb2.OutputKoinBisnis.SerializeToString,
            ),
            'GenerateLenderSchedules': grpc.unary_unary_rpc_method_handler(
                    servicer.GenerateLenderSchedules,
                    request_deserializer=loans__pb2.InputGenerateLenderSchedules.FromString,
                    response_serializer=loans__pb2.OutputGenerateLenderSchedules.SerializeToString,
            ),
            'EarlyInstallmentRepayment': grpc.unary_unary_rpc_method_handler(
                    servicer.EarlyInstallmentRepayment,
                    request_deserializer=loans__pb2.InputEarlyInstallmentRepayment.FromString,
                    response_serializer=loans__pb2.OutputEarlyInstallmentRepayment.SerializeToString,
            ),
            'GetScheduleRepaymentByScheduleId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetScheduleRepaymentByScheduleId,
                    request_deserializer=loans__pb2.InputGetScheduleRepaymentByScheduleId.FromString,
                    response_serializer=loans__pb2.OutputKoinBisnis.SerializeToString,
            ),
            'GetSpreadingTransaction': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSpreadingTransaction,
                    request_deserializer=loans__pb2.InputGetSpreadingTransaction.FromString,
                    response_serializer=loans__pb2.SpreadingTransaction.SerializeToString,
            ),
            'ReadjustLoanFundingPercentage': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadjustLoanFundingPercentage,
                    request_deserializer=loans__pb2.InputReadjustLoanFundingPercentage.FromString,
                    response_serializer=loans__pb2.OutputReadjustLoanFundingPercentage.SerializeToString,
            ),
            'GetLoanDocuments': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLoanDocuments,
                    request_deserializer=loans__pb2.InputGetLoanDocuments.FromString,
                    response_serializer=loans__pb2.OutputLoanDocuments.SerializeToString,
            ),
            'CreateRoboRepayment': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateRoboRepayment,
                    request_deserializer=loans__pb2.InputCreateRoboRepayment.FromString,
                    response_serializer=loans__pb2.OutputCreateRoboRepayment.SerializeToString,
            ),
            'GetListScheduleByLoanID': grpc.unary_unary_rpc_method_handler(
                    servicer.GetListScheduleByLoanID,
                    request_deserializer=loans__pb2.InputGetListScheduleByLoanID.FromString,
                    response_serializer=loans__pb2.OutputGetListScheduleByLoanID.SerializeToString,
            ),
            'GetLoanContract': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLoanContract,
                    request_deserializer=loans__pb2.InputLoanContract.FromString,
                    response_serializer=loans__pb2.OutputLoanContract.SerializeToString,
            ),
            'GetLoanContractUser': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLoanContractUser,
                    request_deserializer=loans__pb2.InputLoanContractUser.FromString,
                    response_serializer=loans__pb2.OutputLoanContractUser.SerializeToString,
            ),
            'UpdateLoanRepaymentSchedule': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateLoanRepaymentSchedule,
                    request_deserializer=loans__pb2.InputUpdateRepaymentSchedule.FromString,
                    response_serializer=loans__pb2.OutputUpdateRepaymentSchedule.SerializeToString,
            ),
            'ListSpreadingDeductionDetailsBySpreadingDetailID': grpc.unary_unary_rpc_method_handler(
                    servicer.ListSpreadingDeductionDetailsBySpreadingDetailID,
                    request_deserializer=loans__pb2.InputList.FromString,
                    response_serializer=loans__pb2.SpreadingDeductionDetails.SerializeToString,
            ),
            'UpdateLoanTransitionDate': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateLoanTransitionDate,
                    request_deserializer=loans__pb2.ParamUpdateLoanTransitionDate.FromString,
                    response_serializer=loans__pb2.OutputKoinBisnis.SerializeToString,
            ),
            'LoanClearanceDetailProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.LoanClearanceDetailProduct,
                    request_deserializer=loans__pb2.ParamLoanClearanceDetailProduct.FromString,
                    response_serializer=loans__pb2.OutputKoinBisnis.SerializeToString,
            ),
            'CreatePrematureClearance': grpc.unary_unary_rpc_method_handler(
                    servicer.CreatePrematureClearance,
                    request_deserializer=loans__pb2.ParamsCreatePrematureClearance.FromString,
                    response_serializer=loans__pb2.OutputCreatePrematureClearance.SerializeToString,
            ),
            'GetPrematureClearance': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPrematureClearance,
                    request_deserializer=loans__pb2.ParamGetPreamatureClerance.FromString,
                    response_serializer=loans__pb2.OutputGetPreamatureClerance.SerializeToString,
            ),
            'GetPrematureClearanceRequestDetail': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPrematureClearanceRequestDetail,
                    request_deserializer=loans__pb2.ParamGetPrematureClearanceRequestDetail.FromString,
                    response_serializer=loans__pb2.OutputGetPrematureClearanceRequestDetail.SerializeToString,
            ),
            'GetOutstandingLoanAmountPrematureClearance': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOutstandingLoanAmountPrematureClearance,
                    request_deserializer=loans__pb2.ParamGetOutstandingLoan.FromString,
                    response_serializer=loans__pb2.OutputGetOutstandingLoan.SerializeToString,
            ),
            'GetOutstandingLoanAmountNormalPayment': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOutstandingLoanAmountNormalPayment,
                    request_deserializer=loans__pb2.ParamGetOutstandingLoan.FromString,
                    response_serializer=loans__pb2.OutputGetOutstandingLoan.SerializeToString,
            ),
            'ActiveLoanV2': grpc.unary_unary_rpc_method_handler(
                    servicer.ActiveLoanV2,
                    request_deserializer=loans__pb2.ParamActiveLoan.FromString,
                    response_serializer=loans__pb2.OutputKoinEmployee.SerializeToString,
            ),
            'LoanScheduleProductV2': grpc.unary_unary_rpc_method_handler(
                    servicer.LoanScheduleProductV2,
                    request_deserializer=loans__pb2.ParamLoanDetailProduct.FromString,
                    response_serializer=loans__pb2.OutputKoinEmployee.SerializeToString,
            ),
            'ListScheduleProductV2': grpc.unary_unary_rpc_method_handler(
                    servicer.ListScheduleProductV2,
                    request_deserializer=loans__pb2.ParamListScheduleProduct.FromString,
                    response_serializer=loans__pb2.OutputKoinEmployee.SerializeToString,
            ),
            'GetDetailLoanByLenderScheduleVersionID': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDetailLoanByLenderScheduleVersionID,
                    request_deserializer=loans__pb2.LenderScheduleVersions.FromString,
                    response_serializer=loans__pb2.OutputDetailLoan.SerializeToString,
            ),
            'GetLoanByProductCode': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLoanByProductCode,
                    request_deserializer=loans__pb2.GetLoanByProductCodeArgs.FromString,
                    response_serializer=loans__pb2.Loan.SerializeToString,
            ),
            'CreateLoanDocument': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateLoanDocument,
                    request_deserializer=loans__pb2.ParamLoanDocument.FromString,
                    response_serializer=loans__pb2.OutputCreateLoanDocument.SerializeToString,
            ),
            'CreateLoanDeductionDetails': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateLoanDeductionDetails,
                    request_deserializer=loans__pb2.LoanDeductionDetailItemRequests.FromString,
                    response_serializer=loans__pb2.LoanDefaultOutput.SerializeToString,
            ),
            'DeactivateLoanFunding': grpc.unary_unary_rpc_method_handler(
                    servicer.DeactivateLoanFunding,
                    request_deserializer=loans__pb2.ParamDeactivateLoanFunding.FromString,
                    response_serializer=loans__pb2.OutputDeactivateLoanFunding.SerializeToString,
            ),
            'GetOnGoingLoan': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOnGoingLoan,
                    request_deserializer=loans__pb2.InputOnGoingLoan.FromString,
                    response_serializer=loans__pb2.OutputOnGoingLoan.SerializeToString,
            ),
            'CreateLenderCommissionFee': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateLenderCommissionFee,
                    request_deserializer=loans__pb2.InputLenderCommissionFee.FromString,
                    response_serializer=loans__pb2.OutputLenderCommissionFee.SerializeToString,
            ),
            'GetLenderCommissionFee': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLenderCommissionFee,
                    request_deserializer=loans__pb2.InputLenderCommissionFee.FromString,
                    response_serializer=loans__pb2.OutputLenderCommissionFee.SerializeToString,
            ),
            'GetOngoingLoanList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOngoingLoanList,
                    request_deserializer=loans__pb2.InputOngoingLoanList.FromString,
                    response_serializer=loans__pb2.OutputOngoingLoanList.SerializeToString,
            ),
            'GetLoanReport': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLoanReport,
                    request_deserializer=loans__pb2.InputLoanReport.FromString,
                    response_serializer=loans__pb2.OutputLoanReportList.SerializeToString,
            ),
            'GetTopUpRequestByNewLoanID': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTopUpRequestByNewLoanID,
                    request_deserializer=loans__pb2.ParamGetTopUpRequestByNewLoanID.FromString,
                    response_serializer=loans__pb2.OutputGetTopUpRequestByNewLoanID.SerializeToString,
            ),
            'GetLoans': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLoans,
                    request_deserializer=loans__pb2.InputGetLoans.FromString,
                    response_serializer=loans__pb2.OutputGetLoans.SerializeToString,
            ),
            'GetMdr': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMdr,
                    request_deserializer=loans__pb2.InputGetMDR.FromString,
                    response_serializer=loans__pb2.OutputGetMDR.SerializeToString,
            ),
            'UpdateMdr': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateMdr,
                    request_deserializer=loans__pb2.InputUpdateMdr.FromString,
                    response_serializer=loans__pb2.OutputUpdateMdr.SerializeToString,
            ),
            'GetUserFundingLoanProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserFundingLoanProduct,
                    request_deserializer=loans__pb2.InputGetUserFundingLoanProduct.FromString,
                    response_serializer=loans__pb2.OutputGetUserFundingLoanProduct.SerializeToString,
            ),
            'GetUserFundingLoanCodeByProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserFundingLoanCodeByProduct,
                    request_deserializer=loans__pb2.InputGetUserFundingLoanProduct.FromString,
                    response_serializer=loans__pb2.OutputGetUserFundingLoanCodeByProduct.SerializeToString,
            ),
            'ListHistoryRestructure': grpc.unary_unary_rpc_method_handler(
                    servicer.ListHistoryRestructure,
                    request_deserializer=loans__pb2.InputHistoryRestructure.FromString,
                    response_serializer=loans__pb2.OutputHistoryRestructure.SerializeToString,
            ),
            'GetTaxReportData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTaxReportData,
                    request_deserializer=loans__pb2.InputGetTaxReportData.FromString,
                    response_serializer=loans__pb2.OutputGetTaxReportData.SerializeToString,
            ),
            'CreateLoanRating': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateLoanRating,
                    request_deserializer=loans__pb2.InputCreateLoanRating.FromString,
                    response_serializer=loans__pb2.OutputCreateLoanRating.SerializeToString,
            ),
            'ListLoanRating': grpc.unary_unary_rpc_method_handler(
                    servicer.ListLoanRating,
                    request_deserializer=loans__pb2.InputListLoanRating.FromString,
                    response_serializer=loans__pb2.OutputListLoanRating.SerializeToString,
            ),
            'UpdateLoanOrigin': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateLoanOrigin,
                    request_deserializer=loans__pb2.InputUpdateLoanOrigin.FromString,
                    response_serializer=loans__pb2.OutputUpdateLoanOrigin.SerializeToString,
            ),
            'GetTotalDisbursement': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTotalDisbursement,
                    request_deserializer=loans__pb2.InputGetTotalDisbursement.FromString,
                    response_serializer=loans__pb2.OutputGetTotalDisbursement.SerializeToString,
            ),
            'GetListLoan': grpc.unary_unary_rpc_method_handler(
                    servicer.GetListLoan,
                    request_deserializer=common__pb2.PViewArguments.FromString,
                    response_serializer=common__pb2.PViewResponses.SerializeToString,
            ),
            'GetUCL': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUCL,
                    request_deserializer=loans__pb2.InputUserID.FromString,
                    response_serializer=loans__pb2.OutputStatusMessageAnyData.SerializeToString,
            ),
            'UpsertUCL': grpc.unary_unary_rpc_method_handler(
                    servicer.UpsertUCL,
                    request_deserializer=loans__pb2.InputUserIDAnyData.FromString,
                    response_serializer=loans__pb2.OutputStatusMessage.SerializeToString,
            ),
            'UseLimitUCL': grpc.unary_unary_rpc_method_handler(
                    servicer.UseLimitUCL,
                    request_deserializer=loans__pb2.InputUseLimitUCL.FromString,
                    response_serializer=loans__pb2.OutputStatusMessage.SerializeToString,
            ),
            'ReleaseLimitUCL': grpc.unary_unary_rpc_method_handler(
                    servicer.ReleaseLimitUCL,
                    request_deserializer=loans__pb2.InputReleaseLimitUCL.FromString,
                    response_serializer=loans__pb2.OutputStatusMessage.SerializeToString,
            ),
            'GetDueLoansByUserID': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDueLoansByUserID,
                    request_deserializer=loans__pb2.InputUserID.FromString,
                    response_serializer=loans__pb2.OutputStatusMessageAnyData.SerializeToString,
            ),
            'GetSumLoanPaid': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSumLoanPaid,
                    request_deserializer=loans__pb2.InputListLoan.FromString,
                    response_serializer=loans__pb2.OutputStatusMessageAnyData.SerializeToString,
            ),
            'CreatePaymentPriorityAndRepaymentTransaction': grpc.unary_unary_rpc_method_handler(
                    servicer.CreatePaymentPriorityAndRepaymentTransaction,
                    request_deserializer=loans__pb2.InputEarlyInstallmentRepayment.FromString,
                    response_serializer=loans__pb2.OutputStatusMessage.SerializeToString,
            ),
            'GetOverDueLoans': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOverDueLoans,
                    request_deserializer=loans__pb2.InputListLoan.FromString,
                    response_serializer=loans__pb2.OutputListLoan.SerializeToString,
            ),
            'GetLoanStatusTracker': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLoanStatusTracker,
                    request_deserializer=loans__pb2.InputGetLoanStatusTracker.FromString,
                    response_serializer=loans__pb2.OutputGetLoanStatusTracker.SerializeToString,
            ),
            'UpdateLoanStatusTracker': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateLoanStatusTracker,
                    request_deserializer=loans__pb2.InputUpdateLoanStatusTracker.FromString,
                    response_serializer=loans__pb2.OutputStatusMessage.SerializeToString,
            ),
            'GetVendorLoans': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVendorLoans,
                    request_deserializer=loans__pb2.InputListLoan.FromString,
                    response_serializer=loans__pb2.OutputListLoan.SerializeToString,
            ),
            'GetLoanDisbursementDetails': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLoanDisbursementDetails,
                    request_deserializer=loans__pb2.GetLoanDisbursementDetailsArgs.FromString,
                    response_serializer=loans__pb2.OutputStatusMessageAnyData.SerializeToString,
            ),
            'SaveLoanDisbursementDetails': grpc.unary_unary_rpc_method_handler(
                    servicer.SaveLoanDisbursementDetails,
                    request_deserializer=loans__pb2.SaveLoanDisbursementDetailsArgs.FromString,
                    response_serializer=loans__pb2.OutputStatusMessage.SerializeToString,
            ),
            'GetRepaymentScheduleByProductAndUserIDs': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRepaymentScheduleByProductAndUserIDs,
                    request_deserializer=loans__pb2.GetRepaymentScheduleByProductAndUserIDsArguments.FromString,
                    response_serializer=loans__pb2.GetRepaymentScheduleByProductAndUserIDsResponses.SerializeToString,
            ),
            'ListUserFunding': grpc.unary_unary_rpc_method_handler(
                    servicer.ListUserFunding,
                    request_deserializer=loans__pb2.InputListUserFunding.FromString,
                    response_serializer=loans__pb2.OutputListUserFunding.SerializeToString,
            ),
            'CreateTopUpLoan': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateTopUpLoan,
                    request_deserializer=loans__pb2.ParamCreateTopUpLoan.FromString,
                    response_serializer=loans__pb2.OutputCreateTopUpLoan.SerializeToString,
            ),
            'GetTopUpRequestByID': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTopUpRequestByID,
                    request_deserializer=loans__pb2.ParamGetTopUpRequestByID.FromString,
                    response_serializer=loans__pb2.OutputGetTopUpRequestByID.SerializeToString,
            ),
            'GetTopUpRequestByLoanID': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTopUpRequestByLoanID,
                    request_deserializer=loans__pb2.ParamGetTopUpRequestByLoanID.FromString,
                    response_serializer=loans__pb2.OutputGetTopUpRequestByLoanID.SerializeToString,
            ),
            'LoanAvailableForTopUpProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.LoanAvailableForTopUpProduct,
                    request_deserializer=loans__pb2.ParamLoanAvailableForTopUpProduct.FromString,
                    response_serializer=loans__pb2.OutputKoinBisnis.SerializeToString,
            ),
            'SubmitTopUpLoanProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.SubmitTopUpLoanProduct,
                    request_deserializer=loans__pb2.ParamSubmitTopUpLoanProduct.FromString,
                    response_serializer=loans__pb2.OutputKoinBisnis.SerializeToString,
            ),
            'GetTopUpDataByLoanID': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTopUpDataByLoanID,
                    request_deserializer=loans__pb2.InputGetTopUpDataByLoanID.FromString,
                    response_serializer=loans__pb2.OutputListLoan.SerializeToString,
            ),
            'ProcessTopUpRequest': grpc.unary_unary_rpc_method_handler(
                    servicer.ProcessTopUpRequest,
                    request_deserializer=loans__pb2.ProcessTopUpRequestArguments.FromString,
                    response_serializer=loans__pb2.ProcessTopUpRequestResponse.SerializeToString,
            ),
            'UpdateLoanDisbursementDetails': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateLoanDisbursementDetails,
                    request_deserializer=loans__pb2.SaveLoanDisbursementDetailsArgs.FromString,
                    response_serializer=loans__pb2.OutputStatusMessage.SerializeToString,
            ),
            'UpdateLoanKGResignStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateLoanKGResignStatus,
                    request_deserializer=loans__pb2.InputUpdateLoanKgResignStatus.FromString,
                    response_serializer=loans__pb2.OutputStatusMessage.SerializeToString,
            ),
            'GetGenerateLenderAgreementDataByFundingID': grpc.unary_unary_rpc_method_handler(
                    servicer.GetGenerateLenderAgreementDataByFundingID,
                    request_deserializer=loans__pb2.InputGetGenerateLenderAgreementDataByFundingID.FromString,
                    response_serializer=loans__pb2.OutputGetGenerateLenderAgreementDataByFundingID.SerializeToString,
            ),
            'GetFundingDetailsPostPurchaseSuccessful': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFundingDetailsPostPurchaseSuccessful,
                    request_deserializer=loans__pb2.InputGetFundingDetailsPostSuccessfulPurchase.FromString,
                    response_serializer=loans__pb2.OutputGetFundingDetailsPostSuccessfulPurchase.SerializeToString,
            ),
            'GetScheduleEarning': grpc.unary_unary_rpc_method_handler(
                    servicer.GetScheduleEarning,
                    request_deserializer=loans__pb2.InputGetScheduleEarning.FromString,
                    response_serializer=loans__pb2.OutputGetScheduleEarning.SerializeToString,
            ),
            'GetListOfFundedLoans': grpc.unary_unary_rpc_method_handler(
                    servicer.GetListOfFundedLoans,
                    request_deserializer=loans__pb2.InputGetListOfFundedLoans.FromString,
                    response_serializer=loans__pb2.OutputGetListOfFundedLoans.SerializeToString,
            ),
            'GetExpectedReturnsSummary': grpc.unary_unary_rpc_method_handler(
                    servicer.GetExpectedReturnsSummary,
                    request_deserializer=loans__pb2.BorrowerLoanDetail.FromString,
                    response_serializer=loans__pb2.ExpectedReturnsSummary.SerializeToString,
            ),
            'GetNonRestructuredReceivedReturnsSummary': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNonRestructuredReceivedReturnsSummary,
                    request_deserializer=loans__pb2.BorrowerLoanDetail.FromString,
                    response_serializer=loans__pb2.NonRestructuredReceivedReturnsSummary.SerializeToString,
            ),
            'GetRestructuredReceivedReturnsSummaries': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRestructuredReceivedReturnsSummaries,
                    request_deserializer=loans__pb2.BorrowerLoanDetail.FromString,
                    response_serializer=loans__pb2.RestructuredReceivedReturnsSummaries.SerializeToString,
            ),
            'GetReceivedReturnsForProvisionFundSummary': grpc.unary_unary_rpc_method_handler(
                    servicer.GetReceivedReturnsForProvisionFundSummary,
                    request_deserializer=loans__pb2.BorrowerLoanDetail.FromString,
                    response_serializer=loans__pb2.ReceivedReturnsForProvisionFundSummary.SerializeToString,
            ),
            'GetRepaymentsTabDetails': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRepaymentsTabDetails,
                    request_deserializer=loans__pb2.InputGetRepaymentsDetails.FromString,
                    response_serializer=loans__pb2.OutputGetRepaymentsTabDetails.SerializeToString,
            ),
            'GetRepaymentsTabDetailsSummary': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRepaymentsTabDetailsSummary,
                    request_deserializer=loans__pb2.InputGetRepaymentsDetails.FromString,
                    response_serializer=loans__pb2.OutputGetRepaymentsTabDetailsSummary.SerializeToString,
            ),
            'UpsertRepaymentTransaction': grpc.unary_unary_rpc_method_handler(
                    servicer.UpsertRepaymentTransaction,
                    request_deserializer=loans__pb2.InputUpsertRepaymentTransaction.FromString,
                    response_serializer=loans__pb2.OutputUpsertRepaymentTransaction.SerializeToString,
            ),
            'ConfirmAssetTransfer': grpc.unary_unary_rpc_method_handler(
                    servicer.ConfirmAssetTransfer,
                    request_deserializer=loans__pb2.InputConfirmAssetTransfer.FromString,
                    response_serializer=loans__pb2.OutputConfirmAssetTransfer.SerializeToString,
            ),
            'CheckSpreadingTransaction': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckSpreadingTransaction,
                    request_deserializer=loans__pb2.InputCheckSpreadingTransaction.FromString,
                    response_serializer=loans__pb2.OutputCheckSpreadingTransaction.SerializeToString,
            ),
            'UpdatePrefundRelease': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdatePrefundRelease,
                    request_deserializer=loans__pb2.InputPrefundRelease.FromString,
                    response_serializer=loans__pb2.OutputPrefundRelease.SerializeToString,
            ),
            'GetLenderTotalReceived': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLenderTotalReceived,
                    request_deserializer=loans__pb2.LenderTotalReceivedFor.FromString,
                    response_serializer=loans__pb2.LenderTotalReceivedDetails.SerializeToString,
            ),
            'UpsertLoanFees': grpc.unary_unary_rpc_method_handler(
                    servicer.UpsertLoanFees,
                    request_deserializer=loans__pb2.InputLoanFees.FromString,
                    response_serializer=loans__pb2.OutputLoanFees.SerializeToString,
            ),
            'GetLoanFeePayment': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLoanFeePayment,
                    request_deserializer=loans__pb2.GetLoanFeePaymentRequest.FromString,
                    response_serializer=loans__pb2.GetLoanFeePaymentResponse.SerializeToString,
            ),
            'GetLendersUserIDs': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLendersUserIDs,
                    request_deserializer=loans__pb2.InputLoanID.FromString,
                    response_serializer=loans__pb2.OutputLendersUserIDs.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'packets.Loans', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Loans(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CheckLoanBorrower(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/CheckLoanBorrower',
            loans__pb2.InputCheckLoanBorrower.SerializeToString,
            loans__pb2.OutputCheckLoanBorrower.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListLoan(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/ListLoan',
            loans__pb2.InputListLoan.SerializeToString,
            loans__pb2.OutputListLoan.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListLoanHRDashboard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/ListLoanHRDashboard',
            loans__pb2.InputListLoanHRDashboard.SerializeToString,
            loans__pb2.OutputListLoanHRDashboard.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NewListLoan(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/NewListLoan',
            loans__pb2.NewInputListLoan.SerializeToString,
            loans__pb2.NewOutputListLoan.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListLoanByCreatedAt(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/ListLoanByCreatedAt',
            loans__pb2.InputListLoan.SerializeToString,
            loans__pb2.OutputListLoan.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckAvailableFundingAmount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/CheckAvailableFundingAmount',
            loans__pb2.InputCheckAvailableFundingAmount.SerializeToString,
            loans__pb2.OutputCheckAvailableFundingAmount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBorrowerInterestAverage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetBorrowerInterestAverage',
            loans__pb2.InputGetBorrowerInterestAverage.SerializeToString,
            loans__pb2.OutputGetBorrowerInterestAverage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListBorrowerLoan(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/ListBorrowerLoan',
            loans__pb2.InputListBorrowerLoan.SerializeToString,
            loans__pb2.OutputListBorrowerLoan.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListLoanByUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/ListLoanByUser',
            loans__pb2.InputList.SerializeToString,
            loans__pb2.ListLoans.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserLoan(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetUserLoan',
            loans__pb2.InputListLoan.SerializeToString,
            loans__pb2.OutputListLoan.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserLoanSortByUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetUserLoanSortByUpdate',
            loans__pb2.InputListLoanSortByUpdate.SerializeToString,
            loans__pb2.OutputListLoanSortByUpdate.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserLoanSortByUpdateExcluded(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetUserLoanSortByUpdateExcluded',
            loans__pb2.InputListLoanSortByUpdate.SerializeToString,
            loans__pb2.OutputListLoanSortByUpdate.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DetailLoan(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/DetailLoan',
            loans__pb2.InputDetailLoan.SerializeToString,
            loans__pb2.OutputDetailLoan.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateLoan(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/CreateLoan',
            loans__pb2.InputCreateLoan.SerializeToString,
            loans__pb2.OutputCreateLoan.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateLoan(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/UpdateLoan',
            loans__pb2.InputUpdateLoan.SerializeToString,
            loans__pb2.OutputUpdateLoan.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteLoan(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/DeleteLoan',
            loans__pb2.InputDeleteLoan.SerializeToString,
            loans__pb2.OutputDeleteLoan.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateLoanStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/UpdateLoanStatus',
            loans__pb2.InputList.SerializeToString,
            loans__pb2.OutputLoanStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateLatestPaymentStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/UpdateLatestPaymentStatus',
            loans__pb2.InputList.SerializeToString,
            loans__pb2.OutputLoanStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CancelFunding(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/CancelFunding',
            loans__pb2.InputCancelFunding.SerializeToString,
            loans__pb2.OutputCancelFunding.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLoanFundings(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetLoanFundings',
            loans__pb2.InputList.SerializeToString,
            loans__pb2.OutputGetLoanFundings.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListLoanFunding(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/ListLoanFunding',
            loans__pb2.InputListLoanFunding.SerializeToString,
            loans__pb2.OutputListLoanFunding.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DetailLoanFunding(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/DetailLoanFunding',
            loans__pb2.InputDetailLoanFunding.SerializeToString,
            loans__pb2.OutputDetailLoanFunding.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateLoanFunding(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/CreateLoanFunding',
            loans__pb2.InputCreateLoanFunding.SerializeToString,
            loans__pb2.OutputCreateLoanFunding.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateLoanFunding(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/UpdateLoanFunding',
            loans__pb2.InputUpdateLoanFunding.SerializeToString,
            loans__pb2.OutputUpdateLoanFunding.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteLoanFunding(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/DeleteLoanFunding',
            loans__pb2.InputDeleteLoanFunding.SerializeToString,
            loans__pb2.OutputDeleteLoanFunding.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BatchUpdateFundingAmount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/BatchUpdateFundingAmount',
            loans__pb2.InputBatchUpdateFundingAmount.SerializeToString,
            loans__pb2.OutputBatchUpdateFundingAmount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLoanFundingByLoanID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetLoanFundingByLoanID',
            loans__pb2.InputLoanFundingByLoanID.SerializeToString,
            loans__pb2.OutputLoanFundingByLoanID.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AssetTransfer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/AssetTransfer',
            loans__pb2.InputAssetTransfer.SerializeToString,
            loans__pb2.OutputAssetTransfer.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SumActiveLoanFunding(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/SumActiveLoanFunding',
            loans__pb2.InputList.SerializeToString,
            loans__pb2.OutputSumActiveLoanFunding.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListActiveLoanFundingByGrade(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/ListActiveLoanFundingByGrade',
            loans__pb2.InputList.SerializeToString,
            loans__pb2.OutputListLoanfundingByGrade.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListActiveLoanFundingByProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/ListActiveLoanFundingByProduct',
            loans__pb2.InputList.SerializeToString,
            loans__pb2.OutputListLoanFundingByProduct.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetListUserFundingSummary(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetListUserFundingSummary',
            loans__pb2.InputGetListUserFundingSummary.SerializeToString,
            loans__pb2.OutputGetListUserFundingSummary.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLenderSchedule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetLenderSchedule',
            loans__pb2.InputGetLenderSchedule.SerializeToString,
            loans__pb2.LenderSchedule.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListLenderSchedules(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/ListLenderSchedules',
            loans__pb2.InputList.SerializeToString,
            loans__pb2.OutputListLenderSchedules.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListLenderSchedulesByGrade(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/ListLenderSchedulesByGrade',
            loans__pb2.InputList.SerializeToString,
            loans__pb2.OutputListLenderSchedulesByGrade.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListLenderSchedulesByProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/ListLenderSchedulesByProduct',
            loans__pb2.InputList.SerializeToString,
            loans__pb2.OutputListLenderSchedulesByProduct.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListLenderSchedulesByFundingID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/ListLenderSchedulesByFundingID',
            loans__pb2.InputList.SerializeToString,
            loans__pb2.OutputListLenderSchedulesByFundingID.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListLenderSchedulesByScheduleVersionId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/ListLenderSchedulesByScheduleVersionId',
            loans__pb2.InputLenderListByScheduleVersion.SerializeToString,
            loans__pb2.OutputListLenderSchedulesByScheduleVersionId.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListLenderScheduleVersionsByFundingID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/ListLenderScheduleVersionsByFundingID',
            loans__pb2.InputList.SerializeToString,
            loans__pb2.OutputLenderScheduleVersions.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListLenderSpreadingByFundingID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/ListLenderSpreadingByFundingID',
            loans__pb2.InputList.SerializeToString,
            loans__pb2.OutputLenderSpreadingByFundingID.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListLenderSpreadingBySpreadingTransactionID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/ListLenderSpreadingBySpreadingTransactionID',
            loans__pb2.InputList.SerializeToString,
            loans__pb2.LenderSpreadings.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateLoanRepaymentScheduleVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/CreateLoanRepaymentScheduleVersion',
            loans__pb2.LoanRepaymentScheduleVersion.SerializeToString,
            loans__pb2.OutputCreateLoanRepaymentScheduleVersion.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFundingProgress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetFundingProgress',
            loans__pb2.ParamGetFundingProgress.SerializeToString,
            loans__pb2.OutputKoinBisnis.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def HasLoan(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/HasLoan',
            loans__pb2.ParamHasLoan.SerializeToString,
            loans__pb2.OutputKoinBisnis.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SummaryLoan(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/SummaryLoan',
            loans__pb2.ParamSummaryLoan.SerializeToString,
            loans__pb2.OutputKoinBisnis.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ActiveLoan(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/ActiveLoan',
            loans__pb2.ParamActiveLoan.SerializeToString,
            loans__pb2.OutputKoinBisnis.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ApplicationProgress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/ApplicationProgress',
            loans__pb2.ParamApplicationProgress.SerializeToString,
            loans__pb2.OutputKoinBisnis.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ApplicationProgressv2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/ApplicationProgressv2',
            loans__pb2.ParamApplicationProgress.SerializeToString,
            loans__pb2.OutputKoinBisnis.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListLoanProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/ListLoanProduct',
            loans__pb2.ParamListLoanProduct.SerializeToString,
            loans__pb2.OutputKoinBisnis.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LoanDetailProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/LoanDetailProduct',
            loans__pb2.ParamLoanDetailProduct.SerializeToString,
            loans__pb2.OutputKoinBisnis.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LoanScheduleProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/LoanScheduleProduct',
            loans__pb2.ParamLoanDetailProduct.SerializeToString,
            loans__pb2.OutputKoinBisnis.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LoanContractProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/LoanContractProduct',
            loans__pb2.ParamLoanDetailProduct.SerializeToString,
            loans__pb2.OutputKoinBisnis.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LoanFundingProgressProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/LoanFundingProgressProduct',
            loans__pb2.ParamLoanDetailProduct.SerializeToString,
            loans__pb2.OutputKoinBisnis.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LoanDetailProgressProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/LoanDetailProgressProduct',
            loans__pb2.ParamLoanDetailProduct.SerializeToString,
            loans__pb2.OutputKoinBisnis.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LoanOfferProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/LoanOfferProduct',
            loans__pb2.ParamLoanDetailProduct.SerializeToString,
            loans__pb2.OutputKoinBisnis.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubmitLoanOfferProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/SubmitLoanOfferProduct',
            loans__pb2.ParamSubmitLoanOfferProduct.SerializeToString,
            loans__pb2.OutputKoinBisnis.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetKoinBisnisLoanRepaymentDetail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetKoinBisnisLoanRepaymentDetail',
            loans__pb2.InputListLoan.SerializeToString,
            loans__pb2.OutputKoinBisnis.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListScheduleProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/ListScheduleProduct',
            loans__pb2.ParamListScheduleProduct.SerializeToString,
            loans__pb2.OutputKoinBisnis.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RequestClearance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/RequestClearance',
            loans__pb2.InputRequestClearance.SerializeToString,
            loans__pb2.OutputRequestClearance.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserLoanWithRequestClearance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetUserLoanWithRequestClearance',
            loans__pb2.InputListLoan.SerializeToString,
            loans__pb2.OutputListLoan.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetClearanceDataByLoanID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetClearanceDataByLoanID',
            loans__pb2.InputGetClearanceDataByLoanID.SerializeToString,
            loans__pb2.OutputListLoan.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReservePaymentLoan(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/ReservePaymentLoan',
            loans__pb2.ParamReservePayment.SerializeToString,
            loans__pb2.OutputReservePayment.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateScheduleRepayment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/CreateScheduleRepayment',
            loans__pb2.ParamCreateScheduleRepayment.SerializeToString,
            loans__pb2.OutputCreateScheduleRepayment.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetScheduleRepaymentProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetScheduleRepaymentProduct',
            loans__pb2.InputGetScheduleRepaymentProduct.SerializeToString,
            loans__pb2.OutputKoinBisnis.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GenerateLenderSchedules(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GenerateLenderSchedules',
            loans__pb2.InputGenerateLenderSchedules.SerializeToString,
            loans__pb2.OutputGenerateLenderSchedules.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EarlyInstallmentRepayment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/EarlyInstallmentRepayment',
            loans__pb2.InputEarlyInstallmentRepayment.SerializeToString,
            loans__pb2.OutputEarlyInstallmentRepayment.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetScheduleRepaymentByScheduleId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetScheduleRepaymentByScheduleId',
            loans__pb2.InputGetScheduleRepaymentByScheduleId.SerializeToString,
            loans__pb2.OutputKoinBisnis.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSpreadingTransaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetSpreadingTransaction',
            loans__pb2.InputGetSpreadingTransaction.SerializeToString,
            loans__pb2.SpreadingTransaction.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReadjustLoanFundingPercentage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/ReadjustLoanFundingPercentage',
            loans__pb2.InputReadjustLoanFundingPercentage.SerializeToString,
            loans__pb2.OutputReadjustLoanFundingPercentage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLoanDocuments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetLoanDocuments',
            loans__pb2.InputGetLoanDocuments.SerializeToString,
            loans__pb2.OutputLoanDocuments.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateRoboRepayment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/CreateRoboRepayment',
            loans__pb2.InputCreateRoboRepayment.SerializeToString,
            loans__pb2.OutputCreateRoboRepayment.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetListScheduleByLoanID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetListScheduleByLoanID',
            loans__pb2.InputGetListScheduleByLoanID.SerializeToString,
            loans__pb2.OutputGetListScheduleByLoanID.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLoanContract(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetLoanContract',
            loans__pb2.InputLoanContract.SerializeToString,
            loans__pb2.OutputLoanContract.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLoanContractUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetLoanContractUser',
            loans__pb2.InputLoanContractUser.SerializeToString,
            loans__pb2.OutputLoanContractUser.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateLoanRepaymentSchedule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/UpdateLoanRepaymentSchedule',
            loans__pb2.InputUpdateRepaymentSchedule.SerializeToString,
            loans__pb2.OutputUpdateRepaymentSchedule.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListSpreadingDeductionDetailsBySpreadingDetailID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/ListSpreadingDeductionDetailsBySpreadingDetailID',
            loans__pb2.InputList.SerializeToString,
            loans__pb2.SpreadingDeductionDetails.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateLoanTransitionDate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/UpdateLoanTransitionDate',
            loans__pb2.ParamUpdateLoanTransitionDate.SerializeToString,
            loans__pb2.OutputKoinBisnis.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LoanClearanceDetailProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/LoanClearanceDetailProduct',
            loans__pb2.ParamLoanClearanceDetailProduct.SerializeToString,
            loans__pb2.OutputKoinBisnis.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreatePrematureClearance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/CreatePrematureClearance',
            loans__pb2.ParamsCreatePrematureClearance.SerializeToString,
            loans__pb2.OutputCreatePrematureClearance.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPrematureClearance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetPrematureClearance',
            loans__pb2.ParamGetPreamatureClerance.SerializeToString,
            loans__pb2.OutputGetPreamatureClerance.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPrematureClearanceRequestDetail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetPrematureClearanceRequestDetail',
            loans__pb2.ParamGetPrematureClearanceRequestDetail.SerializeToString,
            loans__pb2.OutputGetPrematureClearanceRequestDetail.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOutstandingLoanAmountPrematureClearance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetOutstandingLoanAmountPrematureClearance',
            loans__pb2.ParamGetOutstandingLoan.SerializeToString,
            loans__pb2.OutputGetOutstandingLoan.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOutstandingLoanAmountNormalPayment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetOutstandingLoanAmountNormalPayment',
            loans__pb2.ParamGetOutstandingLoan.SerializeToString,
            loans__pb2.OutputGetOutstandingLoan.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ActiveLoanV2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/ActiveLoanV2',
            loans__pb2.ParamActiveLoan.SerializeToString,
            loans__pb2.OutputKoinEmployee.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LoanScheduleProductV2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/LoanScheduleProductV2',
            loans__pb2.ParamLoanDetailProduct.SerializeToString,
            loans__pb2.OutputKoinEmployee.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListScheduleProductV2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/ListScheduleProductV2',
            loans__pb2.ParamListScheduleProduct.SerializeToString,
            loans__pb2.OutputKoinEmployee.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDetailLoanByLenderScheduleVersionID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetDetailLoanByLenderScheduleVersionID',
            loans__pb2.LenderScheduleVersions.SerializeToString,
            loans__pb2.OutputDetailLoan.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLoanByProductCode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetLoanByProductCode',
            loans__pb2.GetLoanByProductCodeArgs.SerializeToString,
            loans__pb2.Loan.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateLoanDocument(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/CreateLoanDocument',
            loans__pb2.ParamLoanDocument.SerializeToString,
            loans__pb2.OutputCreateLoanDocument.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateLoanDeductionDetails(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/CreateLoanDeductionDetails',
            loans__pb2.LoanDeductionDetailItemRequests.SerializeToString,
            loans__pb2.LoanDefaultOutput.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeactivateLoanFunding(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/DeactivateLoanFunding',
            loans__pb2.ParamDeactivateLoanFunding.SerializeToString,
            loans__pb2.OutputDeactivateLoanFunding.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOnGoingLoan(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetOnGoingLoan',
            loans__pb2.InputOnGoingLoan.SerializeToString,
            loans__pb2.OutputOnGoingLoan.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateLenderCommissionFee(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/CreateLenderCommissionFee',
            loans__pb2.InputLenderCommissionFee.SerializeToString,
            loans__pb2.OutputLenderCommissionFee.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLenderCommissionFee(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetLenderCommissionFee',
            loans__pb2.InputLenderCommissionFee.SerializeToString,
            loans__pb2.OutputLenderCommissionFee.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOngoingLoanList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetOngoingLoanList',
            loans__pb2.InputOngoingLoanList.SerializeToString,
            loans__pb2.OutputOngoingLoanList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLoanReport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetLoanReport',
            loans__pb2.InputLoanReport.SerializeToString,
            loans__pb2.OutputLoanReportList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTopUpRequestByNewLoanID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetTopUpRequestByNewLoanID',
            loans__pb2.ParamGetTopUpRequestByNewLoanID.SerializeToString,
            loans__pb2.OutputGetTopUpRequestByNewLoanID.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLoans(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetLoans',
            loans__pb2.InputGetLoans.SerializeToString,
            loans__pb2.OutputGetLoans.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMdr(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetMdr',
            loans__pb2.InputGetMDR.SerializeToString,
            loans__pb2.OutputGetMDR.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateMdr(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/UpdateMdr',
            loans__pb2.InputUpdateMdr.SerializeToString,
            loans__pb2.OutputUpdateMdr.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserFundingLoanProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetUserFundingLoanProduct',
            loans__pb2.InputGetUserFundingLoanProduct.SerializeToString,
            loans__pb2.OutputGetUserFundingLoanProduct.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserFundingLoanCodeByProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetUserFundingLoanCodeByProduct',
            loans__pb2.InputGetUserFundingLoanProduct.SerializeToString,
            loans__pb2.OutputGetUserFundingLoanCodeByProduct.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListHistoryRestructure(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/ListHistoryRestructure',
            loans__pb2.InputHistoryRestructure.SerializeToString,
            loans__pb2.OutputHistoryRestructure.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTaxReportData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetTaxReportData',
            loans__pb2.InputGetTaxReportData.SerializeToString,
            loans__pb2.OutputGetTaxReportData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateLoanRating(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/CreateLoanRating',
            loans__pb2.InputCreateLoanRating.SerializeToString,
            loans__pb2.OutputCreateLoanRating.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListLoanRating(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/ListLoanRating',
            loans__pb2.InputListLoanRating.SerializeToString,
            loans__pb2.OutputListLoanRating.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateLoanOrigin(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/UpdateLoanOrigin',
            loans__pb2.InputUpdateLoanOrigin.SerializeToString,
            loans__pb2.OutputUpdateLoanOrigin.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTotalDisbursement(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetTotalDisbursement',
            loans__pb2.InputGetTotalDisbursement.SerializeToString,
            loans__pb2.OutputGetTotalDisbursement.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetListLoan(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetListLoan',
            common__pb2.PViewArguments.SerializeToString,
            common__pb2.PViewResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUCL(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetUCL',
            loans__pb2.InputUserID.SerializeToString,
            loans__pb2.OutputStatusMessageAnyData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpsertUCL(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/UpsertUCL',
            loans__pb2.InputUserIDAnyData.SerializeToString,
            loans__pb2.OutputStatusMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UseLimitUCL(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/UseLimitUCL',
            loans__pb2.InputUseLimitUCL.SerializeToString,
            loans__pb2.OutputStatusMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReleaseLimitUCL(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/ReleaseLimitUCL',
            loans__pb2.InputReleaseLimitUCL.SerializeToString,
            loans__pb2.OutputStatusMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDueLoansByUserID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetDueLoansByUserID',
            loans__pb2.InputUserID.SerializeToString,
            loans__pb2.OutputStatusMessageAnyData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSumLoanPaid(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetSumLoanPaid',
            loans__pb2.InputListLoan.SerializeToString,
            loans__pb2.OutputStatusMessageAnyData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreatePaymentPriorityAndRepaymentTransaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/CreatePaymentPriorityAndRepaymentTransaction',
            loans__pb2.InputEarlyInstallmentRepayment.SerializeToString,
            loans__pb2.OutputStatusMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOverDueLoans(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetOverDueLoans',
            loans__pb2.InputListLoan.SerializeToString,
            loans__pb2.OutputListLoan.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLoanStatusTracker(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetLoanStatusTracker',
            loans__pb2.InputGetLoanStatusTracker.SerializeToString,
            loans__pb2.OutputGetLoanStatusTracker.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateLoanStatusTracker(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/UpdateLoanStatusTracker',
            loans__pb2.InputUpdateLoanStatusTracker.SerializeToString,
            loans__pb2.OutputStatusMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetVendorLoans(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetVendorLoans',
            loans__pb2.InputListLoan.SerializeToString,
            loans__pb2.OutputListLoan.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLoanDisbursementDetails(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetLoanDisbursementDetails',
            loans__pb2.GetLoanDisbursementDetailsArgs.SerializeToString,
            loans__pb2.OutputStatusMessageAnyData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SaveLoanDisbursementDetails(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/SaveLoanDisbursementDetails',
            loans__pb2.SaveLoanDisbursementDetailsArgs.SerializeToString,
            loans__pb2.OutputStatusMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRepaymentScheduleByProductAndUserIDs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetRepaymentScheduleByProductAndUserIDs',
            loans__pb2.GetRepaymentScheduleByProductAndUserIDsArguments.SerializeToString,
            loans__pb2.GetRepaymentScheduleByProductAndUserIDsResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListUserFunding(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/ListUserFunding',
            loans__pb2.InputListUserFunding.SerializeToString,
            loans__pb2.OutputListUserFunding.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateTopUpLoan(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/CreateTopUpLoan',
            loans__pb2.ParamCreateTopUpLoan.SerializeToString,
            loans__pb2.OutputCreateTopUpLoan.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTopUpRequestByID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetTopUpRequestByID',
            loans__pb2.ParamGetTopUpRequestByID.SerializeToString,
            loans__pb2.OutputGetTopUpRequestByID.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTopUpRequestByLoanID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetTopUpRequestByLoanID',
            loans__pb2.ParamGetTopUpRequestByLoanID.SerializeToString,
            loans__pb2.OutputGetTopUpRequestByLoanID.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LoanAvailableForTopUpProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/LoanAvailableForTopUpProduct',
            loans__pb2.ParamLoanAvailableForTopUpProduct.SerializeToString,
            loans__pb2.OutputKoinBisnis.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubmitTopUpLoanProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/SubmitTopUpLoanProduct',
            loans__pb2.ParamSubmitTopUpLoanProduct.SerializeToString,
            loans__pb2.OutputKoinBisnis.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTopUpDataByLoanID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetTopUpDataByLoanID',
            loans__pb2.InputGetTopUpDataByLoanID.SerializeToString,
            loans__pb2.OutputListLoan.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ProcessTopUpRequest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/ProcessTopUpRequest',
            loans__pb2.ProcessTopUpRequestArguments.SerializeToString,
            loans__pb2.ProcessTopUpRequestResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateLoanDisbursementDetails(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/UpdateLoanDisbursementDetails',
            loans__pb2.SaveLoanDisbursementDetailsArgs.SerializeToString,
            loans__pb2.OutputStatusMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateLoanKGResignStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/UpdateLoanKGResignStatus',
            loans__pb2.InputUpdateLoanKgResignStatus.SerializeToString,
            loans__pb2.OutputStatusMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetGenerateLenderAgreementDataByFundingID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetGenerateLenderAgreementDataByFundingID',
            loans__pb2.InputGetGenerateLenderAgreementDataByFundingID.SerializeToString,
            loans__pb2.OutputGetGenerateLenderAgreementDataByFundingID.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFundingDetailsPostPurchaseSuccessful(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetFundingDetailsPostPurchaseSuccessful',
            loans__pb2.InputGetFundingDetailsPostSuccessfulPurchase.SerializeToString,
            loans__pb2.OutputGetFundingDetailsPostSuccessfulPurchase.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetScheduleEarning(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetScheduleEarning',
            loans__pb2.InputGetScheduleEarning.SerializeToString,
            loans__pb2.OutputGetScheduleEarning.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetListOfFundedLoans(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetListOfFundedLoans',
            loans__pb2.InputGetListOfFundedLoans.SerializeToString,
            loans__pb2.OutputGetListOfFundedLoans.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetExpectedReturnsSummary(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetExpectedReturnsSummary',
            loans__pb2.BorrowerLoanDetail.SerializeToString,
            loans__pb2.ExpectedReturnsSummary.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNonRestructuredReceivedReturnsSummary(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetNonRestructuredReceivedReturnsSummary',
            loans__pb2.BorrowerLoanDetail.SerializeToString,
            loans__pb2.NonRestructuredReceivedReturnsSummary.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRestructuredReceivedReturnsSummaries(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetRestructuredReceivedReturnsSummaries',
            loans__pb2.BorrowerLoanDetail.SerializeToString,
            loans__pb2.RestructuredReceivedReturnsSummaries.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetReceivedReturnsForProvisionFundSummary(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetReceivedReturnsForProvisionFundSummary',
            loans__pb2.BorrowerLoanDetail.SerializeToString,
            loans__pb2.ReceivedReturnsForProvisionFundSummary.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRepaymentsTabDetails(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetRepaymentsTabDetails',
            loans__pb2.InputGetRepaymentsDetails.SerializeToString,
            loans__pb2.OutputGetRepaymentsTabDetails.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRepaymentsTabDetailsSummary(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetRepaymentsTabDetailsSummary',
            loans__pb2.InputGetRepaymentsDetails.SerializeToString,
            loans__pb2.OutputGetRepaymentsTabDetailsSummary.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpsertRepaymentTransaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/UpsertRepaymentTransaction',
            loans__pb2.InputUpsertRepaymentTransaction.SerializeToString,
            loans__pb2.OutputUpsertRepaymentTransaction.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ConfirmAssetTransfer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/ConfirmAssetTransfer',
            loans__pb2.InputConfirmAssetTransfer.SerializeToString,
            loans__pb2.OutputConfirmAssetTransfer.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckSpreadingTransaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/CheckSpreadingTransaction',
            loans__pb2.InputCheckSpreadingTransaction.SerializeToString,
            loans__pb2.OutputCheckSpreadingTransaction.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdatePrefundRelease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/UpdatePrefundRelease',
            loans__pb2.InputPrefundRelease.SerializeToString,
            loans__pb2.OutputPrefundRelease.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLenderTotalReceived(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetLenderTotalReceived',
            loans__pb2.LenderTotalReceivedFor.SerializeToString,
            loans__pb2.LenderTotalReceivedDetails.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpsertLoanFees(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/UpsertLoanFees',
            loans__pb2.InputLoanFees.SerializeToString,
            loans__pb2.OutputLoanFees.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLoanFeePayment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetLoanFeePayment',
            loans__pb2.GetLoanFeePaymentRequest.SerializeToString,
            loans__pb2.GetLoanFeePaymentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLendersUserIDs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Loans/GetLendersUserIDs',
            loans__pb2.InputLoanID.SerializeToString,
            loans__pb2.OutputLendersUserIDs.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
