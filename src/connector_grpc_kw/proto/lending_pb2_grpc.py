# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import lending_pb2 as lending__pb2


class LendingStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetLendingListSummaryProduct = channel.unary_unary(
                '/packets.Lending/GetLendingListSummaryProduct',
                request_serializer=lending__pb2.SummaryLendingProductsArguments.SerializeToString,
                response_deserializer=lending__pb2.OutputLendingProductSummaries.FromString,
                )
        self.GetLendingListScheduleForRepayment = channel.unary_unary(
                '/packets.Lending/GetLendingListScheduleForRepayment',
                request_serializer=lending__pb2.LendingScheduleForRepaymentArguments.SerializeToString,
                response_deserializer=lending__pb2.LendingOutputScheduleForRepayment.FromString,
                )
        self.TotalGainSummary = channel.unary_unary(
                '/packets.Lending/TotalGainSummary',
                request_serializer=lending__pb2.TotalGainSummaryInput.SerializeToString,
                response_deserializer=lending__pb2.TotalGainSummaryOutput.FromString,
                )
        self.GetLendingUserActiveAverageReturnPerSource = channel.unary_unary(
                '/packets.Lending/GetLendingUserActiveAverageReturnPerSource',
                request_serializer=lending__pb2.UserLendingSummaryActiveAverageReturnArguments.SerializeToString,
                response_deserializer=lending__pb2.OutputLendingUserSummaryActiveAverageReturn.FromString,
                )


class LendingServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetLendingListSummaryProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLendingListScheduleForRepayment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TotalGainSummary(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLendingUserActiveAverageReturnPerSource(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_LendingServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetLendingListSummaryProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLendingListSummaryProduct,
                    request_deserializer=lending__pb2.SummaryLendingProductsArguments.FromString,
                    response_serializer=lending__pb2.OutputLendingProductSummaries.SerializeToString,
            ),
            'GetLendingListScheduleForRepayment': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLendingListScheduleForRepayment,
                    request_deserializer=lending__pb2.LendingScheduleForRepaymentArguments.FromString,
                    response_serializer=lending__pb2.LendingOutputScheduleForRepayment.SerializeToString,
            ),
            'TotalGainSummary': grpc.unary_unary_rpc_method_handler(
                    servicer.TotalGainSummary,
                    request_deserializer=lending__pb2.TotalGainSummaryInput.FromString,
                    response_serializer=lending__pb2.TotalGainSummaryOutput.SerializeToString,
            ),
            'GetLendingUserActiveAverageReturnPerSource': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLendingUserActiveAverageReturnPerSource,
                    request_deserializer=lending__pb2.UserLendingSummaryActiveAverageReturnArguments.FromString,
                    response_serializer=lending__pb2.OutputLendingUserSummaryActiveAverageReturn.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'packets.Lending', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Lending(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetLendingListSummaryProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Lending/GetLendingListSummaryProduct',
            lending__pb2.SummaryLendingProductsArguments.SerializeToString,
            lending__pb2.OutputLendingProductSummaries.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLendingListScheduleForRepayment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Lending/GetLendingListScheduleForRepayment',
            lending__pb2.LendingScheduleForRepaymentArguments.SerializeToString,
            lending__pb2.LendingOutputScheduleForRepayment.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TotalGainSummary(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Lending/TotalGainSummary',
            lending__pb2.TotalGainSummaryInput.SerializeToString,
            lending__pb2.TotalGainSummaryOutput.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLendingUserActiveAverageReturnPerSource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Lending/GetLendingUserActiveAverageReturnPerSource',
            lending__pb2.UserLendingSummaryActiveAverageReturnArguments.SerializeToString,
            lending__pb2.OutputLendingUserSummaryActiveAverageReturn.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
