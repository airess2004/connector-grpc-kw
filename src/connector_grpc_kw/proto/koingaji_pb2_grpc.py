# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import koingaji_pb2 as koingaji__pb2


class KoinGajiStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.VendorInformation = channel.unary_unary(
                '/packets.KoinGaji/VendorInformation',
                request_serializer=koingaji__pb2.InputKoinGajiVendorInformation.SerializeToString,
                response_deserializer=koingaji__pb2.KoinGajiVendorInformation.FromString,
                )
        self.GetGeneralSetting = channel.unary_unary(
                '/packets.KoinGaji/GetGeneralSetting',
                request_serializer=koingaji__pb2.InputGetGeneralSetting.SerializeToString,
                response_deserializer=koingaji__pb2.KoinGajiVendorInformation.FromString,
                )
        self.GetEmployeeByKwUserID = channel.unary_unary(
                '/packets.KoinGaji/GetEmployeeByKwUserID',
                request_serializer=koingaji__pb2.InputGetEmployeByKwUserID.SerializeToString,
                response_deserializer=koingaji__pb2.KoinGajiVendorInformation.FromString,
                )
        self.GetLimit = channel.unary_unary(
                '/packets.KoinGaji/GetLimit',
                request_serializer=koingaji__pb2.InputGetLimit.SerializeToString,
                response_deserializer=koingaji__pb2.OutputGetLimit.FromString,
                )
        self.GetLoanInformation = channel.unary_unary(
                '/packets.KoinGaji/GetLoanInformation',
                request_serializer=koingaji__pb2.InputKoinGajiDetailLoan.SerializeToString,
                response_deserializer=koingaji__pb2.OutputKoinGaji.FromString,
                )
        self.GetKGUserBankValidation = channel.unary_unary(
                '/packets.KoinGaji/GetKGUserBankValidation',
                request_serializer=koingaji__pb2.InputGetKGUserBankValidation.SerializeToString,
                response_deserializer=koingaji__pb2.OutputKoinGaji.FromString,
                )


class KoinGajiServicer(object):
    """Missing associated documentation comment in .proto file."""

    def VendorInformation(self, request, context):
        """rpc DetailLoan(InputKoinGajiDetailLoan) returns(OutputKoinGajiDetailLoan) {}
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetGeneralSetting(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetEmployeeByKwUserID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLimit(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLoanInformation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetKGUserBankValidation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_KoinGajiServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'VendorInformation': grpc.unary_unary_rpc_method_handler(
                    servicer.VendorInformation,
                    request_deserializer=koingaji__pb2.InputKoinGajiVendorInformation.FromString,
                    response_serializer=koingaji__pb2.KoinGajiVendorInformation.SerializeToString,
            ),
            'GetGeneralSetting': grpc.unary_unary_rpc_method_handler(
                    servicer.GetGeneralSetting,
                    request_deserializer=koingaji__pb2.InputGetGeneralSetting.FromString,
                    response_serializer=koingaji__pb2.KoinGajiVendorInformation.SerializeToString,
            ),
            'GetEmployeeByKwUserID': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEmployeeByKwUserID,
                    request_deserializer=koingaji__pb2.InputGetEmployeByKwUserID.FromString,
                    response_serializer=koingaji__pb2.KoinGajiVendorInformation.SerializeToString,
            ),
            'GetLimit': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLimit,
                    request_deserializer=koingaji__pb2.InputGetLimit.FromString,
                    response_serializer=koingaji__pb2.OutputGetLimit.SerializeToString,
            ),
            'GetLoanInformation': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLoanInformation,
                    request_deserializer=koingaji__pb2.InputKoinGajiDetailLoan.FromString,
                    response_serializer=koingaji__pb2.OutputKoinGaji.SerializeToString,
            ),
            'GetKGUserBankValidation': grpc.unary_unary_rpc_method_handler(
                    servicer.GetKGUserBankValidation,
                    request_deserializer=koingaji__pb2.InputGetKGUserBankValidation.FromString,
                    response_serializer=koingaji__pb2.OutputKoinGaji.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'packets.KoinGaji', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class KoinGaji(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def VendorInformation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.KoinGaji/VendorInformation',
            koingaji__pb2.InputKoinGajiVendorInformation.SerializeToString,
            koingaji__pb2.KoinGajiVendorInformation.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetGeneralSetting(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.KoinGaji/GetGeneralSetting',
            koingaji__pb2.InputGetGeneralSetting.SerializeToString,
            koingaji__pb2.KoinGajiVendorInformation.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetEmployeeByKwUserID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.KoinGaji/GetEmployeeByKwUserID',
            koingaji__pb2.InputGetEmployeByKwUserID.SerializeToString,
            koingaji__pb2.KoinGajiVendorInformation.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLimit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.KoinGaji/GetLimit',
            koingaji__pb2.InputGetLimit.SerializeToString,
            koingaji__pb2.OutputGetLimit.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLoanInformation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.KoinGaji/GetLoanInformation',
            koingaji__pb2.InputKoinGajiDetailLoan.SerializeToString,
            koingaji__pb2.OutputKoinGaji.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetKGUserBankValidation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.KoinGaji/GetKGUserBankValidation',
            koingaji__pb2.InputGetKGUserBankValidation.SerializeToString,
            koingaji__pb2.OutputKoinGaji.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
