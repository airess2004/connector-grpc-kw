# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import koinemployee_pb2 as koinemployee__pb2


class KoinEmployeesStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.DetailLoan = channel.unary_unary(
                '/packets.KoinEmployees/DetailLoan',
                request_serializer=koinemployee__pb2.InputKoinEmployeeDetailLoan.SerializeToString,
                response_deserializer=koinemployee__pb2.OutputKoinEmployeeDetailLoan.FromString,
                )
        self.VendorInformation = channel.unary_unary(
                '/packets.KoinEmployees/VendorInformation',
                request_serializer=koinemployee__pb2.InputKoinEmployeeVendorInformation.SerializeToString,
                response_deserializer=koinemployee__pb2.KoinEmployeeVendorInformation.FromString,
                )
        self.GetLoanInformation = channel.unary_unary(
                '/packets.KoinEmployees/GetLoanInformation',
                request_serializer=koinemployee__pb2.InputKoinEmployeeDetailLoan.SerializeToString,
                response_deserializer=koinemployee__pb2.OutputLoanInformationKoinEmployees.FromString,
                )


class KoinEmployeesServicer(object):
    """Missing associated documentation comment in .proto file."""

    def DetailLoan(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VendorInformation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLoanInformation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_KoinEmployeesServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'DetailLoan': grpc.unary_unary_rpc_method_handler(
                    servicer.DetailLoan,
                    request_deserializer=koinemployee__pb2.InputKoinEmployeeDetailLoan.FromString,
                    response_serializer=koinemployee__pb2.OutputKoinEmployeeDetailLoan.SerializeToString,
            ),
            'VendorInformation': grpc.unary_unary_rpc_method_handler(
                    servicer.VendorInformation,
                    request_deserializer=koinemployee__pb2.InputKoinEmployeeVendorInformation.FromString,
                    response_serializer=koinemployee__pb2.KoinEmployeeVendorInformation.SerializeToString,
            ),
            'GetLoanInformation': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLoanInformation,
                    request_deserializer=koinemployee__pb2.InputKoinEmployeeDetailLoan.FromString,
                    response_serializer=koinemployee__pb2.OutputLoanInformationKoinEmployees.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'packets.KoinEmployees', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class KoinEmployees(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def DetailLoan(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.KoinEmployees/DetailLoan',
            koinemployee__pb2.InputKoinEmployeeDetailLoan.SerializeToString,
            koinemployee__pb2.OutputKoinEmployeeDetailLoan.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VendorInformation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.KoinEmployees/VendorInformation',
            koinemployee__pb2.InputKoinEmployeeVendorInformation.SerializeToString,
            koinemployee__pb2.KoinEmployeeVendorInformation.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLoanInformation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.KoinEmployees/GetLoanInformation',
            koinemployee__pb2.InputKoinEmployeeDetailLoan.SerializeToString,
            koinemployee__pb2.OutputLoanInformationKoinEmployees.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
