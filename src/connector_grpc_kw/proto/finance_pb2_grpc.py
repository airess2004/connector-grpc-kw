# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import finance_pb2 as finance__pb2


class FinanceThirdpartyStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SendIluma = channel.unary_unary(
                '/packets.FinanceThirdparty/SendIluma',
                request_serializer=finance__pb2.IlumaRequest.SerializeToString,
                response_deserializer=finance__pb2.FinanceResponse.FromString,
                )
        self.SendInstamoney = channel.unary_unary(
                '/packets.FinanceThirdparty/SendInstamoney',
                request_serializer=finance__pb2.InstaMoneyRequest.SerializeToString,
                response_deserializer=finance__pb2.FinanceResponse.FromString,
                )
        self.CallbackInstamoney = channel.unary_unary(
                '/packets.FinanceThirdparty/CallbackInstamoney',
                request_serializer=finance__pb2.CallbackRequest.SerializeToString,
                response_deserializer=finance__pb2.FinanceResponse.FromString,
                )
        self.BCATransferFund = channel.unary_unary(
                '/packets.FinanceThirdparty/BCATransferFund',
                request_serializer=finance__pb2.BCAFundTransferRequest.SerializeToString,
                response_deserializer=finance__pb2.BCAFundTransferResponse.FromString,
                )
        self.IlumaValidateBankAccount = channel.unary_unary(
                '/packets.FinanceThirdparty/IlumaValidateBankAccount',
                request_serializer=finance__pb2.BankValidatorRequest.SerializeToString,
                response_deserializer=finance__pb2.BankValidatorResult.FromString,
                )
        self.OYValidateBankAccount = channel.unary_unary(
                '/packets.FinanceThirdparty/OYValidateBankAccount',
                request_serializer=finance__pb2.BankValidatorRequest.SerializeToString,
                response_deserializer=finance__pb2.BankValidatorResult.FromString,
                )
        self.OYValidateBankAccountKoinNeo = channel.unary_unary(
                '/packets.FinanceThirdparty/OYValidateBankAccountKoinNeo',
                request_serializer=finance__pb2.BankValidatorRequest.SerializeToString,
                response_deserializer=finance__pb2.NeoBankValidatorResult.FromString,
                )
        self.GetInquiryDomesticAccountBCA = channel.unary_unary(
                '/packets.FinanceThirdparty/GetInquiryDomesticAccountBCA',
                request_serializer=finance__pb2.GetInquiryDomesticAccountBCAArguments.SerializeToString,
                response_deserializer=finance__pb2.GetInquiryDomesticAccountBCAResponses.FromString,
                )
        self.GetAccountStatementBCA = channel.unary_unary(
                '/packets.FinanceThirdparty/GetAccountStatementBCA',
                request_serializer=finance__pb2.GetAccountStatementBCAArguments.SerializeToString,
                response_deserializer=finance__pb2.GetAccountStatementBCAResponse.FromString,
                )
        self.InstamoneyFundTransfer = channel.unary_unary(
                '/packets.FinanceThirdparty/InstamoneyFundTransfer',
                request_serializer=finance__pb2.InstamoneyTransferFundRequest.SerializeToString,
                response_deserializer=finance__pb2.CashOutStatusResponse.FromString,
                )
        self.BCAFundTransfer = channel.unary_unary(
                '/packets.FinanceThirdparty/BCAFundTransfer',
                request_serializer=finance__pb2.FundTransferRequest.SerializeToString,
                response_deserializer=finance__pb2.CashOutStatusResponse.FromString,
                )
        self.OYFundTransfer = channel.unary_unary(
                '/packets.FinanceThirdparty/OYFundTransfer',
                request_serializer=finance__pb2.FundTransferRequest.SerializeToString,
                response_deserializer=finance__pb2.CashOutStatusResponse.FromString,
                )
        self.OYTransferSplittedFund = channel.unary_unary(
                '/packets.FinanceThirdparty/OYTransferSplittedFund',
                request_serializer=finance__pb2.FundTransferRequest.SerializeToString,
                response_deserializer=finance__pb2.CashOutStatusResponse.FromString,
                )
        self.CreateInterBankFundTransfer = channel.unary_unary(
                '/packets.FinanceThirdparty/CreateInterBankFundTransfer',
                request_serializer=finance__pb2.CreateInterBankFundTransferArguments.SerializeToString,
                response_deserializer=finance__pb2.CashOutStatusResponse.FromString,
                )
        self.CallbackCashOutStatus = channel.unary_unary(
                '/packets.FinanceThirdparty/CallbackCashOutStatus',
                request_serializer=finance__pb2.CallbackCashOutStatusRequest.SerializeToString,
                response_deserializer=finance__pb2.CashOutStatusResponse.FromString,
                )
        self.OyCallbackCashOutStatus = channel.unary_unary(
                '/packets.FinanceThirdparty/OyCallbackCashOutStatus',
                request_serializer=finance__pb2.CallbackCashOutStatusRequest.SerializeToString,
                response_deserializer=finance__pb2.CashOutStatusResponse.FromString,
                )
        self.GetAllFundTransferExternalIdAndApiStatus = channel.unary_unary(
                '/packets.FinanceThirdparty/GetAllFundTransferExternalIdAndApiStatus',
                request_serializer=finance__pb2.GetAllFundTransferExternalIdAndApiStatusRequest.SerializeToString,
                response_deserializer=finance__pb2.GetAllFundTransferExternalIdAndApiStatusResponse.FromString,
                )
        self.CallbackFundTransferStatusForKafkaPublish = channel.unary_unary(
                '/packets.FinanceThirdparty/CallbackFundTransferStatusForKafkaPublish',
                request_serializer=finance__pb2.CallbackCashOutStatusRequest.SerializeToString,
                response_deserializer=finance__pb2.CallbackFundTransferStatusForKafkaPublishResponse.FromString,
                )
        self.GetBalanceThirdparty = channel.unary_unary(
                '/packets.FinanceThirdparty/GetBalanceThirdparty',
                request_serializer=finance__pb2.InputGetBalanceThirdparty.SerializeToString,
                response_deserializer=finance__pb2.OutputGetBalanceThirdparty.FromString,
                )
        self.GetInquiryDomesticAccountBCASLA = channel.unary_unary(
                '/packets.FinanceThirdparty/GetInquiryDomesticAccountBCASLA',
                request_serializer=finance__pb2.GetInquiryDomesticAccountBCAArguments.SerializeToString,
                response_deserializer=finance__pb2.GetInquiryDomesticAccountBCAResponses.FromString,
                )
        self.GetAccountStatementBCASLA = channel.unary_unary(
                '/packets.FinanceThirdparty/GetAccountStatementBCASLA',
                request_serializer=finance__pb2.GetAccountStatementBCAArguments.SerializeToString,
                response_deserializer=finance__pb2.GetAccountStatementBCAResponse.FromString,
                )
        self.BCASLAFundTransfer = channel.unary_unary(
                '/packets.FinanceThirdparty/BCASLAFundTransfer',
                request_serializer=finance__pb2.FundTransferRequest.SerializeToString,
                response_deserializer=finance__pb2.CashOutStatusResponse.FromString,
                )
        self.CreateInterBankFundTransferSLA = channel.unary_unary(
                '/packets.FinanceThirdparty/CreateInterBankFundTransferSLA',
                request_serializer=finance__pb2.CreateInterBankFundTransferArguments.SerializeToString,
                response_deserializer=finance__pb2.CashOutStatusResponse.FromString,
                )
        self.CreateEWalletPayment = channel.unary_unary(
                '/packets.FinanceThirdparty/CreateEWalletPayment',
                request_serializer=finance__pb2.InputCreateEWalletPayment.SerializeToString,
                response_deserializer=finance__pb2.OutputCreateEWalletPayment.FromString,
                )
        self.GetListEwallet = channel.unary_unary(
                '/packets.FinanceThirdparty/GetListEwallet',
                request_serializer=finance__pb2.InputFilterEwallet.SerializeToString,
                response_deserializer=finance__pb2.ListEwallets.FromString,
                )
        self.GetCashInOutStatus = channel.unary_unary(
                '/packets.FinanceThirdparty/GetCashInOutStatus',
                request_serializer=finance__pb2.GetCashInOutStatusRequest.SerializeToString,
                response_deserializer=finance__pb2.GetCashInOutStatusResponse.FromString,
                )


class FinanceThirdpartyServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SendIluma(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendInstamoney(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CallbackInstamoney(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BCATransferFund(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def IlumaValidateBankAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OYValidateBankAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OYValidateBankAccountKoinNeo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetInquiryDomesticAccountBCA(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAccountStatementBCA(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InstamoneyFundTransfer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BCAFundTransfer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OYFundTransfer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OYTransferSplittedFund(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateInterBankFundTransfer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CallbackCashOutStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OyCallbackCashOutStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllFundTransferExternalIdAndApiStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CallbackFundTransferStatusForKafkaPublish(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBalanceThirdparty(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetInquiryDomesticAccountBCASLA(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAccountStatementBCASLA(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BCASLAFundTransfer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateInterBankFundTransferSLA(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateEWalletPayment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetListEwallet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCashInOutStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FinanceThirdpartyServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SendIluma': grpc.unary_unary_rpc_method_handler(
                    servicer.SendIluma,
                    request_deserializer=finance__pb2.IlumaRequest.FromString,
                    response_serializer=finance__pb2.FinanceResponse.SerializeToString,
            ),
            'SendInstamoney': grpc.unary_unary_rpc_method_handler(
                    servicer.SendInstamoney,
                    request_deserializer=finance__pb2.InstaMoneyRequest.FromString,
                    response_serializer=finance__pb2.FinanceResponse.SerializeToString,
            ),
            'CallbackInstamoney': grpc.unary_unary_rpc_method_handler(
                    servicer.CallbackInstamoney,
                    request_deserializer=finance__pb2.CallbackRequest.FromString,
                    response_serializer=finance__pb2.FinanceResponse.SerializeToString,
            ),
            'BCATransferFund': grpc.unary_unary_rpc_method_handler(
                    servicer.BCATransferFund,
                    request_deserializer=finance__pb2.BCAFundTransferRequest.FromString,
                    response_serializer=finance__pb2.BCAFundTransferResponse.SerializeToString,
            ),
            'IlumaValidateBankAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.IlumaValidateBankAccount,
                    request_deserializer=finance__pb2.BankValidatorRequest.FromString,
                    response_serializer=finance__pb2.BankValidatorResult.SerializeToString,
            ),
            'OYValidateBankAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.OYValidateBankAccount,
                    request_deserializer=finance__pb2.BankValidatorRequest.FromString,
                    response_serializer=finance__pb2.BankValidatorResult.SerializeToString,
            ),
            'OYValidateBankAccountKoinNeo': grpc.unary_unary_rpc_method_handler(
                    servicer.OYValidateBankAccountKoinNeo,
                    request_deserializer=finance__pb2.BankValidatorRequest.FromString,
                    response_serializer=finance__pb2.NeoBankValidatorResult.SerializeToString,
            ),
            'GetInquiryDomesticAccountBCA': grpc.unary_unary_rpc_method_handler(
                    servicer.GetInquiryDomesticAccountBCA,
                    request_deserializer=finance__pb2.GetInquiryDomesticAccountBCAArguments.FromString,
                    response_serializer=finance__pb2.GetInquiryDomesticAccountBCAResponses.SerializeToString,
            ),
            'GetAccountStatementBCA': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAccountStatementBCA,
                    request_deserializer=finance__pb2.GetAccountStatementBCAArguments.FromString,
                    response_serializer=finance__pb2.GetAccountStatementBCAResponse.SerializeToString,
            ),
            'InstamoneyFundTransfer': grpc.unary_unary_rpc_method_handler(
                    servicer.InstamoneyFundTransfer,
                    request_deserializer=finance__pb2.InstamoneyTransferFundRequest.FromString,
                    response_serializer=finance__pb2.CashOutStatusResponse.SerializeToString,
            ),
            'BCAFundTransfer': grpc.unary_unary_rpc_method_handler(
                    servicer.BCAFundTransfer,
                    request_deserializer=finance__pb2.FundTransferRequest.FromString,
                    response_serializer=finance__pb2.CashOutStatusResponse.SerializeToString,
            ),
            'OYFundTransfer': grpc.unary_unary_rpc_method_handler(
                    servicer.OYFundTransfer,
                    request_deserializer=finance__pb2.FundTransferRequest.FromString,
                    response_serializer=finance__pb2.CashOutStatusResponse.SerializeToString,
            ),
            'OYTransferSplittedFund': grpc.unary_unary_rpc_method_handler(
                    servicer.OYTransferSplittedFund,
                    request_deserializer=finance__pb2.FundTransferRequest.FromString,
                    response_serializer=finance__pb2.CashOutStatusResponse.SerializeToString,
            ),
            'CreateInterBankFundTransfer': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateInterBankFundTransfer,
                    request_deserializer=finance__pb2.CreateInterBankFundTransferArguments.FromString,
                    response_serializer=finance__pb2.CashOutStatusResponse.SerializeToString,
            ),
            'CallbackCashOutStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.CallbackCashOutStatus,
                    request_deserializer=finance__pb2.CallbackCashOutStatusRequest.FromString,
                    response_serializer=finance__pb2.CashOutStatusResponse.SerializeToString,
            ),
            'OyCallbackCashOutStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.OyCallbackCashOutStatus,
                    request_deserializer=finance__pb2.CallbackCashOutStatusRequest.FromString,
                    response_serializer=finance__pb2.CashOutStatusResponse.SerializeToString,
            ),
            'GetAllFundTransferExternalIdAndApiStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllFundTransferExternalIdAndApiStatus,
                    request_deserializer=finance__pb2.GetAllFundTransferExternalIdAndApiStatusRequest.FromString,
                    response_serializer=finance__pb2.GetAllFundTransferExternalIdAndApiStatusResponse.SerializeToString,
            ),
            'CallbackFundTransferStatusForKafkaPublish': grpc.unary_unary_rpc_method_handler(
                    servicer.CallbackFundTransferStatusForKafkaPublish,
                    request_deserializer=finance__pb2.CallbackCashOutStatusRequest.FromString,
                    response_serializer=finance__pb2.CallbackFundTransferStatusForKafkaPublishResponse.SerializeToString,
            ),
            'GetBalanceThirdparty': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBalanceThirdparty,
                    request_deserializer=finance__pb2.InputGetBalanceThirdparty.FromString,
                    response_serializer=finance__pb2.OutputGetBalanceThirdparty.SerializeToString,
            ),
            'GetInquiryDomesticAccountBCASLA': grpc.unary_unary_rpc_method_handler(
                    servicer.GetInquiryDomesticAccountBCASLA,
                    request_deserializer=finance__pb2.GetInquiryDomesticAccountBCAArguments.FromString,
                    response_serializer=finance__pb2.GetInquiryDomesticAccountBCAResponses.SerializeToString,
            ),
            'GetAccountStatementBCASLA': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAccountStatementBCASLA,
                    request_deserializer=finance__pb2.GetAccountStatementBCAArguments.FromString,
                    response_serializer=finance__pb2.GetAccountStatementBCAResponse.SerializeToString,
            ),
            'BCASLAFundTransfer': grpc.unary_unary_rpc_method_handler(
                    servicer.BCASLAFundTransfer,
                    request_deserializer=finance__pb2.FundTransferRequest.FromString,
                    response_serializer=finance__pb2.CashOutStatusResponse.SerializeToString,
            ),
            'CreateInterBankFundTransferSLA': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateInterBankFundTransferSLA,
                    request_deserializer=finance__pb2.CreateInterBankFundTransferArguments.FromString,
                    response_serializer=finance__pb2.CashOutStatusResponse.SerializeToString,
            ),
            'CreateEWalletPayment': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateEWalletPayment,
                    request_deserializer=finance__pb2.InputCreateEWalletPayment.FromString,
                    response_serializer=finance__pb2.OutputCreateEWalletPayment.SerializeToString,
            ),
            'GetListEwallet': grpc.unary_unary_rpc_method_handler(
                    servicer.GetListEwallet,
                    request_deserializer=finance__pb2.InputFilterEwallet.FromString,
                    response_serializer=finance__pb2.ListEwallets.SerializeToString,
            ),
            'GetCashInOutStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCashInOutStatus,
                    request_deserializer=finance__pb2.GetCashInOutStatusRequest.FromString,
                    response_serializer=finance__pb2.GetCashInOutStatusResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'packets.FinanceThirdparty', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class FinanceThirdparty(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SendIluma(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.FinanceThirdparty/SendIluma',
            finance__pb2.IlumaRequest.SerializeToString,
            finance__pb2.FinanceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendInstamoney(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.FinanceThirdparty/SendInstamoney',
            finance__pb2.InstaMoneyRequest.SerializeToString,
            finance__pb2.FinanceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CallbackInstamoney(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.FinanceThirdparty/CallbackInstamoney',
            finance__pb2.CallbackRequest.SerializeToString,
            finance__pb2.FinanceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BCATransferFund(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.FinanceThirdparty/BCATransferFund',
            finance__pb2.BCAFundTransferRequest.SerializeToString,
            finance__pb2.BCAFundTransferResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def IlumaValidateBankAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.FinanceThirdparty/IlumaValidateBankAccount',
            finance__pb2.BankValidatorRequest.SerializeToString,
            finance__pb2.BankValidatorResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def OYValidateBankAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.FinanceThirdparty/OYValidateBankAccount',
            finance__pb2.BankValidatorRequest.SerializeToString,
            finance__pb2.BankValidatorResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def OYValidateBankAccountKoinNeo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.FinanceThirdparty/OYValidateBankAccountKoinNeo',
            finance__pb2.BankValidatorRequest.SerializeToString,
            finance__pb2.NeoBankValidatorResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetInquiryDomesticAccountBCA(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.FinanceThirdparty/GetInquiryDomesticAccountBCA',
            finance__pb2.GetInquiryDomesticAccountBCAArguments.SerializeToString,
            finance__pb2.GetInquiryDomesticAccountBCAResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAccountStatementBCA(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.FinanceThirdparty/GetAccountStatementBCA',
            finance__pb2.GetAccountStatementBCAArguments.SerializeToString,
            finance__pb2.GetAccountStatementBCAResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InstamoneyFundTransfer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.FinanceThirdparty/InstamoneyFundTransfer',
            finance__pb2.InstamoneyTransferFundRequest.SerializeToString,
            finance__pb2.CashOutStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BCAFundTransfer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.FinanceThirdparty/BCAFundTransfer',
            finance__pb2.FundTransferRequest.SerializeToString,
            finance__pb2.CashOutStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def OYFundTransfer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.FinanceThirdparty/OYFundTransfer',
            finance__pb2.FundTransferRequest.SerializeToString,
            finance__pb2.CashOutStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def OYTransferSplittedFund(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.FinanceThirdparty/OYTransferSplittedFund',
            finance__pb2.FundTransferRequest.SerializeToString,
            finance__pb2.CashOutStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateInterBankFundTransfer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.FinanceThirdparty/CreateInterBankFundTransfer',
            finance__pb2.CreateInterBankFundTransferArguments.SerializeToString,
            finance__pb2.CashOutStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CallbackCashOutStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.FinanceThirdparty/CallbackCashOutStatus',
            finance__pb2.CallbackCashOutStatusRequest.SerializeToString,
            finance__pb2.CashOutStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def OyCallbackCashOutStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.FinanceThirdparty/OyCallbackCashOutStatus',
            finance__pb2.CallbackCashOutStatusRequest.SerializeToString,
            finance__pb2.CashOutStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllFundTransferExternalIdAndApiStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.FinanceThirdparty/GetAllFundTransferExternalIdAndApiStatus',
            finance__pb2.GetAllFundTransferExternalIdAndApiStatusRequest.SerializeToString,
            finance__pb2.GetAllFundTransferExternalIdAndApiStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CallbackFundTransferStatusForKafkaPublish(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.FinanceThirdparty/CallbackFundTransferStatusForKafkaPublish',
            finance__pb2.CallbackCashOutStatusRequest.SerializeToString,
            finance__pb2.CallbackFundTransferStatusForKafkaPublishResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBalanceThirdparty(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.FinanceThirdparty/GetBalanceThirdparty',
            finance__pb2.InputGetBalanceThirdparty.SerializeToString,
            finance__pb2.OutputGetBalanceThirdparty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetInquiryDomesticAccountBCASLA(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.FinanceThirdparty/GetInquiryDomesticAccountBCASLA',
            finance__pb2.GetInquiryDomesticAccountBCAArguments.SerializeToString,
            finance__pb2.GetInquiryDomesticAccountBCAResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAccountStatementBCASLA(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.FinanceThirdparty/GetAccountStatementBCASLA',
            finance__pb2.GetAccountStatementBCAArguments.SerializeToString,
            finance__pb2.GetAccountStatementBCAResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BCASLAFundTransfer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.FinanceThirdparty/BCASLAFundTransfer',
            finance__pb2.FundTransferRequest.SerializeToString,
            finance__pb2.CashOutStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateInterBankFundTransferSLA(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.FinanceThirdparty/CreateInterBankFundTransferSLA',
            finance__pb2.CreateInterBankFundTransferArguments.SerializeToString,
            finance__pb2.CashOutStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateEWalletPayment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.FinanceThirdparty/CreateEWalletPayment',
            finance__pb2.InputCreateEWalletPayment.SerializeToString,
            finance__pb2.OutputCreateEWalletPayment.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetListEwallet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.FinanceThirdparty/GetListEwallet',
            finance__pb2.InputFilterEwallet.SerializeToString,
            finance__pb2.ListEwallets.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCashInOutStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.FinanceThirdparty/GetCashInOutStatus',
            finance__pb2.GetCashInOutStatusRequest.SerializeToString,
            finance__pb2.GetCashInOutStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
