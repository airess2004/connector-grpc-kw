# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import koinneo_pb2 as koinneo__pb2


class KoinNeoStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateMyStoreRequestPayment = channel.unary_unary(
                '/packets.KoinNeo/CreateMyStoreRequestPayment',
                request_serializer=koinneo__pb2.InputCreateMyStoreRequestPayment.SerializeToString,
                response_deserializer=koinneo__pb2.OutputCreateMyStoreRequestPayment.FromString,
                )
        self.CreateSourceFromRpc = channel.unary_unary(
                '/packets.KoinNeo/CreateSourceFromRpc',
                request_serializer=koinneo__pb2.InputCreateSourceFromRpc.SerializeToString,
                response_deserializer=koinneo__pb2.OutputCreateSourceFromRpc.FromString,
                )
        self.GetOtherSourceList = channel.unary_unary(
                '/packets.KoinNeo/GetOtherSourceList',
                request_serializer=koinneo__pb2.InputGetOtherSourceList.SerializeToString,
                response_deserializer=koinneo__pb2.OutputGetOtherSourceList.FromString,
                )
        self.NeoCreation = channel.unary_unary(
                '/packets.KoinNeo/NeoCreation',
                request_serializer=koinneo__pb2.NeoCreationequest.SerializeToString,
                response_deserializer=koinneo__pb2.NeoCreationResponse.FromString,
                )
        self.CheckStatusNeoCreation = channel.unary_unary(
                '/packets.KoinNeo/CheckStatusNeoCreation',
                request_serializer=koinneo__pb2.CheckStatusNeoCreationequest.SerializeToString,
                response_deserializer=koinneo__pb2.CheckStatusNeoCreationResponse.FromString,
                )
        self.GetUserType = channel.unary_unary(
                '/packets.KoinNeo/GetUserType',
                request_serializer=koinneo__pb2.GetUserTypeRequest.SerializeToString,
                response_deserializer=koinneo__pb2.GetUserTypeResponse.FromString,
                )
        self.GetVirtualAccount = channel.unary_unary(
                '/packets.KoinNeo/GetVirtualAccount',
                request_serializer=koinneo__pb2.GetVirtualAccountRequest.SerializeToString,
                response_deserializer=koinneo__pb2.GetVirtualAccountResponse.FromString,
                )
        self.KoinBisnisCreateVirtualCard = channel.unary_unary(
                '/packets.KoinNeo/KoinBisnisCreateVirtualCard',
                request_serializer=koinneo__pb2.KoinBisnisCreateVirtualCardRequest.SerializeToString,
                response_deserializer=koinneo__pb2.KoinBisnisCreateVirtualCardResponse.FromString,
                )
        self.KoinBisnisTopUpVirtualCard = channel.unary_unary(
                '/packets.KoinNeo/KoinBisnisTopUpVirtualCard',
                request_serializer=koinneo__pb2.KoinBisnisTopUpVirtualCardRequest.SerializeToString,
                response_deserializer=koinneo__pb2.KoinBisnisTopUpVirtualCardResponse.FromString,
                )
        self.KoinBisnisGetVirtualCard = channel.unary_unary(
                '/packets.KoinNeo/KoinBisnisGetVirtualCard',
                request_serializer=koinneo__pb2.KoinBisnisGetVirtualCardRequest.SerializeToString,
                response_deserializer=koinneo__pb2.KoinBisnisGetVirtualCardResponse.FromString,
                )
        self.KoinInvoiceCreateVirtualCard = channel.unary_unary(
                '/packets.KoinNeo/KoinInvoiceCreateVirtualCard',
                request_serializer=koinneo__pb2.KoinInvoiceCreateVirtualCardRequest.SerializeToString,
                response_deserializer=koinneo__pb2.KoinInvoiceCreateVirtualCardResponse.FromString,
                )
        self.KoinInvoiceDisburseData = channel.unary_unary(
                '/packets.KoinNeo/KoinInvoiceDisburseData',
                request_serializer=koinneo__pb2.KoinInvoiceDisburseDataRequest.SerializeToString,
                response_deserializer=koinneo__pb2.KoinInvoiceDisburseDataResponse.FromString,
                )
        self.KoinInvoiceGetVirtualCard = channel.unary_unary(
                '/packets.KoinNeo/KoinInvoiceGetVirtualCard',
                request_serializer=koinneo__pb2.KoinInvoiceGetVirtualCardRequest.SerializeToString,
                response_deserializer=koinneo__pb2.KoinInvoiceGetVirtualCardResponse.FromString,
                )
        self.CreatePaymentTransaction = channel.unary_unary(
                '/packets.KoinNeo/CreatePaymentTransaction',
                request_serializer=koinneo__pb2.KoinNeoCreatePaymentTransactionRequest.SerializeToString,
                response_deserializer=koinneo__pb2.KoinNeoCreatePaymentTransactionResponse.FromString,
                )
        self.RefundPaymentTransaction = channel.unary_unary(
                '/packets.KoinNeo/RefundPaymentTransaction',
                request_serializer=koinneo__pb2.KoinNeoRefundPaymentTransactionRequest.SerializeToString,
                response_deserializer=koinneo__pb2.KoinNeoRefundPaymentTransactionResponse.FromString,
                )
        self.GetPaymentTransaction = channel.unary_unary(
                '/packets.KoinNeo/GetPaymentTransaction',
                request_serializer=koinneo__pb2.KoinNeoGetPaymentTransactionRequest.SerializeToString,
                response_deserializer=koinneo__pb2.KoinNeoGetPaymentTransactionResponse.FromString,
                )


class KoinNeoServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateMyStoreRequestPayment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateSourceFromRpc(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOtherSourceList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NeoCreation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckStatusNeoCreation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserType(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVirtualAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def KoinBisnisCreateVirtualCard(self, request, context):
        """mastercard
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def KoinBisnisTopUpVirtualCard(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def KoinBisnisGetVirtualCard(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def KoinInvoiceCreateVirtualCard(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def KoinInvoiceDisburseData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def KoinInvoiceGetVirtualCard(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreatePaymentTransaction(self, request, context):
        """payment
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RefundPaymentTransaction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPaymentTransaction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_KoinNeoServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateMyStoreRequestPayment': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateMyStoreRequestPayment,
                    request_deserializer=koinneo__pb2.InputCreateMyStoreRequestPayment.FromString,
                    response_serializer=koinneo__pb2.OutputCreateMyStoreRequestPayment.SerializeToString,
            ),
            'CreateSourceFromRpc': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateSourceFromRpc,
                    request_deserializer=koinneo__pb2.InputCreateSourceFromRpc.FromString,
                    response_serializer=koinneo__pb2.OutputCreateSourceFromRpc.SerializeToString,
            ),
            'GetOtherSourceList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOtherSourceList,
                    request_deserializer=koinneo__pb2.InputGetOtherSourceList.FromString,
                    response_serializer=koinneo__pb2.OutputGetOtherSourceList.SerializeToString,
            ),
            'NeoCreation': grpc.unary_unary_rpc_method_handler(
                    servicer.NeoCreation,
                    request_deserializer=koinneo__pb2.NeoCreationequest.FromString,
                    response_serializer=koinneo__pb2.NeoCreationResponse.SerializeToString,
            ),
            'CheckStatusNeoCreation': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckStatusNeoCreation,
                    request_deserializer=koinneo__pb2.CheckStatusNeoCreationequest.FromString,
                    response_serializer=koinneo__pb2.CheckStatusNeoCreationResponse.SerializeToString,
            ),
            'GetUserType': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserType,
                    request_deserializer=koinneo__pb2.GetUserTypeRequest.FromString,
                    response_serializer=koinneo__pb2.GetUserTypeResponse.SerializeToString,
            ),
            'GetVirtualAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVirtualAccount,
                    request_deserializer=koinneo__pb2.GetVirtualAccountRequest.FromString,
                    response_serializer=koinneo__pb2.GetVirtualAccountResponse.SerializeToString,
            ),
            'KoinBisnisCreateVirtualCard': grpc.unary_unary_rpc_method_handler(
                    servicer.KoinBisnisCreateVirtualCard,
                    request_deserializer=koinneo__pb2.KoinBisnisCreateVirtualCardRequest.FromString,
                    response_serializer=koinneo__pb2.KoinBisnisCreateVirtualCardResponse.SerializeToString,
            ),
            'KoinBisnisTopUpVirtualCard': grpc.unary_unary_rpc_method_handler(
                    servicer.KoinBisnisTopUpVirtualCard,
                    request_deserializer=koinneo__pb2.KoinBisnisTopUpVirtualCardRequest.FromString,
                    response_serializer=koinneo__pb2.KoinBisnisTopUpVirtualCardResponse.SerializeToString,
            ),
            'KoinBisnisGetVirtualCard': grpc.unary_unary_rpc_method_handler(
                    servicer.KoinBisnisGetVirtualCard,
                    request_deserializer=koinneo__pb2.KoinBisnisGetVirtualCardRequest.FromString,
                    response_serializer=koinneo__pb2.KoinBisnisGetVirtualCardResponse.SerializeToString,
            ),
            'KoinInvoiceCreateVirtualCard': grpc.unary_unary_rpc_method_handler(
                    servicer.KoinInvoiceCreateVirtualCard,
                    request_deserializer=koinneo__pb2.KoinInvoiceCreateVirtualCardRequest.FromString,
                    response_serializer=koinneo__pb2.KoinInvoiceCreateVirtualCardResponse.SerializeToString,
            ),
            'KoinInvoiceDisburseData': grpc.unary_unary_rpc_method_handler(
                    servicer.KoinInvoiceDisburseData,
                    request_deserializer=koinneo__pb2.KoinInvoiceDisburseDataRequest.FromString,
                    response_serializer=koinneo__pb2.KoinInvoiceDisburseDataResponse.SerializeToString,
            ),
            'KoinInvoiceGetVirtualCard': grpc.unary_unary_rpc_method_handler(
                    servicer.KoinInvoiceGetVirtualCard,
                    request_deserializer=koinneo__pb2.KoinInvoiceGetVirtualCardRequest.FromString,
                    response_serializer=koinneo__pb2.KoinInvoiceGetVirtualCardResponse.SerializeToString,
            ),
            'CreatePaymentTransaction': grpc.unary_unary_rpc_method_handler(
                    servicer.CreatePaymentTransaction,
                    request_deserializer=koinneo__pb2.KoinNeoCreatePaymentTransactionRequest.FromString,
                    response_serializer=koinneo__pb2.KoinNeoCreatePaymentTransactionResponse.SerializeToString,
            ),
            'RefundPaymentTransaction': grpc.unary_unary_rpc_method_handler(
                    servicer.RefundPaymentTransaction,
                    request_deserializer=koinneo__pb2.KoinNeoRefundPaymentTransactionRequest.FromString,
                    response_serializer=koinneo__pb2.KoinNeoRefundPaymentTransactionResponse.SerializeToString,
            ),
            'GetPaymentTransaction': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPaymentTransaction,
                    request_deserializer=koinneo__pb2.KoinNeoGetPaymentTransactionRequest.FromString,
                    response_serializer=koinneo__pb2.KoinNeoGetPaymentTransactionResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'packets.KoinNeo', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class KoinNeo(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateMyStoreRequestPayment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.KoinNeo/CreateMyStoreRequestPayment',
            koinneo__pb2.InputCreateMyStoreRequestPayment.SerializeToString,
            koinneo__pb2.OutputCreateMyStoreRequestPayment.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateSourceFromRpc(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.KoinNeo/CreateSourceFromRpc',
            koinneo__pb2.InputCreateSourceFromRpc.SerializeToString,
            koinneo__pb2.OutputCreateSourceFromRpc.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOtherSourceList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.KoinNeo/GetOtherSourceList',
            koinneo__pb2.InputGetOtherSourceList.SerializeToString,
            koinneo__pb2.OutputGetOtherSourceList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NeoCreation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.KoinNeo/NeoCreation',
            koinneo__pb2.NeoCreationequest.SerializeToString,
            koinneo__pb2.NeoCreationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckStatusNeoCreation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.KoinNeo/CheckStatusNeoCreation',
            koinneo__pb2.CheckStatusNeoCreationequest.SerializeToString,
            koinneo__pb2.CheckStatusNeoCreationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserType(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.KoinNeo/GetUserType',
            koinneo__pb2.GetUserTypeRequest.SerializeToString,
            koinneo__pb2.GetUserTypeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetVirtualAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.KoinNeo/GetVirtualAccount',
            koinneo__pb2.GetVirtualAccountRequest.SerializeToString,
            koinneo__pb2.GetVirtualAccountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def KoinBisnisCreateVirtualCard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.KoinNeo/KoinBisnisCreateVirtualCard',
            koinneo__pb2.KoinBisnisCreateVirtualCardRequest.SerializeToString,
            koinneo__pb2.KoinBisnisCreateVirtualCardResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def KoinBisnisTopUpVirtualCard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.KoinNeo/KoinBisnisTopUpVirtualCard',
            koinneo__pb2.KoinBisnisTopUpVirtualCardRequest.SerializeToString,
            koinneo__pb2.KoinBisnisTopUpVirtualCardResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def KoinBisnisGetVirtualCard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.KoinNeo/KoinBisnisGetVirtualCard',
            koinneo__pb2.KoinBisnisGetVirtualCardRequest.SerializeToString,
            koinneo__pb2.KoinBisnisGetVirtualCardResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def KoinInvoiceCreateVirtualCard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.KoinNeo/KoinInvoiceCreateVirtualCard',
            koinneo__pb2.KoinInvoiceCreateVirtualCardRequest.SerializeToString,
            koinneo__pb2.KoinInvoiceCreateVirtualCardResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def KoinInvoiceDisburseData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.KoinNeo/KoinInvoiceDisburseData',
            koinneo__pb2.KoinInvoiceDisburseDataRequest.SerializeToString,
            koinneo__pb2.KoinInvoiceDisburseDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def KoinInvoiceGetVirtualCard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.KoinNeo/KoinInvoiceGetVirtualCard',
            koinneo__pb2.KoinInvoiceGetVirtualCardRequest.SerializeToString,
            koinneo__pb2.KoinInvoiceGetVirtualCardResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreatePaymentTransaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.KoinNeo/CreatePaymentTransaction',
            koinneo__pb2.KoinNeoCreatePaymentTransactionRequest.SerializeToString,
            koinneo__pb2.KoinNeoCreatePaymentTransactionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RefundPaymentTransaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.KoinNeo/RefundPaymentTransaction',
            koinneo__pb2.KoinNeoRefundPaymentTransactionRequest.SerializeToString,
            koinneo__pb2.KoinNeoRefundPaymentTransactionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPaymentTransaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.KoinNeo/GetPaymentTransaction',
            koinneo__pb2.KoinNeoGetPaymentTransactionRequest.SerializeToString,
            koinneo__pb2.KoinNeoGetPaymentTransactionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
