# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from . import portfoliomanagementsystem_pb2 as portfoliomanagementsystem__pb2


class PortfolioManagementSystemStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateTransferRequest = channel.unary_unary(
                '/packets.PortfolioManagementSystem/CreateTransferRequest',
                request_serializer=portfoliomanagementsystem__pb2.InputPMSTransferRequest.SerializeToString,
                response_deserializer=portfoliomanagementsystem__pb2.OuputPMSTransferRequest.FromString,
                )
        self.CreateInstrumentPrice = channel.unary_unary(
                '/packets.PortfolioManagementSystem/CreateInstrumentPrice',
                request_serializer=portfoliomanagementsystem__pb2.InputPMSInstrumentPrice.SerializeToString,
                response_deserializer=portfoliomanagementsystem__pb2.OutputPMSInstrumentPrice.FromString,
                )
        self.CreateTransferActivity = channel.unary_unary(
                '/packets.PortfolioManagementSystem/CreateTransferActivity',
                request_serializer=portfoliomanagementsystem__pb2.InputPMSTransferActivity.SerializeToString,
                response_deserializer=portfoliomanagementsystem__pb2.OutputPMSTransferActivity.FromString,
                )
        self.GetAccountValue = channel.unary_unary(
                '/packets.PortfolioManagementSystem/GetAccountValue',
                request_serializer=portfoliomanagementsystem__pb2.InputPMSAccountValue.SerializeToString,
                response_deserializer=portfoliomanagementsystem__pb2.OutputPMSAccountValue.FromString,
                )
        self.GetPotentialProfit = channel.unary_unary(
                '/packets.PortfolioManagementSystem/GetPotentialProfit',
                request_serializer=portfoliomanagementsystem__pb2.InputPotentialProfit.SerializeToString,
                response_deserializer=portfoliomanagementsystem__pb2.OutputPotentialProfit.FromString,
                )
        self.CreateOrderHistory = channel.unary_unary(
                '/packets.PortfolioManagementSystem/CreateOrderHistory',
                request_serializer=portfoliomanagementsystem__pb2.InputCreateOrderHistory.SerializeToString,
                response_deserializer=portfoliomanagementsystem__pb2.OutputCreateOrderHistory.FromString,
                )
        self.UpdateP2POrderHistoryData = channel.unary_unary(
                '/packets.PortfolioManagementSystem/UpdateP2POrderHistoryData',
                request_serializer=portfoliomanagementsystem__pb2.InputUpdateP2POrderHistoryData.SerializeToString,
                response_deserializer=portfoliomanagementsystem__pb2.OutputUpdateP2POrderHistoryData.FromString,
                )
        self.GetCurrentGoldPriceAndRoboRate = channel.unary_unary(
                '/packets.PortfolioManagementSystem/GetCurrentGoldPriceAndRoboRate',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=portfoliomanagementsystem__pb2.OutputCurrGoldPriceAndRoboRate.FromString,
                )
        self.UpdateOrderHistory = channel.unary_unary(
                '/packets.PortfolioManagementSystem/UpdateOrderHistory',
                request_serializer=portfoliomanagementsystem__pb2.InputUpdateOrderHistory.SerializeToString,
                response_deserializer=portfoliomanagementsystem__pb2.OutputUpdateOrderHistory.FromString,
                )


class PortfolioManagementSystemServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateTransferRequest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateInstrumentPrice(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateTransferActivity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAccountValue(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPotentialProfit(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateOrderHistory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateP2POrderHistoryData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCurrentGoldPriceAndRoboRate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateOrderHistory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PortfolioManagementSystemServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateTransferRequest': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateTransferRequest,
                    request_deserializer=portfoliomanagementsystem__pb2.InputPMSTransferRequest.FromString,
                    response_serializer=portfoliomanagementsystem__pb2.OuputPMSTransferRequest.SerializeToString,
            ),
            'CreateInstrumentPrice': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateInstrumentPrice,
                    request_deserializer=portfoliomanagementsystem__pb2.InputPMSInstrumentPrice.FromString,
                    response_serializer=portfoliomanagementsystem__pb2.OutputPMSInstrumentPrice.SerializeToString,
            ),
            'CreateTransferActivity': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateTransferActivity,
                    request_deserializer=portfoliomanagementsystem__pb2.InputPMSTransferActivity.FromString,
                    response_serializer=portfoliomanagementsystem__pb2.OutputPMSTransferActivity.SerializeToString,
            ),
            'GetAccountValue': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAccountValue,
                    request_deserializer=portfoliomanagementsystem__pb2.InputPMSAccountValue.FromString,
                    response_serializer=portfoliomanagementsystem__pb2.OutputPMSAccountValue.SerializeToString,
            ),
            'GetPotentialProfit': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPotentialProfit,
                    request_deserializer=portfoliomanagementsystem__pb2.InputPotentialProfit.FromString,
                    response_serializer=portfoliomanagementsystem__pb2.OutputPotentialProfit.SerializeToString,
            ),
            'CreateOrderHistory': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateOrderHistory,
                    request_deserializer=portfoliomanagementsystem__pb2.InputCreateOrderHistory.FromString,
                    response_serializer=portfoliomanagementsystem__pb2.OutputCreateOrderHistory.SerializeToString,
            ),
            'UpdateP2POrderHistoryData': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateP2POrderHistoryData,
                    request_deserializer=portfoliomanagementsystem__pb2.InputUpdateP2POrderHistoryData.FromString,
                    response_serializer=portfoliomanagementsystem__pb2.OutputUpdateP2POrderHistoryData.SerializeToString,
            ),
            'GetCurrentGoldPriceAndRoboRate': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCurrentGoldPriceAndRoboRate,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=portfoliomanagementsystem__pb2.OutputCurrGoldPriceAndRoboRate.SerializeToString,
            ),
            'UpdateOrderHistory': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateOrderHistory,
                    request_deserializer=portfoliomanagementsystem__pb2.InputUpdateOrderHistory.FromString,
                    response_serializer=portfoliomanagementsystem__pb2.OutputUpdateOrderHistory.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'packets.PortfolioManagementSystem', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PortfolioManagementSystem(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateTransferRequest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.PortfolioManagementSystem/CreateTransferRequest',
            portfoliomanagementsystem__pb2.InputPMSTransferRequest.SerializeToString,
            portfoliomanagementsystem__pb2.OuputPMSTransferRequest.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateInstrumentPrice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.PortfolioManagementSystem/CreateInstrumentPrice',
            portfoliomanagementsystem__pb2.InputPMSInstrumentPrice.SerializeToString,
            portfoliomanagementsystem__pb2.OutputPMSInstrumentPrice.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateTransferActivity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.PortfolioManagementSystem/CreateTransferActivity',
            portfoliomanagementsystem__pb2.InputPMSTransferActivity.SerializeToString,
            portfoliomanagementsystem__pb2.OutputPMSTransferActivity.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAccountValue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.PortfolioManagementSystem/GetAccountValue',
            portfoliomanagementsystem__pb2.InputPMSAccountValue.SerializeToString,
            portfoliomanagementsystem__pb2.OutputPMSAccountValue.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPotentialProfit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.PortfolioManagementSystem/GetPotentialProfit',
            portfoliomanagementsystem__pb2.InputPotentialProfit.SerializeToString,
            portfoliomanagementsystem__pb2.OutputPotentialProfit.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateOrderHistory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.PortfolioManagementSystem/CreateOrderHistory',
            portfoliomanagementsystem__pb2.InputCreateOrderHistory.SerializeToString,
            portfoliomanagementsystem__pb2.OutputCreateOrderHistory.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateP2POrderHistoryData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.PortfolioManagementSystem/UpdateP2POrderHistoryData',
            portfoliomanagementsystem__pb2.InputUpdateP2POrderHistoryData.SerializeToString,
            portfoliomanagementsystem__pb2.OutputUpdateP2POrderHistoryData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCurrentGoldPriceAndRoboRate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.PortfolioManagementSystem/GetCurrentGoldPriceAndRoboRate',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            portfoliomanagementsystem__pb2.OutputCurrGoldPriceAndRoboRate.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateOrderHistory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.PortfolioManagementSystem/UpdateOrderHistory',
            portfoliomanagementsystem__pb2.InputUpdateOrderHistory.SerializeToString,
            portfoliomanagementsystem__pb2.OutputUpdateOrderHistory.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
