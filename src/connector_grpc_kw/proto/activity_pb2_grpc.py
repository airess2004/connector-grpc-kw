# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import activity_pb2 as activity__pb2
from . import common_pb2 as common__pb2


class ActivityStub(object):
    """services

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetHistoryCashInOut = channel.unary_unary(
                '/packets.Activity/GetHistoryCashInOut',
                request_serializer=common__pb2.PViewArguments.SerializeToString,
                response_deserializer=common__pb2.PViewResponses.FromString,
                )
        self.GetDetailCashInOut = channel.unary_unary(
                '/packets.Activity/GetDetailCashInOut',
                request_serializer=common__pb2.PViewArguments.SerializeToString,
                response_deserializer=common__pb2.PViewResponses.FromString,
                )
        self.CreateWithdrawal = channel.unary_unary(
                '/packets.Activity/CreateWithdrawal',
                request_serializer=activity__pb2.CreateWithdrawalArguments.SerializeToString,
                response_deserializer=common__pb2.PInsertResponses.FromString,
                )
        self.CreateDisbursement = channel.unary_unary(
                '/packets.Activity/CreateDisbursement',
                request_serializer=activity__pb2.CreateDisbursementArguments.SerializeToString,
                response_deserializer=common__pb2.PInsertResponses.FromString,
                )
        self.CreateVADeposit = channel.unary_unary(
                '/packets.Activity/CreateVADeposit',
                request_serializer=activity__pb2.CreateDepositArguments.SerializeToString,
                response_deserializer=common__pb2.PInsertResponses.FromString,
                )
        self.CreateManualDeposit = channel.unary_unary(
                '/packets.Activity/CreateManualDeposit',
                request_serializer=activity__pb2.CreateDepositArguments.SerializeToString,
                response_deserializer=common__pb2.PInsertResponses.FromString,
                )
        self.CreateIncomingCash = channel.unary_unary(
                '/packets.Activity/CreateIncomingCash',
                request_serializer=activity__pb2.CreateIncomingCashArguments.SerializeToString,
                response_deserializer=common__pb2.PInsertResponses.FromString,
                )
        self.CreateCampaignExternalReward = channel.unary_unary(
                '/packets.Activity/CreateCampaignExternalReward',
                request_serializer=activity__pb2.CreateCampaignExternalRewardArguments.SerializeToString,
                response_deserializer=common__pb2.PInsertResponses.FromString,
                )
        self.CreateExternalTransfer = channel.unary_unary(
                '/packets.Activity/CreateExternalTransfer',
                request_serializer=activity__pb2.CreateExternalTransferArguments.SerializeToString,
                response_deserializer=common__pb2.PInsertResponses.FromString,
                )
        self.ApproveCashInOut = channel.unary_unary(
                '/packets.Activity/ApproveCashInOut',
                request_serializer=activity__pb2.ApproveCashInOutArguments.SerializeToString,
                response_deserializer=common__pb2.PViewResponses.FromString,
                )
        self.GetHistoryBalance = channel.unary_unary(
                '/packets.Activity/GetHistoryBalance',
                request_serializer=activity__pb2.GetHistoryBalanceArguments.SerializeToString,
                response_deserializer=common__pb2.PViewResponses.FromString,
                )
        self.GetBalance = channel.unary_unary(
                '/packets.Activity/GetBalance',
                request_serializer=activity__pb2.GetBalanceArguments.SerializeToString,
                response_deserializer=activity__pb2.BalanceResponses.FromString,
                )
        self.GetListBalance = channel.unary_unary(
                '/packets.Activity/GetListBalance',
                request_serializer=common__pb2.PViewArguments.SerializeToString,
                response_deserializer=common__pb2.PViewResponses.FromString,
                )
        self.CreateInitialBalance = channel.unary_unary(
                '/packets.Activity/CreateInitialBalance',
                request_serializer=activity__pb2.CreateInitialBalanceArguments.SerializeToString,
                response_deserializer=common__pb2.PViewResponses.FromString,
                )
        self.SetGoldBalance = channel.unary_unary(
                '/packets.Activity/SetGoldBalance',
                request_serializer=activity__pb2.SetGoldBalanceArguments.SerializeToString,
                response_deserializer=common__pb2.PInsertResponses.FromString,
                )
        self.GetListBalanceStash = channel.unary_unary(
                '/packets.Activity/GetListBalanceStash',
                request_serializer=common__pb2.PViewArguments.SerializeToString,
                response_deserializer=common__pb2.PViewResponses.FromString,
                )
        self.CreateBalanceStash = channel.unary_unary(
                '/packets.Activity/CreateBalanceStash',
                request_serializer=activity__pb2.CreateBalanceStashArguments.SerializeToString,
                response_deserializer=common__pb2.PInsertResponses.FromString,
                )
        self.BatchCreateBalanceStash = channel.unary_unary(
                '/packets.Activity/BatchCreateBalanceStash',
                request_serializer=activity__pb2.BatchCreateBalanceStashArguments.SerializeToString,
                response_deserializer=common__pb2.PInsertResponses.FromString,
                )
        self.AggregateBalanceStash = channel.unary_unary(
                '/packets.Activity/AggregateBalanceStash',
                request_serializer=activity__pb2.AggregateBalanceStashArguments.SerializeToString,
                response_deserializer=common__pb2.PViewResponses.FromString,
                )
        self.GetHistoryMutation = channel.unary_unary(
                '/packets.Activity/GetHistoryMutation',
                request_serializer=common__pb2.PViewArguments.SerializeToString,
                response_deserializer=common__pb2.PViewResponses.FromString,
                )
        self.CreateMutation = channel.unary_unary(
                '/packets.Activity/CreateMutation',
                request_serializer=activity__pb2.CreateMutationArguments.SerializeToString,
                response_deserializer=common__pb2.PInsertResponses.FromString,
                )
        self.CreateMutationWithDiscount = channel.unary_unary(
                '/packets.Activity/CreateMutationWithDiscount',
                request_serializer=activity__pb2.CreateMutationWithDiscountArguments.SerializeToString,
                response_deserializer=common__pb2.PInsertResponses.FromString,
                )
        self.BatchCreateMutation = channel.unary_unary(
                '/packets.Activity/BatchCreateMutation',
                request_serializer=activity__pb2.BatchCreateMutationArguments.SerializeToString,
                response_deserializer=common__pb2.PInsertResponses.FromString,
                )
        self.UnlockMutation = channel.unary_unary(
                '/packets.Activity/UnlockMutation',
                request_serializer=activity__pb2.UnlockMutationArguments.SerializeToString,
                response_deserializer=common__pb2.PInsertResponses.FromString,
                )
        self.BatchUnlockMutation = channel.unary_unary(
                '/packets.Activity/BatchUnlockMutation',
                request_serializer=activity__pb2.BatchUnlockMutationArguments.SerializeToString,
                response_deserializer=common__pb2.PInsertResponses.FromString,
                )
        self.BatchCreateMutationV2 = channel.unary_unary(
                '/packets.Activity/BatchCreateMutationV2',
                request_serializer=activity__pb2.BatchCreateMutationArguments.SerializeToString,
                response_deserializer=common__pb2.PInsertResponses.FromString,
                )
        self.GetHistoryKoinGrant = channel.unary_unary(
                '/packets.Activity/GetHistoryKoinGrant',
                request_serializer=common__pb2.PViewArguments.SerializeToString,
                response_deserializer=common__pb2.PViewResponses.FromString,
                )
        self.GetHistoryKoinAllocation = channel.unary_unary(
                '/packets.Activity/GetHistoryKoinAllocation',
                request_serializer=common__pb2.PViewArguments.SerializeToString,
                response_deserializer=common__pb2.PViewResponses.FromString,
                )
        self.GetListPaymentPriority = channel.unary_unary(
                '/packets.Activity/GetListPaymentPriority',
                request_serializer=common__pb2.PViewArguments.SerializeToString,
                response_deserializer=common__pb2.PViewResponses.FromString,
                )
        self.CreatePaymentPriority = channel.unary_unary(
                '/packets.Activity/CreatePaymentPriority',
                request_serializer=activity__pb2.CreatePaymentPriorityArguments.SerializeToString,
                response_deserializer=common__pb2.PInsertResponses.FromString,
                )
        self.BatchCreatePaymentPriority = channel.unary_unary(
                '/packets.Activity/BatchCreatePaymentPriority',
                request_serializer=activity__pb2.BatchCreatePaymentPriorityArguments.SerializeToString,
                response_deserializer=common__pb2.PInsertResponses.FromString,
                )
        self.DeactivePaymentPriority = channel.unary_unary(
                '/packets.Activity/DeactivePaymentPriority',
                request_serializer=activity__pb2.DeactivePaymentPriorityArguments.SerializeToString,
                response_deserializer=common__pb2.PInsertResponses.FromString,
                )
        self.BatchDeactivePaymentPriority = channel.unary_unary(
                '/packets.Activity/BatchDeactivePaymentPriority',
                request_serializer=activity__pb2.BatchDeactivePaymentPriorityArguments.SerializeToString,
                response_deserializer=common__pb2.PInsertResponses.FromString,
                )
        self.GetDetailUser = channel.unary_unary(
                '/packets.Activity/GetDetailUser',
                request_serializer=common__pb2.PViewArguments.SerializeToString,
                response_deserializer=common__pb2.PViewResponses.FromString,
                )
        self.SetUserDetail = channel.unary_unary(
                '/packets.Activity/SetUserDetail',
                request_serializer=activity__pb2.SetUserDetailArguments.SerializeToString,
                response_deserializer=common__pb2.PInsertResponses.FromString,
                )
        self.GetListBankDayOff = channel.unary_unary(
                '/packets.Activity/GetListBankDayOff',
                request_serializer=common__pb2.PViewArguments.SerializeToString,
                response_deserializer=common__pb2.PViewResponses.FromString,
                )
        self.CreateBankDayOff = channel.unary_unary(
                '/packets.Activity/CreateBankDayOff',
                request_serializer=activity__pb2.CreateBankDayOffArguments.SerializeToString,
                response_deserializer=common__pb2.PInsertResponses.FromString,
                )
        self.BatchCreateBankDayOff = channel.unary_unary(
                '/packets.Activity/BatchCreateBankDayOff',
                request_serializer=activity__pb2.BatchCreateBankDayOffArguments.SerializeToString,
                response_deserializer=common__pb2.PInsertResponses.FromString,
                )
        self.GetListMutualProduct = channel.unary_unary(
                '/packets.Activity/GetListMutualProduct',
                request_serializer=common__pb2.PViewArguments.SerializeToString,
                response_deserializer=common__pb2.PViewResponses.FromString,
                )
        self.CreateMutualProduct = channel.unary_unary(
                '/packets.Activity/CreateMutualProduct',
                request_serializer=activity__pb2.CreateMutualProductArguments.SerializeToString,
                response_deserializer=common__pb2.PInsertResponses.FromString,
                )
        self.BatchCreateMutualProduct = channel.unary_unary(
                '/packets.Activity/BatchCreateMutualProduct',
                request_serializer=activity__pb2.BatchCreateMutualProductArguments.SerializeToString,
                response_deserializer=common__pb2.PInsertResponses.FromString,
                )
        self.UpdateMutualProduct = channel.unary_unary(
                '/packets.Activity/UpdateMutualProduct',
                request_serializer=activity__pb2.UpdateMutualProductArguments.SerializeToString,
                response_deserializer=common__pb2.PViewResponses.FromString,
                )
        self.GetListMutualBalance = channel.unary_unary(
                '/packets.Activity/GetListMutualBalance',
                request_serializer=common__pb2.PViewArguments.SerializeToString,
                response_deserializer=common__pb2.PViewResponses.FromString,
                )
        self.GetUserMutualBalance = channel.unary_unary(
                '/packets.Activity/GetUserMutualBalance',
                request_serializer=activity__pb2.GetUserMutualBalanceArguments.SerializeToString,
                response_deserializer=activity__pb2.UserMutualBalanceResponses.FromString,
                )
        self.GetListMutualDraft = channel.unary_unary(
                '/packets.Activity/GetListMutualDraft',
                request_serializer=common__pb2.PViewArguments.SerializeToString,
                response_deserializer=common__pb2.PViewResponses.FromString,
                )
        self.GetListMutualDraftDetail = channel.unary_unary(
                '/packets.Activity/GetListMutualDraftDetail',
                request_serializer=common__pb2.PViewArguments.SerializeToString,
                response_deserializer=common__pb2.PViewResponses.FromString,
                )
        self.GetListMutualFund = channel.unary_unary(
                '/packets.Activity/GetListMutualFund',
                request_serializer=common__pb2.PViewArguments.SerializeToString,
                response_deserializer=common__pb2.PViewResponses.FromString,
                )
        self.GetListMutualFundDetail = channel.unary_unary(
                '/packets.Activity/GetListMutualFundDetail',
                request_serializer=common__pb2.PViewArguments.SerializeToString,
                response_deserializer=common__pb2.PViewResponses.FromString,
                )
        self.GetDaySubscription = channel.unary_unary(
                '/packets.Activity/GetDaySubscription',
                request_serializer=activity__pb2.GetDaySubscriptionArguments.SerializeToString,
                response_deserializer=common__pb2.PViewResponses.FromString,
                )
        self.GetDayRedemption = channel.unary_unary(
                '/packets.Activity/GetDayRedemption',
                request_serializer=activity__pb2.GetDayRedemptionArguments.SerializeToString,
                response_deserializer=common__pb2.PViewResponses.FromString,
                )
        self.SetDayNAV = channel.unary_unary(
                '/packets.Activity/SetDayNAV',
                request_serializer=activity__pb2.SetDayNAVArguments.SerializeToString,
                response_deserializer=common__pb2.PViewResponses.FromString,
                )
        self.BatchSetDayNAV = channel.unary_unary(
                '/packets.Activity/BatchSetDayNAV',
                request_serializer=activity__pb2.BatchSetDayNAVArguments.SerializeToString,
                response_deserializer=common__pb2.PInsertResponses.FromString,
                )
        self.CancelDayMutualFund = channel.unary_unary(
                '/packets.Activity/CancelDayMutualFund',
                request_serializer=activity__pb2.CancelDayMutualFundArguments.SerializeToString,
                response_deserializer=common__pb2.PViewResponses.FromString,
                )
        self.CreateAdHocMutualDraftDetail = channel.unary_unary(
                '/packets.Activity/CreateAdHocMutualDraftDetail',
                request_serializer=activity__pb2.CreateMutualDraftDetailAdHocArguments.SerializeToString,
                response_deserializer=common__pb2.PInsertResponses.FromString,
                )
        self.GetListBalanceTransfer = channel.unary_unary(
                '/packets.Activity/GetListBalanceTransfer',
                request_serializer=common__pb2.PViewArguments.SerializeToString,
                response_deserializer=common__pb2.PViewResponses.FromString,
                )
        self.GetListBalanceTransferDetail = channel.unary_unary(
                '/packets.Activity/GetListBalanceTransferDetail',
                request_serializer=common__pb2.PViewArguments.SerializeToString,
                response_deserializer=common__pb2.PViewResponses.FromString,
                )
        self.CreateBalanceTransfer = channel.unary_unary(
                '/packets.Activity/CreateBalanceTransfer',
                request_serializer=activity__pb2.CreateBalanceTransferArguments.SerializeToString,
                response_deserializer=common__pb2.PInsertResponses.FromString,
                )
        self.GetListVirtualAccount = channel.unary_unary(
                '/packets.Activity/GetListVirtualAccount',
                request_serializer=common__pb2.PViewArguments.SerializeToString,
                response_deserializer=common__pb2.PViewResponses.FromString,
                )
        self.SetVirtualAccount = channel.unary_unary(
                '/packets.Activity/SetVirtualAccount',
                request_serializer=activity__pb2.SetVirtualAccountArguments.SerializeToString,
                response_deserializer=common__pb2.PInsertResponses.FromString,
                )
        self.CreateVirtualAccount = channel.unary_unary(
                '/packets.Activity/CreateVirtualAccount',
                request_serializer=activity__pb2.CreateVirtualAccountArguments.SerializeToString,
                response_deserializer=common__pb2.PInsertResponses.FromString,
                )
        self.BatchCreateVirtualAccount = channel.unary_unary(
                '/packets.Activity/BatchCreateVirtualAccount',
                request_serializer=activity__pb2.BatchCreateVirtualAccountArguments.SerializeToString,
                response_deserializer=common__pb2.PInsertResponses.FromString,
                )
        self.GetListVirtualAccountGroup = channel.unary_unary(
                '/packets.Activity/GetListVirtualAccountGroup',
                request_serializer=common__pb2.PViewArguments.SerializeToString,
                response_deserializer=common__pb2.PViewResponses.FromString,
                )
        self.CreateVirtualAccountGroup = channel.unary_unary(
                '/packets.Activity/CreateVirtualAccountGroup',
                request_serializer=activity__pb2.CreateVirtualAccountGroupArguments.SerializeToString,
                response_deserializer=common__pb2.PInsertResponses.FromString,
                )
        self.AssignVirtualAccountGroup = channel.unary_unary(
                '/packets.Activity/AssignVirtualAccountGroup',
                request_serializer=activity__pb2.AssignVirtualAccountGroupArguments.SerializeToString,
                response_deserializer=common__pb2.PViewResponses.FromString,
                )
        self.ReleaseBalanceStash = channel.unary_unary(
                '/packets.Activity/ReleaseBalanceStash',
                request_serializer=activity__pb2.ReleaseBalanceStashArguments.SerializeToString,
                response_deserializer=activity__pb2.ReleaseBalanceStashResponses.FromString,
                )


class ActivityServicer(object):
    """services

    """

    def GetHistoryCashInOut(self, request, context):
        """Cash In Out
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDetailCashInOut(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateWithdrawal(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateDisbursement(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateVADeposit(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateManualDeposit(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateIncomingCash(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateCampaignExternalReward(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateExternalTransfer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ApproveCashInOut(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetHistoryBalance(self, request, context):
        """Balance
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBalance(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetListBalance(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateInitialBalance(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetGoldBalance(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetListBalanceStash(self, request, context):
        """Balance Stash
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateBalanceStash(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchCreateBalanceStash(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AggregateBalanceStash(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetHistoryMutation(self, request, context):
        """Mutation
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateMutation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateMutationWithDiscount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchCreateMutation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnlockMutation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchUnlockMutation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchCreateMutationV2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetHistoryKoinGrant(self, request, context):
        """Koin
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetHistoryKoinAllocation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetListPaymentPriority(self, request, context):
        """Payment Priority
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreatePaymentPriority(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchCreatePaymentPriority(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeactivePaymentPriority(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchDeactivePaymentPriority(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDetailUser(self, request, context):
        """User
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetUserDetail(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetListBankDayOff(self, request, context):
        """Bank
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateBankDayOff(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchCreateBankDayOff(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetListMutualProduct(self, request, context):
        """Mutual Product
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateMutualProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchCreateMutualProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateMutualProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetListMutualBalance(self, request, context):
        """Mutual Balance
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserMutualBalance(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetListMutualDraft(self, request, context):
        """Mutual Fund
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetListMutualDraftDetail(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetListMutualFund(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetListMutualFundDetail(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDaySubscription(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDayRedemption(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDayNAV(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchSetDayNAV(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelDayMutualFund(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateAdHocMutualDraftDetail(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetListBalanceTransfer(self, request, context):
        """Balance Transfer
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetListBalanceTransferDetail(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateBalanceTransfer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetListVirtualAccount(self, request, context):
        """Virtual Account
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetVirtualAccount(self, request, context):
        """Please use CreateVirtualAccount instead
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateVirtualAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchCreateVirtualAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetListVirtualAccountGroup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateVirtualAccountGroup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AssignVirtualAccountGroup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReleaseBalanceStash(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ActivityServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetHistoryCashInOut': grpc.unary_unary_rpc_method_handler(
                    servicer.GetHistoryCashInOut,
                    request_deserializer=common__pb2.PViewArguments.FromString,
                    response_serializer=common__pb2.PViewResponses.SerializeToString,
            ),
            'GetDetailCashInOut': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDetailCashInOut,
                    request_deserializer=common__pb2.PViewArguments.FromString,
                    response_serializer=common__pb2.PViewResponses.SerializeToString,
            ),
            'CreateWithdrawal': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateWithdrawal,
                    request_deserializer=activity__pb2.CreateWithdrawalArguments.FromString,
                    response_serializer=common__pb2.PInsertResponses.SerializeToString,
            ),
            'CreateDisbursement': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateDisbursement,
                    request_deserializer=activity__pb2.CreateDisbursementArguments.FromString,
                    response_serializer=common__pb2.PInsertResponses.SerializeToString,
            ),
            'CreateVADeposit': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateVADeposit,
                    request_deserializer=activity__pb2.CreateDepositArguments.FromString,
                    response_serializer=common__pb2.PInsertResponses.SerializeToString,
            ),
            'CreateManualDeposit': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateManualDeposit,
                    request_deserializer=activity__pb2.CreateDepositArguments.FromString,
                    response_serializer=common__pb2.PInsertResponses.SerializeToString,
            ),
            'CreateIncomingCash': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateIncomingCash,
                    request_deserializer=activity__pb2.CreateIncomingCashArguments.FromString,
                    response_serializer=common__pb2.PInsertResponses.SerializeToString,
            ),
            'CreateCampaignExternalReward': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateCampaignExternalReward,
                    request_deserializer=activity__pb2.CreateCampaignExternalRewardArguments.FromString,
                    response_serializer=common__pb2.PInsertResponses.SerializeToString,
            ),
            'CreateExternalTransfer': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateExternalTransfer,
                    request_deserializer=activity__pb2.CreateExternalTransferArguments.FromString,
                    response_serializer=common__pb2.PInsertResponses.SerializeToString,
            ),
            'ApproveCashInOut': grpc.unary_unary_rpc_method_handler(
                    servicer.ApproveCashInOut,
                    request_deserializer=activity__pb2.ApproveCashInOutArguments.FromString,
                    response_serializer=common__pb2.PViewResponses.SerializeToString,
            ),
            'GetHistoryBalance': grpc.unary_unary_rpc_method_handler(
                    servicer.GetHistoryBalance,
                    request_deserializer=activity__pb2.GetHistoryBalanceArguments.FromString,
                    response_serializer=common__pb2.PViewResponses.SerializeToString,
            ),
            'GetBalance': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBalance,
                    request_deserializer=activity__pb2.GetBalanceArguments.FromString,
                    response_serializer=activity__pb2.BalanceResponses.SerializeToString,
            ),
            'GetListBalance': grpc.unary_unary_rpc_method_handler(
                    servicer.GetListBalance,
                    request_deserializer=common__pb2.PViewArguments.FromString,
                    response_serializer=common__pb2.PViewResponses.SerializeToString,
            ),
            'CreateInitialBalance': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateInitialBalance,
                    request_deserializer=activity__pb2.CreateInitialBalanceArguments.FromString,
                    response_serializer=common__pb2.PViewResponses.SerializeToString,
            ),
            'SetGoldBalance': grpc.unary_unary_rpc_method_handler(
                    servicer.SetGoldBalance,
                    request_deserializer=activity__pb2.SetGoldBalanceArguments.FromString,
                    response_serializer=common__pb2.PInsertResponses.SerializeToString,
            ),
            'GetListBalanceStash': grpc.unary_unary_rpc_method_handler(
                    servicer.GetListBalanceStash,
                    request_deserializer=common__pb2.PViewArguments.FromString,
                    response_serializer=common__pb2.PViewResponses.SerializeToString,
            ),
            'CreateBalanceStash': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateBalanceStash,
                    request_deserializer=activity__pb2.CreateBalanceStashArguments.FromString,
                    response_serializer=common__pb2.PInsertResponses.SerializeToString,
            ),
            'BatchCreateBalanceStash': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchCreateBalanceStash,
                    request_deserializer=activity__pb2.BatchCreateBalanceStashArguments.FromString,
                    response_serializer=common__pb2.PInsertResponses.SerializeToString,
            ),
            'AggregateBalanceStash': grpc.unary_unary_rpc_method_handler(
                    servicer.AggregateBalanceStash,
                    request_deserializer=activity__pb2.AggregateBalanceStashArguments.FromString,
                    response_serializer=common__pb2.PViewResponses.SerializeToString,
            ),
            'GetHistoryMutation': grpc.unary_unary_rpc_method_handler(
                    servicer.GetHistoryMutation,
                    request_deserializer=common__pb2.PViewArguments.FromString,
                    response_serializer=common__pb2.PViewResponses.SerializeToString,
            ),
            'CreateMutation': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateMutation,
                    request_deserializer=activity__pb2.CreateMutationArguments.FromString,
                    response_serializer=common__pb2.PInsertResponses.SerializeToString,
            ),
            'CreateMutationWithDiscount': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateMutationWithDiscount,
                    request_deserializer=activity__pb2.CreateMutationWithDiscountArguments.FromString,
                    response_serializer=common__pb2.PInsertResponses.SerializeToString,
            ),
            'BatchCreateMutation': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchCreateMutation,
                    request_deserializer=activity__pb2.BatchCreateMutationArguments.FromString,
                    response_serializer=common__pb2.PInsertResponses.SerializeToString,
            ),
            'UnlockMutation': grpc.unary_unary_rpc_method_handler(
                    servicer.UnlockMutation,
                    request_deserializer=activity__pb2.UnlockMutationArguments.FromString,
                    response_serializer=common__pb2.PInsertResponses.SerializeToString,
            ),
            'BatchUnlockMutation': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchUnlockMutation,
                    request_deserializer=activity__pb2.BatchUnlockMutationArguments.FromString,
                    response_serializer=common__pb2.PInsertResponses.SerializeToString,
            ),
            'BatchCreateMutationV2': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchCreateMutationV2,
                    request_deserializer=activity__pb2.BatchCreateMutationArguments.FromString,
                    response_serializer=common__pb2.PInsertResponses.SerializeToString,
            ),
            'GetHistoryKoinGrant': grpc.unary_unary_rpc_method_handler(
                    servicer.GetHistoryKoinGrant,
                    request_deserializer=common__pb2.PViewArguments.FromString,
                    response_serializer=common__pb2.PViewResponses.SerializeToString,
            ),
            'GetHistoryKoinAllocation': grpc.unary_unary_rpc_method_handler(
                    servicer.GetHistoryKoinAllocation,
                    request_deserializer=common__pb2.PViewArguments.FromString,
                    response_serializer=common__pb2.PViewResponses.SerializeToString,
            ),
            'GetListPaymentPriority': grpc.unary_unary_rpc_method_handler(
                    servicer.GetListPaymentPriority,
                    request_deserializer=common__pb2.PViewArguments.FromString,
                    response_serializer=common__pb2.PViewResponses.SerializeToString,
            ),
            'CreatePaymentPriority': grpc.unary_unary_rpc_method_handler(
                    servicer.CreatePaymentPriority,
                    request_deserializer=activity__pb2.CreatePaymentPriorityArguments.FromString,
                    response_serializer=common__pb2.PInsertResponses.SerializeToString,
            ),
            'BatchCreatePaymentPriority': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchCreatePaymentPriority,
                    request_deserializer=activity__pb2.BatchCreatePaymentPriorityArguments.FromString,
                    response_serializer=common__pb2.PInsertResponses.SerializeToString,
            ),
            'DeactivePaymentPriority': grpc.unary_unary_rpc_method_handler(
                    servicer.DeactivePaymentPriority,
                    request_deserializer=activity__pb2.DeactivePaymentPriorityArguments.FromString,
                    response_serializer=common__pb2.PInsertResponses.SerializeToString,
            ),
            'BatchDeactivePaymentPriority': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchDeactivePaymentPriority,
                    request_deserializer=activity__pb2.BatchDeactivePaymentPriorityArguments.FromString,
                    response_serializer=common__pb2.PInsertResponses.SerializeToString,
            ),
            'GetDetailUser': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDetailUser,
                    request_deserializer=common__pb2.PViewArguments.FromString,
                    response_serializer=common__pb2.PViewResponses.SerializeToString,
            ),
            'SetUserDetail': grpc.unary_unary_rpc_method_handler(
                    servicer.SetUserDetail,
                    request_deserializer=activity__pb2.SetUserDetailArguments.FromString,
                    response_serializer=common__pb2.PInsertResponses.SerializeToString,
            ),
            'GetListBankDayOff': grpc.unary_unary_rpc_method_handler(
                    servicer.GetListBankDayOff,
                    request_deserializer=common__pb2.PViewArguments.FromString,
                    response_serializer=common__pb2.PViewResponses.SerializeToString,
            ),
            'CreateBankDayOff': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateBankDayOff,
                    request_deserializer=activity__pb2.CreateBankDayOffArguments.FromString,
                    response_serializer=common__pb2.PInsertResponses.SerializeToString,
            ),
            'BatchCreateBankDayOff': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchCreateBankDayOff,
                    request_deserializer=activity__pb2.BatchCreateBankDayOffArguments.FromString,
                    response_serializer=common__pb2.PInsertResponses.SerializeToString,
            ),
            'GetListMutualProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.GetListMutualProduct,
                    request_deserializer=common__pb2.PViewArguments.FromString,
                    response_serializer=common__pb2.PViewResponses.SerializeToString,
            ),
            'CreateMutualProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateMutualProduct,
                    request_deserializer=activity__pb2.CreateMutualProductArguments.FromString,
                    response_serializer=common__pb2.PInsertResponses.SerializeToString,
            ),
            'BatchCreateMutualProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchCreateMutualProduct,
                    request_deserializer=activity__pb2.BatchCreateMutualProductArguments.FromString,
                    response_serializer=common__pb2.PInsertResponses.SerializeToString,
            ),
            'UpdateMutualProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateMutualProduct,
                    request_deserializer=activity__pb2.UpdateMutualProductArguments.FromString,
                    response_serializer=common__pb2.PViewResponses.SerializeToString,
            ),
            'GetListMutualBalance': grpc.unary_unary_rpc_method_handler(
                    servicer.GetListMutualBalance,
                    request_deserializer=common__pb2.PViewArguments.FromString,
                    response_serializer=common__pb2.PViewResponses.SerializeToString,
            ),
            'GetUserMutualBalance': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserMutualBalance,
                    request_deserializer=activity__pb2.GetUserMutualBalanceArguments.FromString,
                    response_serializer=activity__pb2.UserMutualBalanceResponses.SerializeToString,
            ),
            'GetListMutualDraft': grpc.unary_unary_rpc_method_handler(
                    servicer.GetListMutualDraft,
                    request_deserializer=common__pb2.PViewArguments.FromString,
                    response_serializer=common__pb2.PViewResponses.SerializeToString,
            ),
            'GetListMutualDraftDetail': grpc.unary_unary_rpc_method_handler(
                    servicer.GetListMutualDraftDetail,
                    request_deserializer=common__pb2.PViewArguments.FromString,
                    response_serializer=common__pb2.PViewResponses.SerializeToString,
            ),
            'GetListMutualFund': grpc.unary_unary_rpc_method_handler(
                    servicer.GetListMutualFund,
                    request_deserializer=common__pb2.PViewArguments.FromString,
                    response_serializer=common__pb2.PViewResponses.SerializeToString,
            ),
            'GetListMutualFundDetail': grpc.unary_unary_rpc_method_handler(
                    servicer.GetListMutualFundDetail,
                    request_deserializer=common__pb2.PViewArguments.FromString,
                    response_serializer=common__pb2.PViewResponses.SerializeToString,
            ),
            'GetDaySubscription': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDaySubscription,
                    request_deserializer=activity__pb2.GetDaySubscriptionArguments.FromString,
                    response_serializer=common__pb2.PViewResponses.SerializeToString,
            ),
            'GetDayRedemption': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDayRedemption,
                    request_deserializer=activity__pb2.GetDayRedemptionArguments.FromString,
                    response_serializer=common__pb2.PViewResponses.SerializeToString,
            ),
            'SetDayNAV': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDayNAV,
                    request_deserializer=activity__pb2.SetDayNAVArguments.FromString,
                    response_serializer=common__pb2.PViewResponses.SerializeToString,
            ),
            'BatchSetDayNAV': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchSetDayNAV,
                    request_deserializer=activity__pb2.BatchSetDayNAVArguments.FromString,
                    response_serializer=common__pb2.PInsertResponses.SerializeToString,
            ),
            'CancelDayMutualFund': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelDayMutualFund,
                    request_deserializer=activity__pb2.CancelDayMutualFundArguments.FromString,
                    response_serializer=common__pb2.PViewResponses.SerializeToString,
            ),
            'CreateAdHocMutualDraftDetail': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateAdHocMutualDraftDetail,
                    request_deserializer=activity__pb2.CreateMutualDraftDetailAdHocArguments.FromString,
                    response_serializer=common__pb2.PInsertResponses.SerializeToString,
            ),
            'GetListBalanceTransfer': grpc.unary_unary_rpc_method_handler(
                    servicer.GetListBalanceTransfer,
                    request_deserializer=common__pb2.PViewArguments.FromString,
                    response_serializer=common__pb2.PViewResponses.SerializeToString,
            ),
            'GetListBalanceTransferDetail': grpc.unary_unary_rpc_method_handler(
                    servicer.GetListBalanceTransferDetail,
                    request_deserializer=common__pb2.PViewArguments.FromString,
                    response_serializer=common__pb2.PViewResponses.SerializeToString,
            ),
            'CreateBalanceTransfer': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateBalanceTransfer,
                    request_deserializer=activity__pb2.CreateBalanceTransferArguments.FromString,
                    response_serializer=common__pb2.PInsertResponses.SerializeToString,
            ),
            'GetListVirtualAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.GetListVirtualAccount,
                    request_deserializer=common__pb2.PViewArguments.FromString,
                    response_serializer=common__pb2.PViewResponses.SerializeToString,
            ),
            'SetVirtualAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.SetVirtualAccount,
                    request_deserializer=activity__pb2.SetVirtualAccountArguments.FromString,
                    response_serializer=common__pb2.PInsertResponses.SerializeToString,
            ),
            'CreateVirtualAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateVirtualAccount,
                    request_deserializer=activity__pb2.CreateVirtualAccountArguments.FromString,
                    response_serializer=common__pb2.PInsertResponses.SerializeToString,
            ),
            'BatchCreateVirtualAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchCreateVirtualAccount,
                    request_deserializer=activity__pb2.BatchCreateVirtualAccountArguments.FromString,
                    response_serializer=common__pb2.PInsertResponses.SerializeToString,
            ),
            'GetListVirtualAccountGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.GetListVirtualAccountGroup,
                    request_deserializer=common__pb2.PViewArguments.FromString,
                    response_serializer=common__pb2.PViewResponses.SerializeToString,
            ),
            'CreateVirtualAccountGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateVirtualAccountGroup,
                    request_deserializer=activity__pb2.CreateVirtualAccountGroupArguments.FromString,
                    response_serializer=common__pb2.PInsertResponses.SerializeToString,
            ),
            'AssignVirtualAccountGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.AssignVirtualAccountGroup,
                    request_deserializer=activity__pb2.AssignVirtualAccountGroupArguments.FromString,
                    response_serializer=common__pb2.PViewResponses.SerializeToString,
            ),
            'ReleaseBalanceStash': grpc.unary_unary_rpc_method_handler(
                    servicer.ReleaseBalanceStash,
                    request_deserializer=activity__pb2.ReleaseBalanceStashArguments.FromString,
                    response_serializer=activity__pb2.ReleaseBalanceStashResponses.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'packets.Activity', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Activity(object):
    """services

    """

    @staticmethod
    def GetHistoryCashInOut(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/GetHistoryCashInOut',
            common__pb2.PViewArguments.SerializeToString,
            common__pb2.PViewResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDetailCashInOut(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/GetDetailCashInOut',
            common__pb2.PViewArguments.SerializeToString,
            common__pb2.PViewResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateWithdrawal(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/CreateWithdrawal',
            activity__pb2.CreateWithdrawalArguments.SerializeToString,
            common__pb2.PInsertResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateDisbursement(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/CreateDisbursement',
            activity__pb2.CreateDisbursementArguments.SerializeToString,
            common__pb2.PInsertResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateVADeposit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/CreateVADeposit',
            activity__pb2.CreateDepositArguments.SerializeToString,
            common__pb2.PInsertResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateManualDeposit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/CreateManualDeposit',
            activity__pb2.CreateDepositArguments.SerializeToString,
            common__pb2.PInsertResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateIncomingCash(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/CreateIncomingCash',
            activity__pb2.CreateIncomingCashArguments.SerializeToString,
            common__pb2.PInsertResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateCampaignExternalReward(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/CreateCampaignExternalReward',
            activity__pb2.CreateCampaignExternalRewardArguments.SerializeToString,
            common__pb2.PInsertResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateExternalTransfer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/CreateExternalTransfer',
            activity__pb2.CreateExternalTransferArguments.SerializeToString,
            common__pb2.PInsertResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ApproveCashInOut(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/ApproveCashInOut',
            activity__pb2.ApproveCashInOutArguments.SerializeToString,
            common__pb2.PViewResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetHistoryBalance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/GetHistoryBalance',
            activity__pb2.GetHistoryBalanceArguments.SerializeToString,
            common__pb2.PViewResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBalance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/GetBalance',
            activity__pb2.GetBalanceArguments.SerializeToString,
            activity__pb2.BalanceResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetListBalance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/GetListBalance',
            common__pb2.PViewArguments.SerializeToString,
            common__pb2.PViewResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateInitialBalance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/CreateInitialBalance',
            activity__pb2.CreateInitialBalanceArguments.SerializeToString,
            common__pb2.PViewResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetGoldBalance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/SetGoldBalance',
            activity__pb2.SetGoldBalanceArguments.SerializeToString,
            common__pb2.PInsertResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetListBalanceStash(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/GetListBalanceStash',
            common__pb2.PViewArguments.SerializeToString,
            common__pb2.PViewResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateBalanceStash(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/CreateBalanceStash',
            activity__pb2.CreateBalanceStashArguments.SerializeToString,
            common__pb2.PInsertResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BatchCreateBalanceStash(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/BatchCreateBalanceStash',
            activity__pb2.BatchCreateBalanceStashArguments.SerializeToString,
            common__pb2.PInsertResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AggregateBalanceStash(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/AggregateBalanceStash',
            activity__pb2.AggregateBalanceStashArguments.SerializeToString,
            common__pb2.PViewResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetHistoryMutation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/GetHistoryMutation',
            common__pb2.PViewArguments.SerializeToString,
            common__pb2.PViewResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateMutation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/CreateMutation',
            activity__pb2.CreateMutationArguments.SerializeToString,
            common__pb2.PInsertResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateMutationWithDiscount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/CreateMutationWithDiscount',
            activity__pb2.CreateMutationWithDiscountArguments.SerializeToString,
            common__pb2.PInsertResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BatchCreateMutation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/BatchCreateMutation',
            activity__pb2.BatchCreateMutationArguments.SerializeToString,
            common__pb2.PInsertResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UnlockMutation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/UnlockMutation',
            activity__pb2.UnlockMutationArguments.SerializeToString,
            common__pb2.PInsertResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BatchUnlockMutation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/BatchUnlockMutation',
            activity__pb2.BatchUnlockMutationArguments.SerializeToString,
            common__pb2.PInsertResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BatchCreateMutationV2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/BatchCreateMutationV2',
            activity__pb2.BatchCreateMutationArguments.SerializeToString,
            common__pb2.PInsertResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetHistoryKoinGrant(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/GetHistoryKoinGrant',
            common__pb2.PViewArguments.SerializeToString,
            common__pb2.PViewResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetHistoryKoinAllocation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/GetHistoryKoinAllocation',
            common__pb2.PViewArguments.SerializeToString,
            common__pb2.PViewResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetListPaymentPriority(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/GetListPaymentPriority',
            common__pb2.PViewArguments.SerializeToString,
            common__pb2.PViewResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreatePaymentPriority(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/CreatePaymentPriority',
            activity__pb2.CreatePaymentPriorityArguments.SerializeToString,
            common__pb2.PInsertResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BatchCreatePaymentPriority(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/BatchCreatePaymentPriority',
            activity__pb2.BatchCreatePaymentPriorityArguments.SerializeToString,
            common__pb2.PInsertResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeactivePaymentPriority(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/DeactivePaymentPriority',
            activity__pb2.DeactivePaymentPriorityArguments.SerializeToString,
            common__pb2.PInsertResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BatchDeactivePaymentPriority(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/BatchDeactivePaymentPriority',
            activity__pb2.BatchDeactivePaymentPriorityArguments.SerializeToString,
            common__pb2.PInsertResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDetailUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/GetDetailUser',
            common__pb2.PViewArguments.SerializeToString,
            common__pb2.PViewResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetUserDetail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/SetUserDetail',
            activity__pb2.SetUserDetailArguments.SerializeToString,
            common__pb2.PInsertResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetListBankDayOff(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/GetListBankDayOff',
            common__pb2.PViewArguments.SerializeToString,
            common__pb2.PViewResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateBankDayOff(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/CreateBankDayOff',
            activity__pb2.CreateBankDayOffArguments.SerializeToString,
            common__pb2.PInsertResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BatchCreateBankDayOff(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/BatchCreateBankDayOff',
            activity__pb2.BatchCreateBankDayOffArguments.SerializeToString,
            common__pb2.PInsertResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetListMutualProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/GetListMutualProduct',
            common__pb2.PViewArguments.SerializeToString,
            common__pb2.PViewResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateMutualProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/CreateMutualProduct',
            activity__pb2.CreateMutualProductArguments.SerializeToString,
            common__pb2.PInsertResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BatchCreateMutualProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/BatchCreateMutualProduct',
            activity__pb2.BatchCreateMutualProductArguments.SerializeToString,
            common__pb2.PInsertResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateMutualProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/UpdateMutualProduct',
            activity__pb2.UpdateMutualProductArguments.SerializeToString,
            common__pb2.PViewResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetListMutualBalance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/GetListMutualBalance',
            common__pb2.PViewArguments.SerializeToString,
            common__pb2.PViewResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserMutualBalance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/GetUserMutualBalance',
            activity__pb2.GetUserMutualBalanceArguments.SerializeToString,
            activity__pb2.UserMutualBalanceResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetListMutualDraft(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/GetListMutualDraft',
            common__pb2.PViewArguments.SerializeToString,
            common__pb2.PViewResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetListMutualDraftDetail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/GetListMutualDraftDetail',
            common__pb2.PViewArguments.SerializeToString,
            common__pb2.PViewResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetListMutualFund(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/GetListMutualFund',
            common__pb2.PViewArguments.SerializeToString,
            common__pb2.PViewResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetListMutualFundDetail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/GetListMutualFundDetail',
            common__pb2.PViewArguments.SerializeToString,
            common__pb2.PViewResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDaySubscription(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/GetDaySubscription',
            activity__pb2.GetDaySubscriptionArguments.SerializeToString,
            common__pb2.PViewResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDayRedemption(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/GetDayRedemption',
            activity__pb2.GetDayRedemptionArguments.SerializeToString,
            common__pb2.PViewResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetDayNAV(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/SetDayNAV',
            activity__pb2.SetDayNAVArguments.SerializeToString,
            common__pb2.PViewResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BatchSetDayNAV(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/BatchSetDayNAV',
            activity__pb2.BatchSetDayNAVArguments.SerializeToString,
            common__pb2.PInsertResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CancelDayMutualFund(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/CancelDayMutualFund',
            activity__pb2.CancelDayMutualFundArguments.SerializeToString,
            common__pb2.PViewResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateAdHocMutualDraftDetail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/CreateAdHocMutualDraftDetail',
            activity__pb2.CreateMutualDraftDetailAdHocArguments.SerializeToString,
            common__pb2.PInsertResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetListBalanceTransfer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/GetListBalanceTransfer',
            common__pb2.PViewArguments.SerializeToString,
            common__pb2.PViewResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetListBalanceTransferDetail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/GetListBalanceTransferDetail',
            common__pb2.PViewArguments.SerializeToString,
            common__pb2.PViewResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateBalanceTransfer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/CreateBalanceTransfer',
            activity__pb2.CreateBalanceTransferArguments.SerializeToString,
            common__pb2.PInsertResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetListVirtualAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/GetListVirtualAccount',
            common__pb2.PViewArguments.SerializeToString,
            common__pb2.PViewResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetVirtualAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/SetVirtualAccount',
            activity__pb2.SetVirtualAccountArguments.SerializeToString,
            common__pb2.PInsertResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateVirtualAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/CreateVirtualAccount',
            activity__pb2.CreateVirtualAccountArguments.SerializeToString,
            common__pb2.PInsertResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BatchCreateVirtualAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/BatchCreateVirtualAccount',
            activity__pb2.BatchCreateVirtualAccountArguments.SerializeToString,
            common__pb2.PInsertResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetListVirtualAccountGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/GetListVirtualAccountGroup',
            common__pb2.PViewArguments.SerializeToString,
            common__pb2.PViewResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateVirtualAccountGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/CreateVirtualAccountGroup',
            activity__pb2.CreateVirtualAccountGroupArguments.SerializeToString,
            common__pb2.PInsertResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AssignVirtualAccountGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/AssignVirtualAccountGroup',
            activity__pb2.AssignVirtualAccountGroupArguments.SerializeToString,
            common__pb2.PViewResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReleaseBalanceStash(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Activity/ReleaseBalanceStash',
            activity__pb2.ReleaseBalanceStashArguments.SerializeToString,
            activity__pb2.ReleaseBalanceStashResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
