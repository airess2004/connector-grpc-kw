# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import common_pb2 as common__pb2
from . import users_pb2 as users__pb2


class UsersStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RegisterPersonalBulk = channel.unary_unary(
                '/packets.Users/RegisterPersonalBulk',
                request_serializer=users__pb2.ParamRegisterPersonalBulk.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.RegisterSMEBusinessEx = channel.unary_unary(
                '/packets.Users/RegisterSMEBusinessEx',
                request_serializer=users__pb2.RegisterSMEBusinessExArguments.SerializeToString,
                response_deserializer=users__pb2.RegisterSMEBusinessExResponses.FromString,
                )
        self.GetUser = channel.unary_unary(
                '/packets.Users/GetUser',
                request_serializer=users__pb2.ParamGetUser.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.GetUserByEmail = channel.unary_unary(
                '/packets.Users/GetUserByEmail',
                request_serializer=users__pb2.ParamGetUserByEmail.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.ComparePassword = channel.unary_unary(
                '/packets.Users/ComparePassword',
                request_serializer=users__pb2.ParamComparePassword.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.ComparePin = channel.unary_unary(
                '/packets.Users/ComparePin',
                request_serializer=users__pb2.ParamComparePin.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.GetUserDocument = channel.unary_unary(
                '/packets.Users/GetUserDocument',
                request_serializer=users__pb2.ParamGetUserDocuments.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.GetUserDocumentById = channel.unary_unary(
                '/packets.Users/GetUserDocumentById',
                request_serializer=users__pb2.ParamGetUserDocumentById.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.GetUserDocumentByGroupKey = channel.unary_unary(
                '/packets.Users/GetUserDocumentByGroupKey',
                request_serializer=users__pb2.ParamGetUserDocumentByGroupKey.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.GetUserDocumentByGroup = channel.unary_unary(
                '/packets.Users/GetUserDocumentByGroup',
                request_serializer=users__pb2.ParamGetUserDocumentByGroup.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.GetUserDocumentByKey = channel.unary_unary(
                '/packets.Users/GetUserDocumentByKey',
                request_serializer=users__pb2.ParamGetUserDocumentByKey.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.GetUserDocumentByProductValue = channel.unary_unary(
                '/packets.Users/GetUserDocumentByProductValue',
                request_serializer=users__pb2.ParamGetUserDocumentByProductValue.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.CreateUserDocument = channel.unary_unary(
                '/packets.Users/CreateUserDocument',
                request_serializer=users__pb2.ParamCreateUserDocument.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.UpdateUserDocument = channel.unary_unary(
                '/packets.Users/UpdateUserDocument',
                request_serializer=users__pb2.ParamUpdateUserDocument.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.UpdateUserDocumentWithProp = channel.unary_unary(
                '/packets.Users/UpdateUserDocumentWithProp',
                request_serializer=users__pb2.ParamUpdateUserDocument.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.CreateRequiredDocument = channel.unary_unary(
                '/packets.Users/CreateRequiredDocument',
                request_serializer=users__pb2.ParamCreateRequiredDocument.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.GetUserDocumentList = channel.unary_unary(
                '/packets.Users/GetUserDocumentList',
                request_serializer=users__pb2.ParamGetUserDocumentList.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.GetUserProfile = channel.unary_unary(
                '/packets.Users/GetUserProfile',
                request_serializer=users__pb2.ParamGetUserProfile.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.GetUserProfileById = channel.unary_unary(
                '/packets.Users/GetUserProfileById',
                request_serializer=users__pb2.ParamGetUserProfileById.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.GetUserProfileByGroupKey = channel.unary_unary(
                '/packets.Users/GetUserProfileByGroupKey',
                request_serializer=users__pb2.ParamGetUserProfileByGroupKey.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.GetUserProfileByGroup = channel.unary_unary(
                '/packets.Users/GetUserProfileByGroup',
                request_serializer=users__pb2.ParamGetUserProfileByGroup.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.GetUserProfileByKey = channel.unary_unary(
                '/packets.Users/GetUserProfileByKey',
                request_serializer=users__pb2.ParamGetUserProfileByKey.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.CreateUserProfile = channel.unary_unary(
                '/packets.Users/CreateUserProfile',
                request_serializer=users__pb2.ParamCreateUserProfile.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.UpdateUserProfile = channel.unary_unary(
                '/packets.Users/UpdateUserProfile',
                request_serializer=users__pb2.ParamUpdateUserProfile.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.GetUserBusinessProfile = channel.unary_unary(
                '/packets.Users/GetUserBusinessProfile',
                request_serializer=users__pb2.ParamGetUserBusinessProfile.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.GetUserBusinessProfileById = channel.unary_unary(
                '/packets.Users/GetUserBusinessProfileById',
                request_serializer=users__pb2.ParamGetUserBusinessProfileById.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.GetUserBusinessProfileByGroupKey = channel.unary_unary(
                '/packets.Users/GetUserBusinessProfileByGroupKey',
                request_serializer=users__pb2.ParamGetUserBusinessProfileByGroupKey.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.GetUserBusinessProfileByGroup = channel.unary_unary(
                '/packets.Users/GetUserBusinessProfileByGroup',
                request_serializer=users__pb2.ParamGetUserBusinessProfileByGroup.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.GetUserBusinessProfileByKey = channel.unary_unary(
                '/packets.Users/GetUserBusinessProfileByKey',
                request_serializer=users__pb2.ParamGetUserBusinessProfileByKey.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.CreateUserBusinessProfile = channel.unary_unary(
                '/packets.Users/CreateUserBusinessProfile',
                request_serializer=users__pb2.ParamCreateUserBusinessProfile.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.UpdateUserBusinessProfile = channel.unary_unary(
                '/packets.Users/UpdateUserBusinessProfile',
                request_serializer=users__pb2.ParamUpdateUserBusinessProfile.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.GetUserPrimaryBank = channel.unary_unary(
                '/packets.Users/GetUserPrimaryBank',
                request_serializer=users__pb2.ParamGetUserPrimaryBank.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.SubmitUserPrimaryBank = channel.unary_unary(
                '/packets.Users/SubmitUserPrimaryBank',
                request_serializer=users__pb2.ParamSubmitUserPrimaryBank.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.GetUserBanks = channel.unary_unary(
                '/packets.Users/GetUserBanks',
                request_serializer=users__pb2.ParamGetUserBanks.SerializeToString,
                response_deserializer=users__pb2.OutputUserBanks.FromString,
                )
        self.CreateUserBank = channel.unary_unary(
                '/packets.Users/CreateUserBank',
                request_serializer=users__pb2.ParamCreateUserBank.SerializeToString,
                response_deserializer=users__pb2.OutputUserBank.FromString,
                )
        self.GetUserBankByID = channel.unary_unary(
                '/packets.Users/GetUserBankByID',
                request_serializer=users__pb2.GetUserBankByIDArguments.SerializeToString,
                response_deserializer=users__pb2.UserBank.FromString,
                )
        self.GetUserDevice = channel.unary_unary(
                '/packets.Users/GetUserDevice',
                request_serializer=users__pb2.ParamGetUserDevice.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.GetUserDeviceById = channel.unary_unary(
                '/packets.Users/GetUserDeviceById',
                request_serializer=users__pb2.ParamGetUserDeviceById.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.CreateUserDevice = channel.unary_unary(
                '/packets.Users/CreateUserDevice',
                request_serializer=users__pb2.ParamCreateUserDevice.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.UpdateUserDevice = channel.unary_unary(
                '/packets.Users/UpdateUserDevice',
                request_serializer=users__pb2.ParamUpdateUserDevice.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.GetUserBalance = channel.unary_unary(
                '/packets.Users/GetUserBalance',
                request_serializer=users__pb2.ParamGetUserBalance.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.CreateUserBalance = channel.unary_unary(
                '/packets.Users/CreateUserBalance',
                request_serializer=users__pb2.ParamCreateUserBalance.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.UpdateUserBalance = channel.unary_unary(
                '/packets.Users/UpdateUserBalance',
                request_serializer=users__pb2.ParamUpdateUserBalance.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.GetVirtualAccount = channel.unary_unary(
                '/packets.Users/GetVirtualAccount',
                request_serializer=users__pb2.ParamGetVirtualAccount.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.SetVirtualAccount = channel.unary_unary(
                '/packets.Users/SetVirtualAccount',
                request_serializer=users__pb2.ParamSetVirtualAccount.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.GetVirtualAccountById = channel.unary_unary(
                '/packets.Users/GetVirtualAccountById',
                request_serializer=users__pb2.ParamGetVirtualAccountById.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.GetVirtualAccountByNumber = channel.unary_unary(
                '/packets.Users/GetVirtualAccountByNumber',
                request_serializer=users__pb2.ParamGetVirtualAccountByNumber.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.GetVirtualAccountByUserIds = channel.unary_unary(
                '/packets.Users/GetVirtualAccountByUserIds',
                request_serializer=users__pb2.ParamGetVirtualAccountByUserIds.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.CreateVirtualAccounts = channel.unary_unary(
                '/packets.Users/CreateVirtualAccounts',
                request_serializer=users__pb2.ParamCreateVirtualAccounts.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.UpdateVirtualAccounts = channel.unary_unary(
                '/packets.Users/UpdateVirtualAccounts',
                request_serializer=users__pb2.ParamUpdateVirtuaAccounts.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.UpdateVirtualAccountsV2 = channel.unary_unary(
                '/packets.Users/UpdateVirtualAccountsV2',
                request_serializer=users__pb2.ParamUpdateVirtualAccounts.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.GenerateVirtualAccounts = channel.unary_unary(
                '/packets.Users/GenerateVirtualAccounts',
                request_serializer=users__pb2.ParamGenerateVirtualAccounts.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.GetUserActivity = channel.unary_unary(
                '/packets.Users/GetUserActivity',
                request_serializer=users__pb2.ParamGetUserActivity.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.CreateUserActivity = channel.unary_unary(
                '/packets.Users/CreateUserActivity',
                request_serializer=users__pb2.ParamCreateUserActivity.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.AddUserReferralReward = channel.unary_unary(
                '/packets.Users/AddUserReferralReward',
                request_serializer=users__pb2.ParamAddUserReferralReward.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.CheckRequirementProfile = channel.unary_unary(
                '/packets.Users/CheckRequirementProfile',
                request_serializer=users__pb2.ParamCheckRequirementProfile.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.UpdateAccountStatus = channel.unary_unary(
                '/packets.Users/UpdateAccountStatus',
                request_serializer=users__pb2.ParamUpdateAccountStatus.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.UpdateLegalStatus = channel.unary_unary(
                '/packets.Users/UpdateLegalStatus',
                request_serializer=users__pb2.ParamUpdateLegalStatus.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.UpdatePreviousLegalStatus = channel.unary_unary(
                '/packets.Users/UpdatePreviousLegalStatus',
                request_serializer=users__pb2.ParamUpdatePreviousLegalStatus.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.GetUserSibling = channel.unary_unary(
                '/packets.Users/GetUserSibling',
                request_serializer=users__pb2.ParamGetUserSibling.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.GetUserSiblingByID = channel.unary_unary(
                '/packets.Users/GetUserSiblingByID',
                request_serializer=users__pb2.ParamGetUserSiblingByID.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.RegisterFifaParent = channel.unary_unary(
                '/packets.Users/RegisterFifaParent',
                request_serializer=users__pb2.UserAccountFifaParent.SerializeToString,
                response_deserializer=users__pb2.GenerateTokenResponse.FromString,
                )
        self.RegisterFifaChild = channel.unary_unary(
                '/packets.Users/RegisterFifaChild',
                request_serializer=users__pb2.UserAccountFifaChild.SerializeToString,
                response_deserializer=users__pb2.GenerateTokenResponse.FromString,
                )
        self.GetParentIdByChildUserID = channel.unary_unary(
                '/packets.Users/GetParentIdByChildUserID',
                request_serializer=users__pb2.ParamGetParentID.SerializeToString,
                response_deserializer=users__pb2.ParentID.FromString,
                )
        self.GetParentInfoByChildUserID = channel.unary_unary(
                '/packets.Users/GetParentInfoByChildUserID',
                request_serializer=users__pb2.ParamGetParentInfoByChildID.SerializeToString,
                response_deserializer=users__pb2.ParentInfo.FromString,
                )
        self.UserLetterOfAuthority = channel.unary_unary(
                '/packets.Users/UserLetterOfAuthority',
                request_serializer=users__pb2.ParamUserLetterOfAuthority.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.UpdateActivationLink = channel.unary_unary(
                '/packets.Users/UpdateActivationLink',
                request_serializer=users__pb2.ParamUpdateActivationLink.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.GetUserVerificationData = channel.unary_unary(
                '/packets.Users/GetUserVerificationData',
                request_serializer=users__pb2.ParamGetUserVerificationData.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.GetMultipleUser = channel.unary_unary(
                '/packets.Users/GetMultipleUser',
                request_serializer=users__pb2.ParamGetMultipleUser.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.CheckCompanyType = channel.unary_unary(
                '/packets.Users/CheckCompanyType',
                request_serializer=users__pb2.ParamCheck.SerializeToString,
                response_deserializer=users__pb2.OutputCheck.FromString,
                )
        self.CheckConnectBank = channel.unary_unary(
                '/packets.Users/CheckConnectBank',
                request_serializer=users__pb2.ParamCheck.SerializeToString,
                response_deserializer=users__pb2.OutputCheck.FromString,
                )
        self.CheckMaritalStatus = channel.unary_unary(
                '/packets.Users/CheckMaritalStatus',
                request_serializer=users__pb2.ParamCheck.SerializeToString,
                response_deserializer=users__pb2.OutputCheck.FromString,
                )
        self.CheckBusinessDocument = channel.unary_unary(
                '/packets.Users/CheckBusinessDocument',
                request_serializer=users__pb2.ParamCheck.SerializeToString,
                response_deserializer=users__pb2.OutputCheck.FromString,
                )
        self.CheckSpouseDocument = channel.unary_unary(
                '/packets.Users/CheckSpouseDocument',
                request_serializer=users__pb2.ParamCheck.SerializeToString,
                response_deserializer=users__pb2.OutputCheck.FromString,
                )
        self.CheckBankMutation = channel.unary_unary(
                '/packets.Users/CheckBankMutation',
                request_serializer=users__pb2.ParamCheck.SerializeToString,
                response_deserializer=users__pb2.ParamOutputDocumentType.FromString,
                )
        self.CheckNIKExists = channel.unary_unary(
                '/packets.Users/CheckNIKExists',
                request_serializer=users__pb2.ParamCheckNIKExists.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.GetUserByNIK = channel.unary_unary(
                '/packets.Users/GetUserByNIK',
                request_serializer=users__pb2.ParamGetUserByNIK.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.GetSelfieScore = channel.unary_unary(
                '/packets.Users/GetSelfieScore',
                request_serializer=users__pb2.ParamCheck.SerializeToString,
                response_deserializer=users__pb2.OutputCheck.FromString,
                )
        self.DeleteBankMutation = channel.unary_unary(
                '/packets.Users/DeleteBankMutation',
                request_serializer=users__pb2.ParamDeleteUserDocument.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.SetUserRole = channel.unary_unary(
                '/packets.Users/SetUserRole',
                request_serializer=users__pb2.InputUserRole.SerializeToString,
                response_deserializer=users__pb2.OutputUserRole.FromString,
                )
        self.GetPersonalProfile = channel.unary_unary(
                '/packets.Users/GetPersonalProfile',
                request_serializer=users__pb2.ParamGetPersonalProfile.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.GetBusinessProfile = channel.unary_unary(
                '/packets.Users/GetBusinessProfile',
                request_serializer=users__pb2.ParamGetBusinessProfile.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.CreateProductUserReferralCode = channel.unary_unary(
                '/packets.Users/CreateProductUserReferralCode',
                request_serializer=users__pb2.ParamCreateProductUserReferralCode.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.GetBasicProfile = channel.unary_unary(
                '/packets.Users/GetBasicProfile',
                request_serializer=users__pb2.ParamGetProfile.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.SubmitBasicProfile = channel.unary_unary(
                '/packets.Users/SubmitBasicProfile',
                request_serializer=users__pb2.ParamSubmitProfile.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.GetLegalProfile = channel.unary_unary(
                '/packets.Users/GetLegalProfile',
                request_serializer=users__pb2.ParamGetProfile.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.SubmitLegalProfile = channel.unary_unary(
                '/packets.Users/SubmitLegalProfile',
                request_serializer=users__pb2.ParamSubmitProfile.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.GetFinancialProfile = channel.unary_unary(
                '/packets.Users/GetFinancialProfile',
                request_serializer=users__pb2.ParamGetProfile.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.SubmitFinancialProfile = channel.unary_unary(
                '/packets.Users/SubmitFinancialProfile',
                request_serializer=users__pb2.ParamSubmitProfile.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.SubmitAddititonalInformationProfile = channel.unary_unary(
                '/packets.Users/SubmitAddititonalInformationProfile',
                request_serializer=users__pb2.ParamSubmitProfile.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.GetEAVProfile = channel.unary_unary(
                '/packets.Users/GetEAVProfile',
                request_serializer=users__pb2.EAVFilter.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.RequestUpdateProfile = channel.unary_unary(
                '/packets.Users/RequestUpdateProfile',
                request_serializer=users__pb2.ParamRequestUpdateProfile.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.GetVerifiedPersonalProfile = channel.unary_unary(
                '/packets.Users/GetVerifiedPersonalProfile',
                request_serializer=users__pb2.ParamGetProfile.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.GetVerifiedBusinessProfile = channel.unary_unary(
                '/packets.Users/GetVerifiedBusinessProfile',
                request_serializer=users__pb2.ParamGetProfile.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.GetUserConnectBank = channel.unary_unary(
                '/packets.Users/GetUserConnectBank',
                request_serializer=users__pb2.ParamGetUserConnectBank.SerializeToString,
                response_deserializer=users__pb2.OutputUserConnectBank.FromString,
                )
        self.GetUserConnectMutations = channel.unary_unary(
                '/packets.Users/GetUserConnectMutations',
                request_serializer=users__pb2.ParamGetUserConnectMutations.SerializeToString,
                response_deserializer=users__pb2.OutputGetUserConnectMutations.FromString,
                )
        self.CreateBankMutations = channel.unary_unary(
                '/packets.Users/CreateBankMutations',
                request_serializer=users__pb2.ParamCreateBankMutations.SerializeToString,
                response_deserializer=users__pb2.OutputCreateBankMutations.FromString,
                )
        self.RegisterPartner = channel.unary_unary(
                '/packets.Users/RegisterPartner',
                request_serializer=users__pb2.ParamSubmitProfile.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.GetUserAllData = channel.unary_unary(
                '/packets.Users/GetUserAllData',
                request_serializer=users__pb2.ParamGetUser.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.GetUserByVirtualAccount = channel.unary_unary(
                '/packets.Users/GetUserByVirtualAccount',
                request_serializer=users__pb2.ParamGetUserByVirtualAccountsNumber.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.GetTotalUserByLenderType = channel.unary_unary(
                '/packets.Users/GetTotalUserByLenderType',
                request_serializer=users__pb2.ParamGetTotalUserByLenderType.SerializeToString,
                response_deserializer=users__pb2.OutputTotalUserByLenderType.FromString,
                )
        self.UpdateSID = channel.unary_unary(
                '/packets.Users/UpdateSID',
                request_serializer=users__pb2.ParamUpdateSID.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.GetUserLenderType = channel.unary_unary(
                '/packets.Users/GetUserLenderType',
                request_serializer=users__pb2.ParamGetUser.SerializeToString,
                response_deserializer=users__pb2.OutputUserLenderType.FromString,
                )
        self.GetListChildIDByParentID = channel.unary_unary(
                '/packets.Users/GetListChildIDByParentID',
                request_serializer=users__pb2.ParamGetUser.SerializeToString,
                response_deserializer=users__pb2.OutputMultipleUser.FromString,
                )
        self.GetUserRefListByUserReferrer = channel.unary_unary(
                '/packets.Users/GetUserRefListByUserReferrer',
                request_serializer=users__pb2.ParamGetUserRefListByUserReferrer.SerializeToString,
                response_deserializer=users__pb2.OutputGetUserRefListByUserReferrer.FromString,
                )
        self.GetUserRefByUserIdAndProductType = channel.unary_unary(
                '/packets.Users/GetUserRefByUserIdAndProductType',
                request_serializer=users__pb2.ParamGetUserRefByUserAndProduct.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.SearchUserByKeywords = channel.unary_unary(
                '/packets.Users/SearchUserByKeywords',
                request_serializer=users__pb2.ParamSearchUserByKeywords.SerializeToString,
                response_deserializer=users__pb2.OutputSearchUser.FromString,
                )
        self.SearchUser = channel.unary_unary(
                '/packets.Users/SearchUser',
                request_serializer=users__pb2.ParamSearchUser.SerializeToString,
                response_deserializer=users__pb2.OutputSearchUser.FromString,
                )
        self.RegisterSME = channel.unary_unary(
                '/packets.Users/RegisterSME',
                request_serializer=users__pb2.ParamUserAccountSME.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.UpdatePersonalEmergencyContact = channel.unary_unary(
                '/packets.Users/UpdatePersonalEmergencyContact',
                request_serializer=users__pb2.ParamUpdatePersonalEmergencyContact.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.GetUserPromo = channel.unary_unary(
                '/packets.Users/GetUserPromo',
                request_serializer=users__pb2.ParamGetUserPromo.SerializeToString,
                response_deserializer=users__pb2.OutputGetUserPromo.FromString,
                )
        self.GetUserPromoByID = channel.unary_unary(
                '/packets.Users/GetUserPromoByID',
                request_serializer=users__pb2.ParamGetUserPromoByID.SerializeToString,
                response_deserializer=users__pb2.OutputGetUserPromoByID.FromString,
                )
        self.CreateUserPromo = channel.unary_unary(
                '/packets.Users/CreateUserPromo',
                request_serializer=users__pb2.ParamCreateUserPromo.SerializeToString,
                response_deserializer=users__pb2.OutputCreateUserPromo.FromString,
                )
        self.UpdateUserPromo = channel.unary_unary(
                '/packets.Users/UpdateUserPromo',
                request_serializer=users__pb2.ParamUpdateUserPromo.SerializeToString,
                response_deserializer=users__pb2.OutputUpdateUserPromo.FromString,
                )
        self.DeleteUserPromo = channel.unary_unary(
                '/packets.Users/DeleteUserPromo',
                request_serializer=users__pb2.ParamDeleteUserPromo.SerializeToString,
                response_deserializer=users__pb2.OutputDeleteUserPromo.FromString,
                )
        self.GenerateTokenUser = channel.unary_unary(
                '/packets.Users/GenerateTokenUser',
                request_serializer=users__pb2.ParamGenerateTokenUser.SerializeToString,
                response_deserializer=users__pb2.OutputGenerateTokenUser.FromString,
                )
        self.GetUserRegisterMMI = channel.unary_unary(
                '/packets.Users/GetUserRegisterMMI',
                request_serializer=users__pb2.ParamGetUserRegisterMMI.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.UpdateUserRegisterMMI = channel.unary_unary(
                '/packets.Users/UpdateUserRegisterMMI',
                request_serializer=users__pb2.ParamUpdateUserRegisterMMI.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.GetUserByPhoneNumber = channel.unary_unary(
                '/packets.Users/GetUserByPhoneNumber',
                request_serializer=users__pb2.ParamGetUserByPhoneNumber.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.GetUserByPhone = channel.unary_unary(
                '/packets.Users/GetUserByPhone',
                request_serializer=users__pb2.GetUserByPhoneArguments.SerializeToString,
                response_deserializer=users__pb2.GetUserByPhoneResponses.FromString,
                )
        self.GetUserByPhoneBatch = channel.unary_unary(
                '/packets.Users/GetUserByPhoneBatch',
                request_serializer=users__pb2.GetUserByPhoneBatchArguments.SerializeToString,
                response_deserializer=users__pb2.GetUserByPhoneBatchResponses.FromString,
                )
        self.GetUserByCode = channel.unary_unary(
                '/packets.Users/GetUserByCode',
                request_serializer=users__pb2.GetUserByCodeArguments.SerializeToString,
                response_deserializer=users__pb2.BasicUserObject.FromString,
                )
        self.GetUserRefList = channel.unary_unary(
                '/packets.Users/GetUserRefList',
                request_serializer=users__pb2.GetUserRefListArguments.SerializeToString,
                response_deserializer=users__pb2.GetUserRefListResponses.FromString,
                )
        self.GetSuperAppKoinPageReferral = channel.unary_unary(
                '/packets.Users/GetSuperAppKoinPageReferral',
                request_serializer=users__pb2.GetSuperAppKoinPageReferralArguments.SerializeToString,
                response_deserializer=users__pb2.GetSuperAppKoinPageReferralResponses.FromString,
                )
        self.UpdateBankConnectRequestByToken = channel.unary_unary(
                '/packets.Users/UpdateBankConnectRequestByToken',
                request_serializer=users__pb2.UpdateBankConnectRequestByTokenArguments.SerializeToString,
                response_deserializer=users__pb2.UpdateBankConnectRequestByTokenResponse.FromString,
                )
        self.UpdateBankConnectRequestByID = channel.unary_unary(
                '/packets.Users/UpdateBankConnectRequestByID',
                request_serializer=users__pb2.UpdateBankConnectRequestByIDArguments.SerializeToString,
                response_deserializer=users__pb2.UpdateBankConnectRequestByIDResponse.FromString,
                )
        self.GetBankConnectRequestByLoanID = channel.unary_unary(
                '/packets.Users/GetBankConnectRequestByLoanID',
                request_serializer=users__pb2.GetBankConnectRequestByLoanIDArguments.SerializeToString,
                response_deserializer=users__pb2.GetBankConnectRequestByLoanIDResponse.FromString,
                )
        self.GetRequiredDocumentList = channel.unary_unary(
                '/packets.Users/GetRequiredDocumentList',
                request_serializer=users__pb2.GetRequiredDocumentListArguments.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.GetUserVendorListByVendorUUID = channel.unary_unary(
                '/packets.Users/GetUserVendorListByVendorUUID',
                request_serializer=users__pb2.GetUserVendorListByVendorUUIDArguments.SerializeToString,
                response_deserializer=users__pb2.GetUserVendorListByVendorUUIDResponses.FromString,
                )
        self.CheckUserVendor = channel.unary_unary(
                '/packets.Users/CheckUserVendor',
                request_serializer=users__pb2.CheckUserVendorArguments.SerializeToString,
                response_deserializer=users__pb2.CheckUserVendorResponses.FromString,
                )
        self.AssignUserToVendor = channel.unary_unary(
                '/packets.Users/AssignUserToVendor',
                request_serializer=users__pb2.AssignUserToVendorArguments.SerializeToString,
                response_deserializer=users__pb2.AssignUserToVendorResponses.FromString,
                )
        self.GetUserList = channel.unary_unary(
                '/packets.Users/GetUserList',
                request_serializer=common__pb2.PViewArguments.SerializeToString,
                response_deserializer=common__pb2.PViewResponses.FromString,
                )
        self.SigningBucketURL = channel.unary_unary(
                '/packets.Users/SigningBucketURL',
                request_serializer=users__pb2.SigningBucketURLArguments.SerializeToString,
                response_deserializer=users__pb2.SigningBucketURLResponses.FromString,
                )
        self.CreateUser = channel.unary_unary(
                '/packets.Users/CreateUser',
                request_serializer=users__pb2.CreateUserArguments.SerializeToString,
                response_deserializer=users__pb2.CreateUserResponse.FromString,
                )
        self.UpdateUserFullName = channel.unary_unary(
                '/packets.Users/UpdateUserFullName',
                request_serializer=users__pb2.UpdateUserFullNameArguments.SerializeToString,
                response_deserializer=users__pb2.UpdateUserFullNameResponse.FromString,
                )
        self.GetListUserFilteredByEmail = channel.unary_unary(
                '/packets.Users/GetListUserFilteredByEmail',
                request_serializer=users__pb2.UserFilteredByEmailArguments.SerializeToString,
                response_deserializer=users__pb2.UserFilteredByEmailResponse.FromString,
                )
        self.GetUserSuspicious = channel.unary_unary(
                '/packets.Users/GetUserSuspicious',
                request_serializer=users__pb2.GetUserSuspiciousArguments.SerializeToString,
                response_deserializer=users__pb2.GetUserSuspiciousResponses.FromString,
                )
        self.SetUserSuspicious = channel.unary_unary(
                '/packets.Users/SetUserSuspicious',
                request_serializer=users__pb2.SetUserSuspiciousArguments.SerializeToString,
                response_deserializer=users__pb2.SetUserSuspiciousResponses.FromString,
                )
        self.GetUnsyncedUsers = channel.unary_unary(
                '/packets.Users/GetUnsyncedUsers',
                request_serializer=users__pb2.GetUnsyncedUserArguments.SerializeToString,
                response_deserializer=users__pb2.UnsyncedUserResponses.FromString,
                )
        self.UpdateSyncUsers = channel.unary_unary(
                '/packets.Users/UpdateSyncUsers',
                request_serializer=users__pb2.UpdateSyncUsersArguments.SerializeToString,
                response_deserializer=users__pb2.SyncUsersResponses.FromString,
                )
        self.RetrieveMultipleUsersByUserIDs = channel.unary_unary(
                '/packets.Users/RetrieveMultipleUsersByUserIDs',
                request_serializer=users__pb2.ParamGetUsersByUserIDs.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.CheckNIK = channel.unary_unary(
                '/packets.Users/CheckNIK',
                request_serializer=users__pb2.ParamCheckNIK.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.UpdateFreezeAccountStatus = channel.unary_unary(
                '/packets.Users/UpdateFreezeAccountStatus',
                request_serializer=users__pb2.ParamUpdateFreezeAccountStatus.SerializeToString,
                response_deserializer=users__pb2.OutputUserAccount.FromString,
                )
        self.UpdateBulkFreezeAccountStatus = channel.unary_unary(
                '/packets.Users/UpdateBulkFreezeAccountStatus',
                request_serializer=users__pb2.ParamUpdateBulkFreezeAccountStatus.SerializeToString,
                response_deserializer=users__pb2.OutputBulkFreezeAccount.FromString,
                )
        self.GetUserMark = channel.unary_unary(
                '/packets.Users/GetUserMark',
                request_serializer=users__pb2.GetUserMarkArguments.SerializeToString,
                response_deserializer=users__pb2.GetUserMarkResponses.FromString,
                )


class UsersServicer(object):
    """Missing associated documentation comment in .proto file."""

    def RegisterPersonalBulk(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterSMEBusinessEx(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserByEmail(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ComparePassword(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ComparePin(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserDocument(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserDocumentById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserDocumentByGroupKey(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserDocumentByGroup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserDocumentByKey(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserDocumentByProductValue(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateUserDocument(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateUserDocument(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateUserDocumentWithProp(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateRequiredDocument(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserDocumentList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserProfile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserProfileById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserProfileByGroupKey(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserProfileByGroup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserProfileByKey(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateUserProfile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateUserProfile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserBusinessProfile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserBusinessProfileById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserBusinessProfileByGroupKey(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserBusinessProfileByGroup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserBusinessProfileByKey(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateUserBusinessProfile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateUserBusinessProfile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserPrimaryBank(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubmitUserPrimaryBank(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserBanks(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateUserBank(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserBankByID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserDevice(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserDeviceById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateUserDevice(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateUserDevice(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserBalance(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateUserBalance(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateUserBalance(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVirtualAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetVirtualAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVirtualAccountById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVirtualAccountByNumber(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVirtualAccountByUserIds(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateVirtualAccounts(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateVirtualAccounts(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateVirtualAccountsV2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GenerateVirtualAccounts(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserActivity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateUserActivity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddUserReferralReward(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckRequirementProfile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateAccountStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateLegalStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdatePreviousLegalStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserSibling(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserSiblingByID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterFifaParent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterFifaChild(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetParentIdByChildUserID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetParentInfoByChildUserID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UserLetterOfAuthority(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateActivationLink(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserVerificationData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMultipleUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckCompanyType(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckConnectBank(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckMaritalStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckBusinessDocument(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckSpouseDocument(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckBankMutation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckNIKExists(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserByNIK(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSelfieScore(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteBankMutation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetUserRole(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPersonalProfile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBusinessProfile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateProductUserReferralCode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBasicProfile(self, request, context):
        """#region approval
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubmitBasicProfile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLegalProfile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubmitLegalProfile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFinancialProfile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubmitFinancialProfile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubmitAddititonalInformationProfile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetEAVProfile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RequestUpdateProfile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVerifiedPersonalProfile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVerifiedBusinessProfile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserConnectBank(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserConnectMutations(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateBankMutations(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterPartner(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserAllData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserByVirtualAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTotalUserByLenderType(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateSID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserLenderType(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetListChildIDByParentID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserRefListByUserReferrer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserRefByUserIdAndProductType(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchUserByKeywords(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterSME(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdatePersonalEmergencyContact(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserPromo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserPromoByID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateUserPromo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateUserPromo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteUserPromo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GenerateTokenUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserRegisterMMI(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateUserRegisterMMI(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserByPhoneNumber(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserByPhone(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserByPhoneBatch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserByCode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserRefList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSuperAppKoinPageReferral(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateBankConnectRequestByToken(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateBankConnectRequestByID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBankConnectRequestByLoanID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRequiredDocumentList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserVendorListByVendorUUID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckUserVendor(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AssignUserToVendor(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SigningBucketURL(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateUserFullName(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetListUserFilteredByEmail(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserSuspicious(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetUserSuspicious(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUnsyncedUsers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateSyncUsers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RetrieveMultipleUsersByUserIDs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckNIK(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateFreezeAccountStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateBulkFreezeAccountStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserMark(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UsersServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RegisterPersonalBulk': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterPersonalBulk,
                    request_deserializer=users__pb2.ParamRegisterPersonalBulk.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'RegisterSMEBusinessEx': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterSMEBusinessEx,
                    request_deserializer=users__pb2.RegisterSMEBusinessExArguments.FromString,
                    response_serializer=users__pb2.RegisterSMEBusinessExResponses.SerializeToString,
            ),
            'GetUser': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUser,
                    request_deserializer=users__pb2.ParamGetUser.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'GetUserByEmail': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserByEmail,
                    request_deserializer=users__pb2.ParamGetUserByEmail.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'ComparePassword': grpc.unary_unary_rpc_method_handler(
                    servicer.ComparePassword,
                    request_deserializer=users__pb2.ParamComparePassword.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'ComparePin': grpc.unary_unary_rpc_method_handler(
                    servicer.ComparePin,
                    request_deserializer=users__pb2.ParamComparePin.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'GetUserDocument': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserDocument,
                    request_deserializer=users__pb2.ParamGetUserDocuments.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'GetUserDocumentById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserDocumentById,
                    request_deserializer=users__pb2.ParamGetUserDocumentById.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'GetUserDocumentByGroupKey': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserDocumentByGroupKey,
                    request_deserializer=users__pb2.ParamGetUserDocumentByGroupKey.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'GetUserDocumentByGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserDocumentByGroup,
                    request_deserializer=users__pb2.ParamGetUserDocumentByGroup.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'GetUserDocumentByKey': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserDocumentByKey,
                    request_deserializer=users__pb2.ParamGetUserDocumentByKey.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'GetUserDocumentByProductValue': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserDocumentByProductValue,
                    request_deserializer=users__pb2.ParamGetUserDocumentByProductValue.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'CreateUserDocument': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateUserDocument,
                    request_deserializer=users__pb2.ParamCreateUserDocument.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'UpdateUserDocument': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateUserDocument,
                    request_deserializer=users__pb2.ParamUpdateUserDocument.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'UpdateUserDocumentWithProp': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateUserDocumentWithProp,
                    request_deserializer=users__pb2.ParamUpdateUserDocument.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'CreateRequiredDocument': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateRequiredDocument,
                    request_deserializer=users__pb2.ParamCreateRequiredDocument.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'GetUserDocumentList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserDocumentList,
                    request_deserializer=users__pb2.ParamGetUserDocumentList.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'GetUserProfile': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserProfile,
                    request_deserializer=users__pb2.ParamGetUserProfile.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'GetUserProfileById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserProfileById,
                    request_deserializer=users__pb2.ParamGetUserProfileById.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'GetUserProfileByGroupKey': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserProfileByGroupKey,
                    request_deserializer=users__pb2.ParamGetUserProfileByGroupKey.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'GetUserProfileByGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserProfileByGroup,
                    request_deserializer=users__pb2.ParamGetUserProfileByGroup.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'GetUserProfileByKey': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserProfileByKey,
                    request_deserializer=users__pb2.ParamGetUserProfileByKey.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'CreateUserProfile': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateUserProfile,
                    request_deserializer=users__pb2.ParamCreateUserProfile.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'UpdateUserProfile': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateUserProfile,
                    request_deserializer=users__pb2.ParamUpdateUserProfile.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'GetUserBusinessProfile': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserBusinessProfile,
                    request_deserializer=users__pb2.ParamGetUserBusinessProfile.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'GetUserBusinessProfileById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserBusinessProfileById,
                    request_deserializer=users__pb2.ParamGetUserBusinessProfileById.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'GetUserBusinessProfileByGroupKey': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserBusinessProfileByGroupKey,
                    request_deserializer=users__pb2.ParamGetUserBusinessProfileByGroupKey.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'GetUserBusinessProfileByGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserBusinessProfileByGroup,
                    request_deserializer=users__pb2.ParamGetUserBusinessProfileByGroup.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'GetUserBusinessProfileByKey': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserBusinessProfileByKey,
                    request_deserializer=users__pb2.ParamGetUserBusinessProfileByKey.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'CreateUserBusinessProfile': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateUserBusinessProfile,
                    request_deserializer=users__pb2.ParamCreateUserBusinessProfile.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'UpdateUserBusinessProfile': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateUserBusinessProfile,
                    request_deserializer=users__pb2.ParamUpdateUserBusinessProfile.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'GetUserPrimaryBank': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserPrimaryBank,
                    request_deserializer=users__pb2.ParamGetUserPrimaryBank.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'SubmitUserPrimaryBank': grpc.unary_unary_rpc_method_handler(
                    servicer.SubmitUserPrimaryBank,
                    request_deserializer=users__pb2.ParamSubmitUserPrimaryBank.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'GetUserBanks': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserBanks,
                    request_deserializer=users__pb2.ParamGetUserBanks.FromString,
                    response_serializer=users__pb2.OutputUserBanks.SerializeToString,
            ),
            'CreateUserBank': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateUserBank,
                    request_deserializer=users__pb2.ParamCreateUserBank.FromString,
                    response_serializer=users__pb2.OutputUserBank.SerializeToString,
            ),
            'GetUserBankByID': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserBankByID,
                    request_deserializer=users__pb2.GetUserBankByIDArguments.FromString,
                    response_serializer=users__pb2.UserBank.SerializeToString,
            ),
            'GetUserDevice': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserDevice,
                    request_deserializer=users__pb2.ParamGetUserDevice.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'GetUserDeviceById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserDeviceById,
                    request_deserializer=users__pb2.ParamGetUserDeviceById.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'CreateUserDevice': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateUserDevice,
                    request_deserializer=users__pb2.ParamCreateUserDevice.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'UpdateUserDevice': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateUserDevice,
                    request_deserializer=users__pb2.ParamUpdateUserDevice.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'GetUserBalance': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserBalance,
                    request_deserializer=users__pb2.ParamGetUserBalance.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'CreateUserBalance': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateUserBalance,
                    request_deserializer=users__pb2.ParamCreateUserBalance.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'UpdateUserBalance': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateUserBalance,
                    request_deserializer=users__pb2.ParamUpdateUserBalance.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'GetVirtualAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVirtualAccount,
                    request_deserializer=users__pb2.ParamGetVirtualAccount.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'SetVirtualAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.SetVirtualAccount,
                    request_deserializer=users__pb2.ParamSetVirtualAccount.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'GetVirtualAccountById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVirtualAccountById,
                    request_deserializer=users__pb2.ParamGetVirtualAccountById.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'GetVirtualAccountByNumber': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVirtualAccountByNumber,
                    request_deserializer=users__pb2.ParamGetVirtualAccountByNumber.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'GetVirtualAccountByUserIds': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVirtualAccountByUserIds,
                    request_deserializer=users__pb2.ParamGetVirtualAccountByUserIds.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'CreateVirtualAccounts': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateVirtualAccounts,
                    request_deserializer=users__pb2.ParamCreateVirtualAccounts.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'UpdateVirtualAccounts': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateVirtualAccounts,
                    request_deserializer=users__pb2.ParamUpdateVirtuaAccounts.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'UpdateVirtualAccountsV2': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateVirtualAccountsV2,
                    request_deserializer=users__pb2.ParamUpdateVirtualAccounts.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'GenerateVirtualAccounts': grpc.unary_unary_rpc_method_handler(
                    servicer.GenerateVirtualAccounts,
                    request_deserializer=users__pb2.ParamGenerateVirtualAccounts.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'GetUserActivity': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserActivity,
                    request_deserializer=users__pb2.ParamGetUserActivity.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'CreateUserActivity': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateUserActivity,
                    request_deserializer=users__pb2.ParamCreateUserActivity.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'AddUserReferralReward': grpc.unary_unary_rpc_method_handler(
                    servicer.AddUserReferralReward,
                    request_deserializer=users__pb2.ParamAddUserReferralReward.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'CheckRequirementProfile': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckRequirementProfile,
                    request_deserializer=users__pb2.ParamCheckRequirementProfile.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'UpdateAccountStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateAccountStatus,
                    request_deserializer=users__pb2.ParamUpdateAccountStatus.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'UpdateLegalStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateLegalStatus,
                    request_deserializer=users__pb2.ParamUpdateLegalStatus.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'UpdatePreviousLegalStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdatePreviousLegalStatus,
                    request_deserializer=users__pb2.ParamUpdatePreviousLegalStatus.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'GetUserSibling': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserSibling,
                    request_deserializer=users__pb2.ParamGetUserSibling.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'GetUserSiblingByID': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserSiblingByID,
                    request_deserializer=users__pb2.ParamGetUserSiblingByID.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'RegisterFifaParent': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterFifaParent,
                    request_deserializer=users__pb2.UserAccountFifaParent.FromString,
                    response_serializer=users__pb2.GenerateTokenResponse.SerializeToString,
            ),
            'RegisterFifaChild': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterFifaChild,
                    request_deserializer=users__pb2.UserAccountFifaChild.FromString,
                    response_serializer=users__pb2.GenerateTokenResponse.SerializeToString,
            ),
            'GetParentIdByChildUserID': grpc.unary_unary_rpc_method_handler(
                    servicer.GetParentIdByChildUserID,
                    request_deserializer=users__pb2.ParamGetParentID.FromString,
                    response_serializer=users__pb2.ParentID.SerializeToString,
            ),
            'GetParentInfoByChildUserID': grpc.unary_unary_rpc_method_handler(
                    servicer.GetParentInfoByChildUserID,
                    request_deserializer=users__pb2.ParamGetParentInfoByChildID.FromString,
                    response_serializer=users__pb2.ParentInfo.SerializeToString,
            ),
            'UserLetterOfAuthority': grpc.unary_unary_rpc_method_handler(
                    servicer.UserLetterOfAuthority,
                    request_deserializer=users__pb2.ParamUserLetterOfAuthority.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'UpdateActivationLink': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateActivationLink,
                    request_deserializer=users__pb2.ParamUpdateActivationLink.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'GetUserVerificationData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserVerificationData,
                    request_deserializer=users__pb2.ParamGetUserVerificationData.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'GetMultipleUser': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMultipleUser,
                    request_deserializer=users__pb2.ParamGetMultipleUser.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'CheckCompanyType': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckCompanyType,
                    request_deserializer=users__pb2.ParamCheck.FromString,
                    response_serializer=users__pb2.OutputCheck.SerializeToString,
            ),
            'CheckConnectBank': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckConnectBank,
                    request_deserializer=users__pb2.ParamCheck.FromString,
                    response_serializer=users__pb2.OutputCheck.SerializeToString,
            ),
            'CheckMaritalStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckMaritalStatus,
                    request_deserializer=users__pb2.ParamCheck.FromString,
                    response_serializer=users__pb2.OutputCheck.SerializeToString,
            ),
            'CheckBusinessDocument': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckBusinessDocument,
                    request_deserializer=users__pb2.ParamCheck.FromString,
                    response_serializer=users__pb2.OutputCheck.SerializeToString,
            ),
            'CheckSpouseDocument': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckSpouseDocument,
                    request_deserializer=users__pb2.ParamCheck.FromString,
                    response_serializer=users__pb2.OutputCheck.SerializeToString,
            ),
            'CheckBankMutation': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckBankMutation,
                    request_deserializer=users__pb2.ParamCheck.FromString,
                    response_serializer=users__pb2.ParamOutputDocumentType.SerializeToString,
            ),
            'CheckNIKExists': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckNIKExists,
                    request_deserializer=users__pb2.ParamCheckNIKExists.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'GetUserByNIK': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserByNIK,
                    request_deserializer=users__pb2.ParamGetUserByNIK.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'GetSelfieScore': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSelfieScore,
                    request_deserializer=users__pb2.ParamCheck.FromString,
                    response_serializer=users__pb2.OutputCheck.SerializeToString,
            ),
            'DeleteBankMutation': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteBankMutation,
                    request_deserializer=users__pb2.ParamDeleteUserDocument.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'SetUserRole': grpc.unary_unary_rpc_method_handler(
                    servicer.SetUserRole,
                    request_deserializer=users__pb2.InputUserRole.FromString,
                    response_serializer=users__pb2.OutputUserRole.SerializeToString,
            ),
            'GetPersonalProfile': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPersonalProfile,
                    request_deserializer=users__pb2.ParamGetPersonalProfile.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'GetBusinessProfile': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBusinessProfile,
                    request_deserializer=users__pb2.ParamGetBusinessProfile.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'CreateProductUserReferralCode': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateProductUserReferralCode,
                    request_deserializer=users__pb2.ParamCreateProductUserReferralCode.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'GetBasicProfile': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBasicProfile,
                    request_deserializer=users__pb2.ParamGetProfile.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'SubmitBasicProfile': grpc.unary_unary_rpc_method_handler(
                    servicer.SubmitBasicProfile,
                    request_deserializer=users__pb2.ParamSubmitProfile.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'GetLegalProfile': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLegalProfile,
                    request_deserializer=users__pb2.ParamGetProfile.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'SubmitLegalProfile': grpc.unary_unary_rpc_method_handler(
                    servicer.SubmitLegalProfile,
                    request_deserializer=users__pb2.ParamSubmitProfile.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'GetFinancialProfile': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFinancialProfile,
                    request_deserializer=users__pb2.ParamGetProfile.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'SubmitFinancialProfile': grpc.unary_unary_rpc_method_handler(
                    servicer.SubmitFinancialProfile,
                    request_deserializer=users__pb2.ParamSubmitProfile.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'SubmitAddititonalInformationProfile': grpc.unary_unary_rpc_method_handler(
                    servicer.SubmitAddititonalInformationProfile,
                    request_deserializer=users__pb2.ParamSubmitProfile.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'GetEAVProfile': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEAVProfile,
                    request_deserializer=users__pb2.EAVFilter.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'RequestUpdateProfile': grpc.unary_unary_rpc_method_handler(
                    servicer.RequestUpdateProfile,
                    request_deserializer=users__pb2.ParamRequestUpdateProfile.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'GetVerifiedPersonalProfile': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVerifiedPersonalProfile,
                    request_deserializer=users__pb2.ParamGetProfile.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'GetVerifiedBusinessProfile': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVerifiedBusinessProfile,
                    request_deserializer=users__pb2.ParamGetProfile.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'GetUserConnectBank': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserConnectBank,
                    request_deserializer=users__pb2.ParamGetUserConnectBank.FromString,
                    response_serializer=users__pb2.OutputUserConnectBank.SerializeToString,
            ),
            'GetUserConnectMutations': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserConnectMutations,
                    request_deserializer=users__pb2.ParamGetUserConnectMutations.FromString,
                    response_serializer=users__pb2.OutputGetUserConnectMutations.SerializeToString,
            ),
            'CreateBankMutations': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateBankMutations,
                    request_deserializer=users__pb2.ParamCreateBankMutations.FromString,
                    response_serializer=users__pb2.OutputCreateBankMutations.SerializeToString,
            ),
            'RegisterPartner': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterPartner,
                    request_deserializer=users__pb2.ParamSubmitProfile.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'GetUserAllData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserAllData,
                    request_deserializer=users__pb2.ParamGetUser.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'GetUserByVirtualAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserByVirtualAccount,
                    request_deserializer=users__pb2.ParamGetUserByVirtualAccountsNumber.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'GetTotalUserByLenderType': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTotalUserByLenderType,
                    request_deserializer=users__pb2.ParamGetTotalUserByLenderType.FromString,
                    response_serializer=users__pb2.OutputTotalUserByLenderType.SerializeToString,
            ),
            'UpdateSID': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateSID,
                    request_deserializer=users__pb2.ParamUpdateSID.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'GetUserLenderType': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserLenderType,
                    request_deserializer=users__pb2.ParamGetUser.FromString,
                    response_serializer=users__pb2.OutputUserLenderType.SerializeToString,
            ),
            'GetListChildIDByParentID': grpc.unary_unary_rpc_method_handler(
                    servicer.GetListChildIDByParentID,
                    request_deserializer=users__pb2.ParamGetUser.FromString,
                    response_serializer=users__pb2.OutputMultipleUser.SerializeToString,
            ),
            'GetUserRefListByUserReferrer': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserRefListByUserReferrer,
                    request_deserializer=users__pb2.ParamGetUserRefListByUserReferrer.FromString,
                    response_serializer=users__pb2.OutputGetUserRefListByUserReferrer.SerializeToString,
            ),
            'GetUserRefByUserIdAndProductType': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserRefByUserIdAndProductType,
                    request_deserializer=users__pb2.ParamGetUserRefByUserAndProduct.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'SearchUserByKeywords': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchUserByKeywords,
                    request_deserializer=users__pb2.ParamSearchUserByKeywords.FromString,
                    response_serializer=users__pb2.OutputSearchUser.SerializeToString,
            ),
            'SearchUser': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchUser,
                    request_deserializer=users__pb2.ParamSearchUser.FromString,
                    response_serializer=users__pb2.OutputSearchUser.SerializeToString,
            ),
            'RegisterSME': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterSME,
                    request_deserializer=users__pb2.ParamUserAccountSME.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'UpdatePersonalEmergencyContact': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdatePersonalEmergencyContact,
                    request_deserializer=users__pb2.ParamUpdatePersonalEmergencyContact.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'GetUserPromo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserPromo,
                    request_deserializer=users__pb2.ParamGetUserPromo.FromString,
                    response_serializer=users__pb2.OutputGetUserPromo.SerializeToString,
            ),
            'GetUserPromoByID': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserPromoByID,
                    request_deserializer=users__pb2.ParamGetUserPromoByID.FromString,
                    response_serializer=users__pb2.OutputGetUserPromoByID.SerializeToString,
            ),
            'CreateUserPromo': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateUserPromo,
                    request_deserializer=users__pb2.ParamCreateUserPromo.FromString,
                    response_serializer=users__pb2.OutputCreateUserPromo.SerializeToString,
            ),
            'UpdateUserPromo': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateUserPromo,
                    request_deserializer=users__pb2.ParamUpdateUserPromo.FromString,
                    response_serializer=users__pb2.OutputUpdateUserPromo.SerializeToString,
            ),
            'DeleteUserPromo': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteUserPromo,
                    request_deserializer=users__pb2.ParamDeleteUserPromo.FromString,
                    response_serializer=users__pb2.OutputDeleteUserPromo.SerializeToString,
            ),
            'GenerateTokenUser': grpc.unary_unary_rpc_method_handler(
                    servicer.GenerateTokenUser,
                    request_deserializer=users__pb2.ParamGenerateTokenUser.FromString,
                    response_serializer=users__pb2.OutputGenerateTokenUser.SerializeToString,
            ),
            'GetUserRegisterMMI': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserRegisterMMI,
                    request_deserializer=users__pb2.ParamGetUserRegisterMMI.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'UpdateUserRegisterMMI': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateUserRegisterMMI,
                    request_deserializer=users__pb2.ParamUpdateUserRegisterMMI.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'GetUserByPhoneNumber': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserByPhoneNumber,
                    request_deserializer=users__pb2.ParamGetUserByPhoneNumber.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'GetUserByPhone': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserByPhone,
                    request_deserializer=users__pb2.GetUserByPhoneArguments.FromString,
                    response_serializer=users__pb2.GetUserByPhoneResponses.SerializeToString,
            ),
            'GetUserByPhoneBatch': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserByPhoneBatch,
                    request_deserializer=users__pb2.GetUserByPhoneBatchArguments.FromString,
                    response_serializer=users__pb2.GetUserByPhoneBatchResponses.SerializeToString,
            ),
            'GetUserByCode': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserByCode,
                    request_deserializer=users__pb2.GetUserByCodeArguments.FromString,
                    response_serializer=users__pb2.BasicUserObject.SerializeToString,
            ),
            'GetUserRefList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserRefList,
                    request_deserializer=users__pb2.GetUserRefListArguments.FromString,
                    response_serializer=users__pb2.GetUserRefListResponses.SerializeToString,
            ),
            'GetSuperAppKoinPageReferral': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSuperAppKoinPageReferral,
                    request_deserializer=users__pb2.GetSuperAppKoinPageReferralArguments.FromString,
                    response_serializer=users__pb2.GetSuperAppKoinPageReferralResponses.SerializeToString,
            ),
            'UpdateBankConnectRequestByToken': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateBankConnectRequestByToken,
                    request_deserializer=users__pb2.UpdateBankConnectRequestByTokenArguments.FromString,
                    response_serializer=users__pb2.UpdateBankConnectRequestByTokenResponse.SerializeToString,
            ),
            'UpdateBankConnectRequestByID': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateBankConnectRequestByID,
                    request_deserializer=users__pb2.UpdateBankConnectRequestByIDArguments.FromString,
                    response_serializer=users__pb2.UpdateBankConnectRequestByIDResponse.SerializeToString,
            ),
            'GetBankConnectRequestByLoanID': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBankConnectRequestByLoanID,
                    request_deserializer=users__pb2.GetBankConnectRequestByLoanIDArguments.FromString,
                    response_serializer=users__pb2.GetBankConnectRequestByLoanIDResponse.SerializeToString,
            ),
            'GetRequiredDocumentList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRequiredDocumentList,
                    request_deserializer=users__pb2.GetRequiredDocumentListArguments.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'GetUserVendorListByVendorUUID': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserVendorListByVendorUUID,
                    request_deserializer=users__pb2.GetUserVendorListByVendorUUIDArguments.FromString,
                    response_serializer=users__pb2.GetUserVendorListByVendorUUIDResponses.SerializeToString,
            ),
            'CheckUserVendor': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckUserVendor,
                    request_deserializer=users__pb2.CheckUserVendorArguments.FromString,
                    response_serializer=users__pb2.CheckUserVendorResponses.SerializeToString,
            ),
            'AssignUserToVendor': grpc.unary_unary_rpc_method_handler(
                    servicer.AssignUserToVendor,
                    request_deserializer=users__pb2.AssignUserToVendorArguments.FromString,
                    response_serializer=users__pb2.AssignUserToVendorResponses.SerializeToString,
            ),
            'GetUserList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserList,
                    request_deserializer=common__pb2.PViewArguments.FromString,
                    response_serializer=common__pb2.PViewResponses.SerializeToString,
            ),
            'SigningBucketURL': grpc.unary_unary_rpc_method_handler(
                    servicer.SigningBucketURL,
                    request_deserializer=users__pb2.SigningBucketURLArguments.FromString,
                    response_serializer=users__pb2.SigningBucketURLResponses.SerializeToString,
            ),
            'CreateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateUser,
                    request_deserializer=users__pb2.CreateUserArguments.FromString,
                    response_serializer=users__pb2.CreateUserResponse.SerializeToString,
            ),
            'UpdateUserFullName': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateUserFullName,
                    request_deserializer=users__pb2.UpdateUserFullNameArguments.FromString,
                    response_serializer=users__pb2.UpdateUserFullNameResponse.SerializeToString,
            ),
            'GetListUserFilteredByEmail': grpc.unary_unary_rpc_method_handler(
                    servicer.GetListUserFilteredByEmail,
                    request_deserializer=users__pb2.UserFilteredByEmailArguments.FromString,
                    response_serializer=users__pb2.UserFilteredByEmailResponse.SerializeToString,
            ),
            'GetUserSuspicious': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserSuspicious,
                    request_deserializer=users__pb2.GetUserSuspiciousArguments.FromString,
                    response_serializer=users__pb2.GetUserSuspiciousResponses.SerializeToString,
            ),
            'SetUserSuspicious': grpc.unary_unary_rpc_method_handler(
                    servicer.SetUserSuspicious,
                    request_deserializer=users__pb2.SetUserSuspiciousArguments.FromString,
                    response_serializer=users__pb2.SetUserSuspiciousResponses.SerializeToString,
            ),
            'GetUnsyncedUsers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUnsyncedUsers,
                    request_deserializer=users__pb2.GetUnsyncedUserArguments.FromString,
                    response_serializer=users__pb2.UnsyncedUserResponses.SerializeToString,
            ),
            'UpdateSyncUsers': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateSyncUsers,
                    request_deserializer=users__pb2.UpdateSyncUsersArguments.FromString,
                    response_serializer=users__pb2.SyncUsersResponses.SerializeToString,
            ),
            'RetrieveMultipleUsersByUserIDs': grpc.unary_unary_rpc_method_handler(
                    servicer.RetrieveMultipleUsersByUserIDs,
                    request_deserializer=users__pb2.ParamGetUsersByUserIDs.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'CheckNIK': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckNIK,
                    request_deserializer=users__pb2.ParamCheckNIK.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'UpdateFreezeAccountStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateFreezeAccountStatus,
                    request_deserializer=users__pb2.ParamUpdateFreezeAccountStatus.FromString,
                    response_serializer=users__pb2.OutputUserAccount.SerializeToString,
            ),
            'UpdateBulkFreezeAccountStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateBulkFreezeAccountStatus,
                    request_deserializer=users__pb2.ParamUpdateBulkFreezeAccountStatus.FromString,
                    response_serializer=users__pb2.OutputBulkFreezeAccount.SerializeToString,
            ),
            'GetUserMark': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserMark,
                    request_deserializer=users__pb2.GetUserMarkArguments.FromString,
                    response_serializer=users__pb2.GetUserMarkResponses.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'packets.Users', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Users(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def RegisterPersonalBulk(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/RegisterPersonalBulk',
            users__pb2.ParamRegisterPersonalBulk.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RegisterSMEBusinessEx(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/RegisterSMEBusinessEx',
            users__pb2.RegisterSMEBusinessExArguments.SerializeToString,
            users__pb2.RegisterSMEBusinessExResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetUser',
            users__pb2.ParamGetUser.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserByEmail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetUserByEmail',
            users__pb2.ParamGetUserByEmail.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ComparePassword(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/ComparePassword',
            users__pb2.ParamComparePassword.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ComparePin(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/ComparePin',
            users__pb2.ParamComparePin.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserDocument(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetUserDocument',
            users__pb2.ParamGetUserDocuments.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserDocumentById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetUserDocumentById',
            users__pb2.ParamGetUserDocumentById.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserDocumentByGroupKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetUserDocumentByGroupKey',
            users__pb2.ParamGetUserDocumentByGroupKey.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserDocumentByGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetUserDocumentByGroup',
            users__pb2.ParamGetUserDocumentByGroup.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserDocumentByKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetUserDocumentByKey',
            users__pb2.ParamGetUserDocumentByKey.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserDocumentByProductValue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetUserDocumentByProductValue',
            users__pb2.ParamGetUserDocumentByProductValue.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateUserDocument(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/CreateUserDocument',
            users__pb2.ParamCreateUserDocument.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateUserDocument(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/UpdateUserDocument',
            users__pb2.ParamUpdateUserDocument.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateUserDocumentWithProp(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/UpdateUserDocumentWithProp',
            users__pb2.ParamUpdateUserDocument.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateRequiredDocument(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/CreateRequiredDocument',
            users__pb2.ParamCreateRequiredDocument.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserDocumentList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetUserDocumentList',
            users__pb2.ParamGetUserDocumentList.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserProfile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetUserProfile',
            users__pb2.ParamGetUserProfile.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserProfileById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetUserProfileById',
            users__pb2.ParamGetUserProfileById.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserProfileByGroupKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetUserProfileByGroupKey',
            users__pb2.ParamGetUserProfileByGroupKey.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserProfileByGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetUserProfileByGroup',
            users__pb2.ParamGetUserProfileByGroup.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserProfileByKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetUserProfileByKey',
            users__pb2.ParamGetUserProfileByKey.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateUserProfile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/CreateUserProfile',
            users__pb2.ParamCreateUserProfile.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateUserProfile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/UpdateUserProfile',
            users__pb2.ParamUpdateUserProfile.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserBusinessProfile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetUserBusinessProfile',
            users__pb2.ParamGetUserBusinessProfile.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserBusinessProfileById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetUserBusinessProfileById',
            users__pb2.ParamGetUserBusinessProfileById.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserBusinessProfileByGroupKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetUserBusinessProfileByGroupKey',
            users__pb2.ParamGetUserBusinessProfileByGroupKey.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserBusinessProfileByGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetUserBusinessProfileByGroup',
            users__pb2.ParamGetUserBusinessProfileByGroup.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserBusinessProfileByKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetUserBusinessProfileByKey',
            users__pb2.ParamGetUserBusinessProfileByKey.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateUserBusinessProfile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/CreateUserBusinessProfile',
            users__pb2.ParamCreateUserBusinessProfile.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateUserBusinessProfile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/UpdateUserBusinessProfile',
            users__pb2.ParamUpdateUserBusinessProfile.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserPrimaryBank(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetUserPrimaryBank',
            users__pb2.ParamGetUserPrimaryBank.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubmitUserPrimaryBank(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/SubmitUserPrimaryBank',
            users__pb2.ParamSubmitUserPrimaryBank.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserBanks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetUserBanks',
            users__pb2.ParamGetUserBanks.SerializeToString,
            users__pb2.OutputUserBanks.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateUserBank(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/CreateUserBank',
            users__pb2.ParamCreateUserBank.SerializeToString,
            users__pb2.OutputUserBank.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserBankByID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetUserBankByID',
            users__pb2.GetUserBankByIDArguments.SerializeToString,
            users__pb2.UserBank.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserDevice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetUserDevice',
            users__pb2.ParamGetUserDevice.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserDeviceById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetUserDeviceById',
            users__pb2.ParamGetUserDeviceById.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateUserDevice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/CreateUserDevice',
            users__pb2.ParamCreateUserDevice.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateUserDevice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/UpdateUserDevice',
            users__pb2.ParamUpdateUserDevice.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserBalance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetUserBalance',
            users__pb2.ParamGetUserBalance.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateUserBalance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/CreateUserBalance',
            users__pb2.ParamCreateUserBalance.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateUserBalance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/UpdateUserBalance',
            users__pb2.ParamUpdateUserBalance.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetVirtualAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetVirtualAccount',
            users__pb2.ParamGetVirtualAccount.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetVirtualAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/SetVirtualAccount',
            users__pb2.ParamSetVirtualAccount.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetVirtualAccountById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetVirtualAccountById',
            users__pb2.ParamGetVirtualAccountById.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetVirtualAccountByNumber(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetVirtualAccountByNumber',
            users__pb2.ParamGetVirtualAccountByNumber.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetVirtualAccountByUserIds(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetVirtualAccountByUserIds',
            users__pb2.ParamGetVirtualAccountByUserIds.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateVirtualAccounts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/CreateVirtualAccounts',
            users__pb2.ParamCreateVirtualAccounts.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateVirtualAccounts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/UpdateVirtualAccounts',
            users__pb2.ParamUpdateVirtuaAccounts.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateVirtualAccountsV2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/UpdateVirtualAccountsV2',
            users__pb2.ParamUpdateVirtualAccounts.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GenerateVirtualAccounts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GenerateVirtualAccounts',
            users__pb2.ParamGenerateVirtualAccounts.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserActivity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetUserActivity',
            users__pb2.ParamGetUserActivity.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateUserActivity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/CreateUserActivity',
            users__pb2.ParamCreateUserActivity.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddUserReferralReward(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/AddUserReferralReward',
            users__pb2.ParamAddUserReferralReward.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckRequirementProfile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/CheckRequirementProfile',
            users__pb2.ParamCheckRequirementProfile.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateAccountStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/UpdateAccountStatus',
            users__pb2.ParamUpdateAccountStatus.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateLegalStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/UpdateLegalStatus',
            users__pb2.ParamUpdateLegalStatus.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdatePreviousLegalStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/UpdatePreviousLegalStatus',
            users__pb2.ParamUpdatePreviousLegalStatus.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserSibling(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetUserSibling',
            users__pb2.ParamGetUserSibling.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserSiblingByID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetUserSiblingByID',
            users__pb2.ParamGetUserSiblingByID.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RegisterFifaParent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/RegisterFifaParent',
            users__pb2.UserAccountFifaParent.SerializeToString,
            users__pb2.GenerateTokenResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RegisterFifaChild(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/RegisterFifaChild',
            users__pb2.UserAccountFifaChild.SerializeToString,
            users__pb2.GenerateTokenResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetParentIdByChildUserID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetParentIdByChildUserID',
            users__pb2.ParamGetParentID.SerializeToString,
            users__pb2.ParentID.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetParentInfoByChildUserID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetParentInfoByChildUserID',
            users__pb2.ParamGetParentInfoByChildID.SerializeToString,
            users__pb2.ParentInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UserLetterOfAuthority(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/UserLetterOfAuthority',
            users__pb2.ParamUserLetterOfAuthority.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateActivationLink(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/UpdateActivationLink',
            users__pb2.ParamUpdateActivationLink.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserVerificationData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetUserVerificationData',
            users__pb2.ParamGetUserVerificationData.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMultipleUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetMultipleUser',
            users__pb2.ParamGetMultipleUser.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckCompanyType(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/CheckCompanyType',
            users__pb2.ParamCheck.SerializeToString,
            users__pb2.OutputCheck.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckConnectBank(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/CheckConnectBank',
            users__pb2.ParamCheck.SerializeToString,
            users__pb2.OutputCheck.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckMaritalStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/CheckMaritalStatus',
            users__pb2.ParamCheck.SerializeToString,
            users__pb2.OutputCheck.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckBusinessDocument(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/CheckBusinessDocument',
            users__pb2.ParamCheck.SerializeToString,
            users__pb2.OutputCheck.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckSpouseDocument(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/CheckSpouseDocument',
            users__pb2.ParamCheck.SerializeToString,
            users__pb2.OutputCheck.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckBankMutation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/CheckBankMutation',
            users__pb2.ParamCheck.SerializeToString,
            users__pb2.ParamOutputDocumentType.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckNIKExists(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/CheckNIKExists',
            users__pb2.ParamCheckNIKExists.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserByNIK(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetUserByNIK',
            users__pb2.ParamGetUserByNIK.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSelfieScore(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetSelfieScore',
            users__pb2.ParamCheck.SerializeToString,
            users__pb2.OutputCheck.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteBankMutation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/DeleteBankMutation',
            users__pb2.ParamDeleteUserDocument.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetUserRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/SetUserRole',
            users__pb2.InputUserRole.SerializeToString,
            users__pb2.OutputUserRole.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPersonalProfile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetPersonalProfile',
            users__pb2.ParamGetPersonalProfile.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBusinessProfile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetBusinessProfile',
            users__pb2.ParamGetBusinessProfile.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateProductUserReferralCode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/CreateProductUserReferralCode',
            users__pb2.ParamCreateProductUserReferralCode.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBasicProfile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetBasicProfile',
            users__pb2.ParamGetProfile.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubmitBasicProfile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/SubmitBasicProfile',
            users__pb2.ParamSubmitProfile.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLegalProfile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetLegalProfile',
            users__pb2.ParamGetProfile.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubmitLegalProfile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/SubmitLegalProfile',
            users__pb2.ParamSubmitProfile.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFinancialProfile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetFinancialProfile',
            users__pb2.ParamGetProfile.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubmitFinancialProfile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/SubmitFinancialProfile',
            users__pb2.ParamSubmitProfile.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubmitAddititonalInformationProfile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/SubmitAddititonalInformationProfile',
            users__pb2.ParamSubmitProfile.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetEAVProfile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetEAVProfile',
            users__pb2.EAVFilter.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RequestUpdateProfile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/RequestUpdateProfile',
            users__pb2.ParamRequestUpdateProfile.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetVerifiedPersonalProfile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetVerifiedPersonalProfile',
            users__pb2.ParamGetProfile.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetVerifiedBusinessProfile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetVerifiedBusinessProfile',
            users__pb2.ParamGetProfile.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserConnectBank(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetUserConnectBank',
            users__pb2.ParamGetUserConnectBank.SerializeToString,
            users__pb2.OutputUserConnectBank.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserConnectMutations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetUserConnectMutations',
            users__pb2.ParamGetUserConnectMutations.SerializeToString,
            users__pb2.OutputGetUserConnectMutations.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateBankMutations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/CreateBankMutations',
            users__pb2.ParamCreateBankMutations.SerializeToString,
            users__pb2.OutputCreateBankMutations.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RegisterPartner(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/RegisterPartner',
            users__pb2.ParamSubmitProfile.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserAllData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetUserAllData',
            users__pb2.ParamGetUser.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserByVirtualAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetUserByVirtualAccount',
            users__pb2.ParamGetUserByVirtualAccountsNumber.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTotalUserByLenderType(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetTotalUserByLenderType',
            users__pb2.ParamGetTotalUserByLenderType.SerializeToString,
            users__pb2.OutputTotalUserByLenderType.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateSID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/UpdateSID',
            users__pb2.ParamUpdateSID.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserLenderType(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetUserLenderType',
            users__pb2.ParamGetUser.SerializeToString,
            users__pb2.OutputUserLenderType.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetListChildIDByParentID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetListChildIDByParentID',
            users__pb2.ParamGetUser.SerializeToString,
            users__pb2.OutputMultipleUser.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserRefListByUserReferrer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetUserRefListByUserReferrer',
            users__pb2.ParamGetUserRefListByUserReferrer.SerializeToString,
            users__pb2.OutputGetUserRefListByUserReferrer.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserRefByUserIdAndProductType(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetUserRefByUserIdAndProductType',
            users__pb2.ParamGetUserRefByUserAndProduct.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchUserByKeywords(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/SearchUserByKeywords',
            users__pb2.ParamSearchUserByKeywords.SerializeToString,
            users__pb2.OutputSearchUser.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/SearchUser',
            users__pb2.ParamSearchUser.SerializeToString,
            users__pb2.OutputSearchUser.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RegisterSME(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/RegisterSME',
            users__pb2.ParamUserAccountSME.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdatePersonalEmergencyContact(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/UpdatePersonalEmergencyContact',
            users__pb2.ParamUpdatePersonalEmergencyContact.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserPromo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetUserPromo',
            users__pb2.ParamGetUserPromo.SerializeToString,
            users__pb2.OutputGetUserPromo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserPromoByID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetUserPromoByID',
            users__pb2.ParamGetUserPromoByID.SerializeToString,
            users__pb2.OutputGetUserPromoByID.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateUserPromo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/CreateUserPromo',
            users__pb2.ParamCreateUserPromo.SerializeToString,
            users__pb2.OutputCreateUserPromo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateUserPromo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/UpdateUserPromo',
            users__pb2.ParamUpdateUserPromo.SerializeToString,
            users__pb2.OutputUpdateUserPromo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteUserPromo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/DeleteUserPromo',
            users__pb2.ParamDeleteUserPromo.SerializeToString,
            users__pb2.OutputDeleteUserPromo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GenerateTokenUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GenerateTokenUser',
            users__pb2.ParamGenerateTokenUser.SerializeToString,
            users__pb2.OutputGenerateTokenUser.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserRegisterMMI(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetUserRegisterMMI',
            users__pb2.ParamGetUserRegisterMMI.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateUserRegisterMMI(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/UpdateUserRegisterMMI',
            users__pb2.ParamUpdateUserRegisterMMI.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserByPhoneNumber(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetUserByPhoneNumber',
            users__pb2.ParamGetUserByPhoneNumber.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserByPhone(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetUserByPhone',
            users__pb2.GetUserByPhoneArguments.SerializeToString,
            users__pb2.GetUserByPhoneResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserByPhoneBatch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetUserByPhoneBatch',
            users__pb2.GetUserByPhoneBatchArguments.SerializeToString,
            users__pb2.GetUserByPhoneBatchResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserByCode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetUserByCode',
            users__pb2.GetUserByCodeArguments.SerializeToString,
            users__pb2.BasicUserObject.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserRefList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetUserRefList',
            users__pb2.GetUserRefListArguments.SerializeToString,
            users__pb2.GetUserRefListResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSuperAppKoinPageReferral(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetSuperAppKoinPageReferral',
            users__pb2.GetSuperAppKoinPageReferralArguments.SerializeToString,
            users__pb2.GetSuperAppKoinPageReferralResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateBankConnectRequestByToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/UpdateBankConnectRequestByToken',
            users__pb2.UpdateBankConnectRequestByTokenArguments.SerializeToString,
            users__pb2.UpdateBankConnectRequestByTokenResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateBankConnectRequestByID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/UpdateBankConnectRequestByID',
            users__pb2.UpdateBankConnectRequestByIDArguments.SerializeToString,
            users__pb2.UpdateBankConnectRequestByIDResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBankConnectRequestByLoanID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetBankConnectRequestByLoanID',
            users__pb2.GetBankConnectRequestByLoanIDArguments.SerializeToString,
            users__pb2.GetBankConnectRequestByLoanIDResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRequiredDocumentList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetRequiredDocumentList',
            users__pb2.GetRequiredDocumentListArguments.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserVendorListByVendorUUID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetUserVendorListByVendorUUID',
            users__pb2.GetUserVendorListByVendorUUIDArguments.SerializeToString,
            users__pb2.GetUserVendorListByVendorUUIDResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckUserVendor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/CheckUserVendor',
            users__pb2.CheckUserVendorArguments.SerializeToString,
            users__pb2.CheckUserVendorResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AssignUserToVendor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/AssignUserToVendor',
            users__pb2.AssignUserToVendorArguments.SerializeToString,
            users__pb2.AssignUserToVendorResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetUserList',
            common__pb2.PViewArguments.SerializeToString,
            common__pb2.PViewResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SigningBucketURL(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/SigningBucketURL',
            users__pb2.SigningBucketURLArguments.SerializeToString,
            users__pb2.SigningBucketURLResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/CreateUser',
            users__pb2.CreateUserArguments.SerializeToString,
            users__pb2.CreateUserResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateUserFullName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/UpdateUserFullName',
            users__pb2.UpdateUserFullNameArguments.SerializeToString,
            users__pb2.UpdateUserFullNameResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetListUserFilteredByEmail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetListUserFilteredByEmail',
            users__pb2.UserFilteredByEmailArguments.SerializeToString,
            users__pb2.UserFilteredByEmailResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserSuspicious(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetUserSuspicious',
            users__pb2.GetUserSuspiciousArguments.SerializeToString,
            users__pb2.GetUserSuspiciousResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetUserSuspicious(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/SetUserSuspicious',
            users__pb2.SetUserSuspiciousArguments.SerializeToString,
            users__pb2.SetUserSuspiciousResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUnsyncedUsers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetUnsyncedUsers',
            users__pb2.GetUnsyncedUserArguments.SerializeToString,
            users__pb2.UnsyncedUserResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateSyncUsers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/UpdateSyncUsers',
            users__pb2.UpdateSyncUsersArguments.SerializeToString,
            users__pb2.SyncUsersResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RetrieveMultipleUsersByUserIDs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/RetrieveMultipleUsersByUserIDs',
            users__pb2.ParamGetUsersByUserIDs.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckNIK(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/CheckNIK',
            users__pb2.ParamCheckNIK.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateFreezeAccountStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/UpdateFreezeAccountStatus',
            users__pb2.ParamUpdateFreezeAccountStatus.SerializeToString,
            users__pb2.OutputUserAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateBulkFreezeAccountStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/UpdateBulkFreezeAccountStatus',
            users__pb2.ParamUpdateBulkFreezeAccountStatus.SerializeToString,
            users__pb2.OutputBulkFreezeAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserMark(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.Users/GetUserMark',
            users__pb2.GetUserMarkArguments.SerializeToString,
            users__pb2.GetUserMarkResponses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
