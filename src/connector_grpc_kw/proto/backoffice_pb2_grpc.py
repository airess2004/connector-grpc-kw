# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import backoffice_pb2 as backoffice__pb2


class BackOfficeStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetAssetTransfer = channel.unary_unary(
                '/packets.BackOffice/GetAssetTransfer',
                request_serializer=backoffice__pb2.InputGetAssetTransfer.SerializeToString,
                response_deserializer=backoffice__pb2.AssetTransfer.FromString,
                )
        self.GetAssetTransferDetailsByAssetTransferID = channel.unary_unary(
                '/packets.BackOffice/GetAssetTransferDetailsByAssetTransferID',
                request_serializer=backoffice__pb2.InputGetAssetTransferDetailsByAssetTransferID.SerializeToString,
                response_deserializer=backoffice__pb2.AssetTransferDetails.FromString,
                )
        self.UpdateAssetTransferDetailStatus = channel.unary_unary(
                '/packets.BackOffice/UpdateAssetTransferDetailStatus',
                request_serializer=backoffice__pb2.InputUpdateAssetTransferDetail.SerializeToString,
                response_deserializer=backoffice__pb2.OutputUpdateAssetTransferDetail.FromString,
                )
        self.CreateAssetTransfer = channel.unary_unary(
                '/packets.BackOffice/CreateAssetTransfer',
                request_serializer=backoffice__pb2.InputCreateAssetTransfer.SerializeToString,
                response_deserializer=backoffice__pb2.OutputCreateAssetTransfer.FromString,
                )
        self.CreateAssetTransferDetail = channel.unary_unary(
                '/packets.BackOffice/CreateAssetTransferDetail',
                request_serializer=backoffice__pb2.InputCreateAssetTransferDetail.SerializeToString,
                response_deserializer=backoffice__pb2.OutputCreateAssetTransferDetail.FromString,
                )
        self.CreateManualKoinInvoicePayment = channel.unary_unary(
                '/packets.BackOffice/CreateManualKoinInvoicePayment',
                request_serializer=backoffice__pb2.InputCreateManualKoinInvoicePayment.SerializeToString,
                response_deserializer=backoffice__pb2.OutputCreateManualKoinInvoicePayment.FromString,
                )
        self.GetListManualKoinInvoice = channel.unary_unary(
                '/packets.BackOffice/GetListManualKoinInvoice',
                request_serializer=backoffice__pb2.InputGetManualKoinInvoice.SerializeToString,
                response_deserializer=backoffice__pb2.OutputGetManualKoinInvoice.FromString,
                )
        self.GetListRoles = channel.unary_unary(
                '/packets.BackOffice/GetListRoles',
                request_serializer=backoffice__pb2.ParamGetListRoles.SerializeToString,
                response_deserializer=backoffice__pb2.OutputGetListRoles.FromString,
                )
        self.GetRolesByID = channel.unary_unary(
                '/packets.BackOffice/GetRolesByID',
                request_serializer=backoffice__pb2.ParamGetRolesByID.SerializeToString,
                response_deserializer=backoffice__pb2.OutputGetRolesByID.FromString,
                )
        self.GetAdmin = channel.unary_unary(
                '/packets.BackOffice/GetAdmin',
                request_serializer=backoffice__pb2.ParamGetAdmin.SerializeToString,
                response_deserializer=backoffice__pb2.OutputGetAdmin.FromString,
                )
        self.GetAdminsByRoles = channel.unary_unary(
                '/packets.BackOffice/GetAdminsByRoles',
                request_serializer=backoffice__pb2.ParamGetAdminsByRoles.SerializeToString,
                response_deserializer=backoffice__pb2.OutputGetAdminsByRoles.FromString,
                )


class BackOfficeServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetAssetTransfer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAssetTransferDetailsByAssetTransferID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateAssetTransferDetailStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateAssetTransfer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateAssetTransferDetail(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateManualKoinInvoicePayment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetListManualKoinInvoice(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetListRoles(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRolesByID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAdmin(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAdminsByRoles(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BackOfficeServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetAssetTransfer': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAssetTransfer,
                    request_deserializer=backoffice__pb2.InputGetAssetTransfer.FromString,
                    response_serializer=backoffice__pb2.AssetTransfer.SerializeToString,
            ),
            'GetAssetTransferDetailsByAssetTransferID': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAssetTransferDetailsByAssetTransferID,
                    request_deserializer=backoffice__pb2.InputGetAssetTransferDetailsByAssetTransferID.FromString,
                    response_serializer=backoffice__pb2.AssetTransferDetails.SerializeToString,
            ),
            'UpdateAssetTransferDetailStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateAssetTransferDetailStatus,
                    request_deserializer=backoffice__pb2.InputUpdateAssetTransferDetail.FromString,
                    response_serializer=backoffice__pb2.OutputUpdateAssetTransferDetail.SerializeToString,
            ),
            'CreateAssetTransfer': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateAssetTransfer,
                    request_deserializer=backoffice__pb2.InputCreateAssetTransfer.FromString,
                    response_serializer=backoffice__pb2.OutputCreateAssetTransfer.SerializeToString,
            ),
            'CreateAssetTransferDetail': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateAssetTransferDetail,
                    request_deserializer=backoffice__pb2.InputCreateAssetTransferDetail.FromString,
                    response_serializer=backoffice__pb2.OutputCreateAssetTransferDetail.SerializeToString,
            ),
            'CreateManualKoinInvoicePayment': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateManualKoinInvoicePayment,
                    request_deserializer=backoffice__pb2.InputCreateManualKoinInvoicePayment.FromString,
                    response_serializer=backoffice__pb2.OutputCreateManualKoinInvoicePayment.SerializeToString,
            ),
            'GetListManualKoinInvoice': grpc.unary_unary_rpc_method_handler(
                    servicer.GetListManualKoinInvoice,
                    request_deserializer=backoffice__pb2.InputGetManualKoinInvoice.FromString,
                    response_serializer=backoffice__pb2.OutputGetManualKoinInvoice.SerializeToString,
            ),
            'GetListRoles': grpc.unary_unary_rpc_method_handler(
                    servicer.GetListRoles,
                    request_deserializer=backoffice__pb2.ParamGetListRoles.FromString,
                    response_serializer=backoffice__pb2.OutputGetListRoles.SerializeToString,
            ),
            'GetRolesByID': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRolesByID,
                    request_deserializer=backoffice__pb2.ParamGetRolesByID.FromString,
                    response_serializer=backoffice__pb2.OutputGetRolesByID.SerializeToString,
            ),
            'GetAdmin': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAdmin,
                    request_deserializer=backoffice__pb2.ParamGetAdmin.FromString,
                    response_serializer=backoffice__pb2.OutputGetAdmin.SerializeToString,
            ),
            'GetAdminsByRoles': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAdminsByRoles,
                    request_deserializer=backoffice__pb2.ParamGetAdminsByRoles.FromString,
                    response_serializer=backoffice__pb2.OutputGetAdminsByRoles.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'packets.BackOffice', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BackOffice(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetAssetTransfer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.BackOffice/GetAssetTransfer',
            backoffice__pb2.InputGetAssetTransfer.SerializeToString,
            backoffice__pb2.AssetTransfer.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAssetTransferDetailsByAssetTransferID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.BackOffice/GetAssetTransferDetailsByAssetTransferID',
            backoffice__pb2.InputGetAssetTransferDetailsByAssetTransferID.SerializeToString,
            backoffice__pb2.AssetTransferDetails.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateAssetTransferDetailStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.BackOffice/UpdateAssetTransferDetailStatus',
            backoffice__pb2.InputUpdateAssetTransferDetail.SerializeToString,
            backoffice__pb2.OutputUpdateAssetTransferDetail.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateAssetTransfer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.BackOffice/CreateAssetTransfer',
            backoffice__pb2.InputCreateAssetTransfer.SerializeToString,
            backoffice__pb2.OutputCreateAssetTransfer.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateAssetTransferDetail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.BackOffice/CreateAssetTransferDetail',
            backoffice__pb2.InputCreateAssetTransferDetail.SerializeToString,
            backoffice__pb2.OutputCreateAssetTransferDetail.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateManualKoinInvoicePayment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.BackOffice/CreateManualKoinInvoicePayment',
            backoffice__pb2.InputCreateManualKoinInvoicePayment.SerializeToString,
            backoffice__pb2.OutputCreateManualKoinInvoicePayment.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetListManualKoinInvoice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.BackOffice/GetListManualKoinInvoice',
            backoffice__pb2.InputGetManualKoinInvoice.SerializeToString,
            backoffice__pb2.OutputGetManualKoinInvoice.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetListRoles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.BackOffice/GetListRoles',
            backoffice__pb2.ParamGetListRoles.SerializeToString,
            backoffice__pb2.OutputGetListRoles.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRolesByID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.BackOffice/GetRolesByID',
            backoffice__pb2.ParamGetRolesByID.SerializeToString,
            backoffice__pb2.OutputGetRolesByID.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAdmin(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.BackOffice/GetAdmin',
            backoffice__pb2.ParamGetAdmin.SerializeToString,
            backoffice__pb2.OutputGetAdmin.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAdminsByRoles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packets.BackOffice/GetAdminsByRoles',
            backoffice__pb2.ParamGetAdminsByRoles.SerializeToString,
            backoffice__pb2.OutputGetAdminsByRoles.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
